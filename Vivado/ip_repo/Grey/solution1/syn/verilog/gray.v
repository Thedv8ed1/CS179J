// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="gray_gray,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3555,HLS_SYN_LUT=4849,HLS_VERSION=2020_2}" *)

module gray (
        ap_clk,
        ap_rst_n,
        in_data_TDATA,
        in_data_TVALID,
        in_data_TREADY,
        in_data_TKEEP,
        in_data_TSTRB,
        in_data_TUSER,
        in_data_TLAST,
        in_data_TID,
        in_data_TDEST,
        out_data_TDATA,
        out_data_TVALID,
        out_data_TREADY,
        out_data_TKEEP,
        out_data_TSTRB,
        out_data_TUSER,
        out_data_TLAST,
        out_data_TID,
        out_data_TDEST
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state34 = 3'd4;

input   ap_clk;
input   ap_rst_n;
input  [23:0] in_data_TDATA;
input   in_data_TVALID;
output   in_data_TREADY;
input  [2:0] in_data_TKEEP;
input  [2:0] in_data_TSTRB;
input  [0:0] in_data_TUSER;
input  [0:0] in_data_TLAST;
input  [0:0] in_data_TID;
input  [0:0] in_data_TDEST;
output  [23:0] out_data_TDATA;
output   out_data_TVALID;
input   out_data_TREADY;
output  [2:0] out_data_TKEEP;
output  [2:0] out_data_TSTRB;
output  [0:0] out_data_TUSER;
output  [0:0] out_data_TLAST;
output  [0:0] out_data_TID;
output  [0:0] out_data_TDEST;

 reg    ap_rst_n_inv;
reg    in_data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    out_data_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg   [2:0] tmp_i36_keep_reg_469;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
reg    ap_block_state32_pp0_stage0_iter30;
reg    ap_block_state33_pp0_stage0_iter31;
reg    ap_block_pp0_stage0_11001;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter1_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter2_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter3_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter4_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter5_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter6_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter7_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter8_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter9_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter10_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter11_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter12_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter13_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter14_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter15_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter16_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter17_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter18_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter19_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter20_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter21_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter22_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter23_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter24_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter25_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter26_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter27_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter28_reg;
reg   [2:0] tmp_i36_keep_reg_469_pp0_iter29_reg;
reg   [2:0] tmp_i36_strb_reg_474;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter1_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter2_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter3_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter4_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter5_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter6_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter7_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter8_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter9_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter10_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter11_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter12_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter13_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter14_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter15_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter16_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter17_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter18_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter19_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter20_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter21_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter22_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter23_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter24_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter25_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter26_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter27_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter28_reg;
reg   [2:0] tmp_i36_strb_reg_474_pp0_iter29_reg;
reg   [0:0] tmp_i36_user_reg_479;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter1_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter2_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter3_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter4_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter5_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter6_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter7_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter8_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter9_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter10_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter11_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter12_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter13_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter14_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter15_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter16_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter17_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter18_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter19_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter20_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter21_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter22_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter23_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter24_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter25_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter26_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter27_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter28_reg;
reg   [0:0] tmp_i36_user_reg_479_pp0_iter29_reg;
wire   [0:0] p_last_V_fu_197_p1;
reg   [0:0] p_last_V_reg_484;
reg   [0:0] p_last_V_reg_484_pp0_iter1_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter2_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter3_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter4_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter5_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter6_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter7_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter8_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter9_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter10_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter11_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter12_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter13_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter14_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter15_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter16_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter17_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter18_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter19_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter20_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter21_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter22_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter23_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter24_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter25_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter26_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter27_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter28_reg;
reg   [0:0] p_last_V_reg_484_pp0_iter29_reg;
reg   [0:0] tmp_i36_id_reg_489;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter1_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter2_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter3_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter4_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter5_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter6_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter7_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter8_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter9_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter10_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter11_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter12_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter13_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter14_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter15_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter16_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter17_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter18_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter19_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter20_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter21_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter22_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter23_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter24_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter25_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter26_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter27_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter28_reg;
reg   [0:0] tmp_i36_id_reg_489_pp0_iter29_reg;
reg   [0:0] tmp_i36_dest_reg_494;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter1_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter2_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter3_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter4_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter5_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter6_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter7_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter8_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter9_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter10_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter11_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter12_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter13_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter14_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter15_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter16_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter17_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter18_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter19_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter20_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter21_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter22_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter23_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter24_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter25_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter26_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter27_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter28_reg;
reg   [0:0] tmp_i36_dest_reg_494_pp0_iter29_reg;
wire   [7:0] op2_1_fu_209_p1;
reg   [7:0] op2_1_reg_499;
reg   [7:0] op2_1_reg_499_pp0_iter1_reg;
reg   [7:0] op2_1_reg_499_pp0_iter2_reg;
reg   [7:0] op2_1_reg_499_pp0_iter3_reg;
reg   [7:0] op2_1_reg_499_pp0_iter4_reg;
reg   [7:0] op2_1_reg_499_pp0_iter5_reg;
reg   [7:0] op2_1_reg_499_pp0_iter6_reg;
wire   [63:0] grp_fu_172_p1;
reg   [63:0] conv_i_reg_514;
wire   [63:0] grp_fu_175_p1;
reg   [63:0] conv_i6_reg_519;
wire   [63:0] grp_fu_157_p2;
reg   [63:0] mul_i1_reg_529;
wire   [63:0] grp_fu_162_p2;
reg   [63:0] mul_i7_reg_534;
wire   [63:0] grp_fu_178_p1;
reg   [63:0] conv_i2_reg_539;
wire   [63:0] grp_fu_149_p2;
reg   [63:0] add_reg_544;
wire   [63:0] grp_fu_167_p2;
reg   [63:0] mul_i_reg_549;
wire   [63:0] grp_fu_153_p2;
reg   [63:0] val_reg_554;
wire   [63:0] reg_fu_247_p1;
reg   [63:0] reg_reg_559;
reg   [0:0] p_Result_s_reg_564;
reg   [0:0] p_Result_s_reg_564_pp0_iter28_reg;
reg   [0:0] p_Result_s_reg_564_pp0_iter29_reg;
wire   [23:0] trunc_ln328_fu_276_p1;
reg   [23:0] trunc_ln328_reg_569;
reg   [23:0] trunc_ln328_reg_569_pp0_iter28_reg;
wire   [0:0] icmp_ln323_fu_280_p2;
reg   [0:0] icmp_ln323_reg_575;
reg   [0:0] icmp_ln323_reg_575_pp0_iter28_reg;
wire  signed [11:0] sh_amt_fu_286_p2;
reg  signed [11:0] sh_amt_reg_582;
wire   [0:0] icmp_ln327_fu_292_p2;
reg   [0:0] icmp_ln327_reg_589;
reg   [0:0] icmp_ln327_reg_589_pp0_iter28_reg;
wire   [0:0] icmp_ln329_fu_298_p2;
reg   [0:0] icmp_ln329_reg_595;
wire  signed [11:0] sh_amt_1_fu_324_p2;
reg  signed [11:0] sh_amt_1_reg_601;
wire   [23:0] select_ln330_fu_373_p3;
reg   [23:0] select_ln330_reg_606;
wire   [0:0] and_ln337_fu_392_p2;
reg   [0:0] and_ln337_reg_611;
wire   [0:0] or_ln330_fu_410_p2;
reg   [0:0] or_ln330_reg_616;
wire   [23:0] select_ln327_fu_450_p3;
reg   [23:0] select_ln327_reg_621;
wire    ap_CS_fsm_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_172_p0;
wire   [63:0] grp_fu_175_p0;
wire   [63:0] grp_fu_178_p0;
wire   [7:0] r_fu_213_p4;
wire   [7:0] op2_fu_228_p4;
wire   [10:0] exp_fu_262_p4;
wire   [62:0] trunc_ln306_fu_250_p1;
wire   [11:0] zext_ln311_fu_272_p1;
wire   [51:0] trunc_ln315_fu_304_p1;
wire   [52:0] p_Result_1_fu_307_p3;
wire  signed [31:0] sext_ln331_fu_335_p1;
wire   [53:0] zext_ln320_fu_315_p1;
wire   [53:0] zext_ln331_fu_338_p1;
wire   [53:0] lshr_ln331_fu_342_p2;
wire   [0:0] or_ln327_fu_352_p2;
wire   [0:0] xor_ln327_fu_356_p2;
wire   [0:0] and_ln329_fu_362_p2;
wire   [0:0] icmp_ln330_fu_319_p2;
wire   [0:0] and_ln330_fu_367_p2;
wire   [23:0] trunc_ln331_fu_348_p1;
wire   [0:0] or_ln329_fu_381_p2;
wire   [0:0] icmp_ln337_fu_329_p2;
wire   [0:0] xor_ln329_fu_386_p2;
wire   [0:0] xor_ln330_fu_398_p2;
wire   [0:0] and_ln330_1_fu_404_p2;
wire  signed [31:0] sext_ln326_fu_415_p1;
wire   [23:0] sext_ln326cast_fu_418_p1;
wire   [23:0] shl_ln339_fu_422_p2;
wire   [23:0] select_ln337_fu_427_p3;
wire   [0:0] xor_ln323_fu_440_p2;
wire   [0:0] and_ln327_fu_445_p2;
wire   [23:0] select_ln330_1_fu_433_p3;
wire   [23:0] sub_ln455_fu_457_p2;
reg    grp_fu_149_ce;
reg    grp_fu_153_ce;
reg    grp_fu_157_ce;
reg    grp_fu_162_ce;
reg    grp_fu_167_ce;
reg    grp_fu_172_ce;
reg    grp_fu_175_ce;
reg    grp_fu_178_ce;
reg   [2:0] ap_NS_fsm;
wire    ap_CS_fsm_state34;
wire    regslice_both_out_data_V_data_V_U_apdone_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_in_data_V_data_V_U_apdone_blk;
wire   [23:0] in_data_TDATA_int_regslice;
wire    in_data_TVALID_int_regslice;
reg    in_data_TREADY_int_regslice;
wire    regslice_both_in_data_V_data_V_U_ack_in;
wire    regslice_both_in_data_V_keep_V_U_apdone_blk;
wire   [2:0] in_data_TKEEP_int_regslice;
wire    regslice_both_in_data_V_keep_V_U_vld_out;
wire    regslice_both_in_data_V_keep_V_U_ack_in;
wire    regslice_both_in_data_V_strb_V_U_apdone_blk;
wire   [2:0] in_data_TSTRB_int_regslice;
wire    regslice_both_in_data_V_strb_V_U_vld_out;
wire    regslice_both_in_data_V_strb_V_U_ack_in;
wire    regslice_both_in_data_V_user_V_U_apdone_blk;
wire   [0:0] in_data_TUSER_int_regslice;
wire    regslice_both_in_data_V_user_V_U_vld_out;
wire    regslice_both_in_data_V_user_V_U_ack_in;
wire    regslice_both_in_data_V_last_V_U_apdone_blk;
wire   [0:0] in_data_TLAST_int_regslice;
wire    regslice_both_in_data_V_last_V_U_vld_out;
wire    regslice_both_in_data_V_last_V_U_ack_in;
wire    regslice_both_in_data_V_id_V_U_apdone_blk;
wire   [0:0] in_data_TID_int_regslice;
wire    regslice_both_in_data_V_id_V_U_vld_out;
wire    regslice_both_in_data_V_id_V_U_ack_in;
wire    regslice_both_in_data_V_dest_V_U_apdone_blk;
wire   [0:0] in_data_TDEST_int_regslice;
wire    regslice_both_in_data_V_dest_V_U_vld_out;
wire    regslice_both_in_data_V_dest_V_U_ack_in;
wire   [23:0] out_data_TDATA_int_regslice;
reg    out_data_TVALID_int_regslice;
wire    out_data_TREADY_int_regslice;
wire    regslice_both_out_data_V_data_V_U_vld_out;
wire    regslice_both_out_data_V_keep_V_U_apdone_blk;
wire    regslice_both_out_data_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_data_V_keep_V_U_vld_out;
wire    regslice_both_out_data_V_strb_V_U_apdone_blk;
wire    regslice_both_out_data_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_data_V_strb_V_U_vld_out;
wire    regslice_both_out_data_V_user_V_U_apdone_blk;
wire    regslice_both_out_data_V_user_V_U_ack_in_dummy;
wire    regslice_both_out_data_V_user_V_U_vld_out;
wire    regslice_both_out_data_V_last_V_U_apdone_blk;
wire    regslice_both_out_data_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_data_V_last_V_U_vld_out;
wire    regslice_both_out_data_V_id_V_U_apdone_blk;
wire    regslice_both_out_data_V_id_V_U_ack_in_dummy;
wire    regslice_both_out_data_V_id_V_U_vld_out;
wire    regslice_both_out_data_V_dest_V_U_apdone_blk;
wire    regslice_both_out_data_V_dest_V_U_ack_in_dummy;
wire    regslice_both_out_data_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
end

gray_dadd_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_7_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mul_i1_reg_529),
    .din1(mul_i7_reg_534),
    .ce(grp_fu_149_ce),
    .dout(grp_fu_149_p2)
);

gray_dadd_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_7_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_reg_544),
    .din1(mul_i_reg_549),
    .ce(grp_fu_153_ce),
    .dout(grp_fu_153_p2)
);

gray_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(conv_i_reg_514),
    .din1(64'd4599057925072241033),
    .ce(grp_fu_157_ce),
    .dout(grp_fu_157_p2)
);

gray_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(conv_i6_reg_519),
    .din1(64'd4603462445507809378),
    .ce(grp_fu_162_ce),
    .dout(grp_fu_162_p2)
);

gray_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(conv_i2_reg_539),
    .din1(64'd4592878986383488713),
    .ce(grp_fu_167_ce),
    .dout(grp_fu_167_p2)
);

gray_uitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_6_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_172_p0),
    .ce(grp_fu_172_ce),
    .dout(grp_fu_172_p1)
);

gray_sitodp_64ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_6_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_175_p0),
    .ce(grp_fu_175_ce),
    .dout(grp_fu_175_p1)
);

gray_sitodp_64ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_6_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_178_p0),
    .ce(grp_fu_178_ce),
    .dout(grp_fu_178_p1)
);

gray_regslice_both #(
    .DataWidth( 24 ))
regslice_both_in_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TDATA),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_data_V_U_ack_in),
    .data_out(in_data_TDATA_int_regslice),
    .vld_out(in_data_TVALID_int_regslice),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_data_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 3 ))
regslice_both_in_data_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TKEEP),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_keep_V_U_ack_in),
    .data_out(in_data_TKEEP_int_regslice),
    .vld_out(regslice_both_in_data_V_keep_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_keep_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 3 ))
regslice_both_in_data_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TSTRB),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_strb_V_U_ack_in),
    .data_out(in_data_TSTRB_int_regslice),
    .vld_out(regslice_both_in_data_V_strb_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_strb_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TUSER),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_user_V_U_ack_in),
    .data_out(in_data_TUSER_int_regslice),
    .vld_out(regslice_both_in_data_V_user_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_user_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TLAST),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_last_V_U_ack_in),
    .data_out(in_data_TLAST_int_regslice),
    .vld_out(regslice_both_in_data_V_last_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_last_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TID),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_id_V_U_ack_in),
    .data_out(in_data_TID_int_regslice),
    .vld_out(regslice_both_in_data_V_id_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_id_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_data_TDEST),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_dest_V_U_ack_in),
    .data_out(in_data_TDEST_int_regslice),
    .vld_out(regslice_both_in_data_V_dest_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_dest_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 24 ))
regslice_both_out_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_data_TDATA_int_regslice),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(out_data_TREADY_int_regslice),
    .data_out(out_data_TDATA),
    .vld_out(regslice_both_out_data_V_data_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_data_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 3 ))
regslice_both_out_data_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i36_keep_reg_469_pp0_iter29_reg),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(regslice_both_out_data_V_keep_V_U_ack_in_dummy),
    .data_out(out_data_TKEEP),
    .vld_out(regslice_both_out_data_V_keep_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_keep_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 3 ))
regslice_both_out_data_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i36_strb_reg_474_pp0_iter29_reg),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(regslice_both_out_data_V_strb_V_U_ack_in_dummy),
    .data_out(out_data_TSTRB),
    .vld_out(regslice_both_out_data_V_strb_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_strb_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_data_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i36_user_reg_479_pp0_iter29_reg),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(regslice_both_out_data_V_user_V_U_ack_in_dummy),
    .data_out(out_data_TUSER),
    .vld_out(regslice_both_out_data_V_user_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_user_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_data_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_last_V_reg_484_pp0_iter29_reg),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(regslice_both_out_data_V_last_V_U_ack_in_dummy),
    .data_out(out_data_TLAST),
    .vld_out(regslice_both_out_data_V_last_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_last_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_data_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i36_id_reg_489_pp0_iter29_reg),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(regslice_both_out_data_V_id_V_U_ack_in_dummy),
    .data_out(out_data_TID),
    .vld_out(regslice_both_out_data_V_id_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_id_V_U_apdone_blk)
);

gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_data_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i36_dest_reg_494_pp0_iter29_reg),
    .vld_in(out_data_TVALID_int_regslice),
    .ack_in(regslice_both_out_data_V_dest_V_U_ack_in_dummy),
    .data_out(out_data_TDEST),
    .vld_out(regslice_both_out_data_V_dest_V_U_vld_out),
    .ack_out(out_data_TREADY),
    .apdone_blk(regslice_both_out_data_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter31 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_reg_544 <= grp_fu_149_p2;
        and_ln337_reg_611 <= and_ln337_fu_392_p2;
        conv_i2_reg_539 <= grp_fu_178_p1;
        conv_i6_reg_519 <= grp_fu_175_p1;
        conv_i_reg_514 <= grp_fu_172_p1;
        icmp_ln323_reg_575 <= icmp_ln323_fu_280_p2;
        icmp_ln323_reg_575_pp0_iter28_reg <= icmp_ln323_reg_575;
        icmp_ln327_reg_589 <= icmp_ln327_fu_292_p2;
        icmp_ln327_reg_589_pp0_iter28_reg <= icmp_ln327_reg_589;
        icmp_ln329_reg_595 <= icmp_ln329_fu_298_p2;
        mul_i1_reg_529 <= grp_fu_157_p2;
        mul_i7_reg_534 <= grp_fu_162_p2;
        mul_i_reg_549 <= grp_fu_167_p2;
        op2_1_reg_499_pp0_iter2_reg <= op2_1_reg_499_pp0_iter1_reg;
        op2_1_reg_499_pp0_iter3_reg <= op2_1_reg_499_pp0_iter2_reg;
        op2_1_reg_499_pp0_iter4_reg <= op2_1_reg_499_pp0_iter3_reg;
        op2_1_reg_499_pp0_iter5_reg <= op2_1_reg_499_pp0_iter4_reg;
        op2_1_reg_499_pp0_iter6_reg <= op2_1_reg_499_pp0_iter5_reg;
        or_ln330_reg_616 <= or_ln330_fu_410_p2;
        p_Result_s_reg_564 <= reg_fu_247_p1[32'd63];
        p_Result_s_reg_564_pp0_iter28_reg <= p_Result_s_reg_564;
        p_Result_s_reg_564_pp0_iter29_reg <= p_Result_s_reg_564_pp0_iter28_reg;
        p_last_V_reg_484_pp0_iter10_reg <= p_last_V_reg_484_pp0_iter9_reg;
        p_last_V_reg_484_pp0_iter11_reg <= p_last_V_reg_484_pp0_iter10_reg;
        p_last_V_reg_484_pp0_iter12_reg <= p_last_V_reg_484_pp0_iter11_reg;
        p_last_V_reg_484_pp0_iter13_reg <= p_last_V_reg_484_pp0_iter12_reg;
        p_last_V_reg_484_pp0_iter14_reg <= p_last_V_reg_484_pp0_iter13_reg;
        p_last_V_reg_484_pp0_iter15_reg <= p_last_V_reg_484_pp0_iter14_reg;
        p_last_V_reg_484_pp0_iter16_reg <= p_last_V_reg_484_pp0_iter15_reg;
        p_last_V_reg_484_pp0_iter17_reg <= p_last_V_reg_484_pp0_iter16_reg;
        p_last_V_reg_484_pp0_iter18_reg <= p_last_V_reg_484_pp0_iter17_reg;
        p_last_V_reg_484_pp0_iter19_reg <= p_last_V_reg_484_pp0_iter18_reg;
        p_last_V_reg_484_pp0_iter20_reg <= p_last_V_reg_484_pp0_iter19_reg;
        p_last_V_reg_484_pp0_iter21_reg <= p_last_V_reg_484_pp0_iter20_reg;
        p_last_V_reg_484_pp0_iter22_reg <= p_last_V_reg_484_pp0_iter21_reg;
        p_last_V_reg_484_pp0_iter23_reg <= p_last_V_reg_484_pp0_iter22_reg;
        p_last_V_reg_484_pp0_iter24_reg <= p_last_V_reg_484_pp0_iter23_reg;
        p_last_V_reg_484_pp0_iter25_reg <= p_last_V_reg_484_pp0_iter24_reg;
        p_last_V_reg_484_pp0_iter26_reg <= p_last_V_reg_484_pp0_iter25_reg;
        p_last_V_reg_484_pp0_iter27_reg <= p_last_V_reg_484_pp0_iter26_reg;
        p_last_V_reg_484_pp0_iter28_reg <= p_last_V_reg_484_pp0_iter27_reg;
        p_last_V_reg_484_pp0_iter29_reg <= p_last_V_reg_484_pp0_iter28_reg;
        p_last_V_reg_484_pp0_iter2_reg <= p_last_V_reg_484_pp0_iter1_reg;
        p_last_V_reg_484_pp0_iter3_reg <= p_last_V_reg_484_pp0_iter2_reg;
        p_last_V_reg_484_pp0_iter4_reg <= p_last_V_reg_484_pp0_iter3_reg;
        p_last_V_reg_484_pp0_iter5_reg <= p_last_V_reg_484_pp0_iter4_reg;
        p_last_V_reg_484_pp0_iter6_reg <= p_last_V_reg_484_pp0_iter5_reg;
        p_last_V_reg_484_pp0_iter7_reg <= p_last_V_reg_484_pp0_iter6_reg;
        p_last_V_reg_484_pp0_iter8_reg <= p_last_V_reg_484_pp0_iter7_reg;
        p_last_V_reg_484_pp0_iter9_reg <= p_last_V_reg_484_pp0_iter8_reg;
        reg_reg_559 <= reg_fu_247_p1;
        select_ln327_reg_621 <= select_ln327_fu_450_p3;
        select_ln330_reg_606 <= select_ln330_fu_373_p3;
        sh_amt_1_reg_601 <= sh_amt_1_fu_324_p2;
        sh_amt_reg_582 <= sh_amt_fu_286_p2;
        tmp_i36_dest_reg_494_pp0_iter10_reg <= tmp_i36_dest_reg_494_pp0_iter9_reg;
        tmp_i36_dest_reg_494_pp0_iter11_reg <= tmp_i36_dest_reg_494_pp0_iter10_reg;
        tmp_i36_dest_reg_494_pp0_iter12_reg <= tmp_i36_dest_reg_494_pp0_iter11_reg;
        tmp_i36_dest_reg_494_pp0_iter13_reg <= tmp_i36_dest_reg_494_pp0_iter12_reg;
        tmp_i36_dest_reg_494_pp0_iter14_reg <= tmp_i36_dest_reg_494_pp0_iter13_reg;
        tmp_i36_dest_reg_494_pp0_iter15_reg <= tmp_i36_dest_reg_494_pp0_iter14_reg;
        tmp_i36_dest_reg_494_pp0_iter16_reg <= tmp_i36_dest_reg_494_pp0_iter15_reg;
        tmp_i36_dest_reg_494_pp0_iter17_reg <= tmp_i36_dest_reg_494_pp0_iter16_reg;
        tmp_i36_dest_reg_494_pp0_iter18_reg <= tmp_i36_dest_reg_494_pp0_iter17_reg;
        tmp_i36_dest_reg_494_pp0_iter19_reg <= tmp_i36_dest_reg_494_pp0_iter18_reg;
        tmp_i36_dest_reg_494_pp0_iter20_reg <= tmp_i36_dest_reg_494_pp0_iter19_reg;
        tmp_i36_dest_reg_494_pp0_iter21_reg <= tmp_i36_dest_reg_494_pp0_iter20_reg;
        tmp_i36_dest_reg_494_pp0_iter22_reg <= tmp_i36_dest_reg_494_pp0_iter21_reg;
        tmp_i36_dest_reg_494_pp0_iter23_reg <= tmp_i36_dest_reg_494_pp0_iter22_reg;
        tmp_i36_dest_reg_494_pp0_iter24_reg <= tmp_i36_dest_reg_494_pp0_iter23_reg;
        tmp_i36_dest_reg_494_pp0_iter25_reg <= tmp_i36_dest_reg_494_pp0_iter24_reg;
        tmp_i36_dest_reg_494_pp0_iter26_reg <= tmp_i36_dest_reg_494_pp0_iter25_reg;
        tmp_i36_dest_reg_494_pp0_iter27_reg <= tmp_i36_dest_reg_494_pp0_iter26_reg;
        tmp_i36_dest_reg_494_pp0_iter28_reg <= tmp_i36_dest_reg_494_pp0_iter27_reg;
        tmp_i36_dest_reg_494_pp0_iter29_reg <= tmp_i36_dest_reg_494_pp0_iter28_reg;
        tmp_i36_dest_reg_494_pp0_iter2_reg <= tmp_i36_dest_reg_494_pp0_iter1_reg;
        tmp_i36_dest_reg_494_pp0_iter3_reg <= tmp_i36_dest_reg_494_pp0_iter2_reg;
        tmp_i36_dest_reg_494_pp0_iter4_reg <= tmp_i36_dest_reg_494_pp0_iter3_reg;
        tmp_i36_dest_reg_494_pp0_iter5_reg <= tmp_i36_dest_reg_494_pp0_iter4_reg;
        tmp_i36_dest_reg_494_pp0_iter6_reg <= tmp_i36_dest_reg_494_pp0_iter5_reg;
        tmp_i36_dest_reg_494_pp0_iter7_reg <= tmp_i36_dest_reg_494_pp0_iter6_reg;
        tmp_i36_dest_reg_494_pp0_iter8_reg <= tmp_i36_dest_reg_494_pp0_iter7_reg;
        tmp_i36_dest_reg_494_pp0_iter9_reg <= tmp_i36_dest_reg_494_pp0_iter8_reg;
        tmp_i36_id_reg_489_pp0_iter10_reg <= tmp_i36_id_reg_489_pp0_iter9_reg;
        tmp_i36_id_reg_489_pp0_iter11_reg <= tmp_i36_id_reg_489_pp0_iter10_reg;
        tmp_i36_id_reg_489_pp0_iter12_reg <= tmp_i36_id_reg_489_pp0_iter11_reg;
        tmp_i36_id_reg_489_pp0_iter13_reg <= tmp_i36_id_reg_489_pp0_iter12_reg;
        tmp_i36_id_reg_489_pp0_iter14_reg <= tmp_i36_id_reg_489_pp0_iter13_reg;
        tmp_i36_id_reg_489_pp0_iter15_reg <= tmp_i36_id_reg_489_pp0_iter14_reg;
        tmp_i36_id_reg_489_pp0_iter16_reg <= tmp_i36_id_reg_489_pp0_iter15_reg;
        tmp_i36_id_reg_489_pp0_iter17_reg <= tmp_i36_id_reg_489_pp0_iter16_reg;
        tmp_i36_id_reg_489_pp0_iter18_reg <= tmp_i36_id_reg_489_pp0_iter17_reg;
        tmp_i36_id_reg_489_pp0_iter19_reg <= tmp_i36_id_reg_489_pp0_iter18_reg;
        tmp_i36_id_reg_489_pp0_iter20_reg <= tmp_i36_id_reg_489_pp0_iter19_reg;
        tmp_i36_id_reg_489_pp0_iter21_reg <= tmp_i36_id_reg_489_pp0_iter20_reg;
        tmp_i36_id_reg_489_pp0_iter22_reg <= tmp_i36_id_reg_489_pp0_iter21_reg;
        tmp_i36_id_reg_489_pp0_iter23_reg <= tmp_i36_id_reg_489_pp0_iter22_reg;
        tmp_i36_id_reg_489_pp0_iter24_reg <= tmp_i36_id_reg_489_pp0_iter23_reg;
        tmp_i36_id_reg_489_pp0_iter25_reg <= tmp_i36_id_reg_489_pp0_iter24_reg;
        tmp_i36_id_reg_489_pp0_iter26_reg <= tmp_i36_id_reg_489_pp0_iter25_reg;
        tmp_i36_id_reg_489_pp0_iter27_reg <= tmp_i36_id_reg_489_pp0_iter26_reg;
        tmp_i36_id_reg_489_pp0_iter28_reg <= tmp_i36_id_reg_489_pp0_iter27_reg;
        tmp_i36_id_reg_489_pp0_iter29_reg <= tmp_i36_id_reg_489_pp0_iter28_reg;
        tmp_i36_id_reg_489_pp0_iter2_reg <= tmp_i36_id_reg_489_pp0_iter1_reg;
        tmp_i36_id_reg_489_pp0_iter3_reg <= tmp_i36_id_reg_489_pp0_iter2_reg;
        tmp_i36_id_reg_489_pp0_iter4_reg <= tmp_i36_id_reg_489_pp0_iter3_reg;
        tmp_i36_id_reg_489_pp0_iter5_reg <= tmp_i36_id_reg_489_pp0_iter4_reg;
        tmp_i36_id_reg_489_pp0_iter6_reg <= tmp_i36_id_reg_489_pp0_iter5_reg;
        tmp_i36_id_reg_489_pp0_iter7_reg <= tmp_i36_id_reg_489_pp0_iter6_reg;
        tmp_i36_id_reg_489_pp0_iter8_reg <= tmp_i36_id_reg_489_pp0_iter7_reg;
        tmp_i36_id_reg_489_pp0_iter9_reg <= tmp_i36_id_reg_489_pp0_iter8_reg;
        tmp_i36_keep_reg_469_pp0_iter10_reg <= tmp_i36_keep_reg_469_pp0_iter9_reg;
        tmp_i36_keep_reg_469_pp0_iter11_reg <= tmp_i36_keep_reg_469_pp0_iter10_reg;
        tmp_i36_keep_reg_469_pp0_iter12_reg <= tmp_i36_keep_reg_469_pp0_iter11_reg;
        tmp_i36_keep_reg_469_pp0_iter13_reg <= tmp_i36_keep_reg_469_pp0_iter12_reg;
        tmp_i36_keep_reg_469_pp0_iter14_reg <= tmp_i36_keep_reg_469_pp0_iter13_reg;
        tmp_i36_keep_reg_469_pp0_iter15_reg <= tmp_i36_keep_reg_469_pp0_iter14_reg;
        tmp_i36_keep_reg_469_pp0_iter16_reg <= tmp_i36_keep_reg_469_pp0_iter15_reg;
        tmp_i36_keep_reg_469_pp0_iter17_reg <= tmp_i36_keep_reg_469_pp0_iter16_reg;
        tmp_i36_keep_reg_469_pp0_iter18_reg <= tmp_i36_keep_reg_469_pp0_iter17_reg;
        tmp_i36_keep_reg_469_pp0_iter19_reg <= tmp_i36_keep_reg_469_pp0_iter18_reg;
        tmp_i36_keep_reg_469_pp0_iter20_reg <= tmp_i36_keep_reg_469_pp0_iter19_reg;
        tmp_i36_keep_reg_469_pp0_iter21_reg <= tmp_i36_keep_reg_469_pp0_iter20_reg;
        tmp_i36_keep_reg_469_pp0_iter22_reg <= tmp_i36_keep_reg_469_pp0_iter21_reg;
        tmp_i36_keep_reg_469_pp0_iter23_reg <= tmp_i36_keep_reg_469_pp0_iter22_reg;
        tmp_i36_keep_reg_469_pp0_iter24_reg <= tmp_i36_keep_reg_469_pp0_iter23_reg;
        tmp_i36_keep_reg_469_pp0_iter25_reg <= tmp_i36_keep_reg_469_pp0_iter24_reg;
        tmp_i36_keep_reg_469_pp0_iter26_reg <= tmp_i36_keep_reg_469_pp0_iter25_reg;
        tmp_i36_keep_reg_469_pp0_iter27_reg <= tmp_i36_keep_reg_469_pp0_iter26_reg;
        tmp_i36_keep_reg_469_pp0_iter28_reg <= tmp_i36_keep_reg_469_pp0_iter27_reg;
        tmp_i36_keep_reg_469_pp0_iter29_reg <= tmp_i36_keep_reg_469_pp0_iter28_reg;
        tmp_i36_keep_reg_469_pp0_iter2_reg <= tmp_i36_keep_reg_469_pp0_iter1_reg;
        tmp_i36_keep_reg_469_pp0_iter3_reg <= tmp_i36_keep_reg_469_pp0_iter2_reg;
        tmp_i36_keep_reg_469_pp0_iter4_reg <= tmp_i36_keep_reg_469_pp0_iter3_reg;
        tmp_i36_keep_reg_469_pp0_iter5_reg <= tmp_i36_keep_reg_469_pp0_iter4_reg;
        tmp_i36_keep_reg_469_pp0_iter6_reg <= tmp_i36_keep_reg_469_pp0_iter5_reg;
        tmp_i36_keep_reg_469_pp0_iter7_reg <= tmp_i36_keep_reg_469_pp0_iter6_reg;
        tmp_i36_keep_reg_469_pp0_iter8_reg <= tmp_i36_keep_reg_469_pp0_iter7_reg;
        tmp_i36_keep_reg_469_pp0_iter9_reg <= tmp_i36_keep_reg_469_pp0_iter8_reg;
        tmp_i36_strb_reg_474_pp0_iter10_reg <= tmp_i36_strb_reg_474_pp0_iter9_reg;
        tmp_i36_strb_reg_474_pp0_iter11_reg <= tmp_i36_strb_reg_474_pp0_iter10_reg;
        tmp_i36_strb_reg_474_pp0_iter12_reg <= tmp_i36_strb_reg_474_pp0_iter11_reg;
        tmp_i36_strb_reg_474_pp0_iter13_reg <= tmp_i36_strb_reg_474_pp0_iter12_reg;
        tmp_i36_strb_reg_474_pp0_iter14_reg <= tmp_i36_strb_reg_474_pp0_iter13_reg;
        tmp_i36_strb_reg_474_pp0_iter15_reg <= tmp_i36_strb_reg_474_pp0_iter14_reg;
        tmp_i36_strb_reg_474_pp0_iter16_reg <= tmp_i36_strb_reg_474_pp0_iter15_reg;
        tmp_i36_strb_reg_474_pp0_iter17_reg <= tmp_i36_strb_reg_474_pp0_iter16_reg;
        tmp_i36_strb_reg_474_pp0_iter18_reg <= tmp_i36_strb_reg_474_pp0_iter17_reg;
        tmp_i36_strb_reg_474_pp0_iter19_reg <= tmp_i36_strb_reg_474_pp0_iter18_reg;
        tmp_i36_strb_reg_474_pp0_iter20_reg <= tmp_i36_strb_reg_474_pp0_iter19_reg;
        tmp_i36_strb_reg_474_pp0_iter21_reg <= tmp_i36_strb_reg_474_pp0_iter20_reg;
        tmp_i36_strb_reg_474_pp0_iter22_reg <= tmp_i36_strb_reg_474_pp0_iter21_reg;
        tmp_i36_strb_reg_474_pp0_iter23_reg <= tmp_i36_strb_reg_474_pp0_iter22_reg;
        tmp_i36_strb_reg_474_pp0_iter24_reg <= tmp_i36_strb_reg_474_pp0_iter23_reg;
        tmp_i36_strb_reg_474_pp0_iter25_reg <= tmp_i36_strb_reg_474_pp0_iter24_reg;
        tmp_i36_strb_reg_474_pp0_iter26_reg <= tmp_i36_strb_reg_474_pp0_iter25_reg;
        tmp_i36_strb_reg_474_pp0_iter27_reg <= tmp_i36_strb_reg_474_pp0_iter26_reg;
        tmp_i36_strb_reg_474_pp0_iter28_reg <= tmp_i36_strb_reg_474_pp0_iter27_reg;
        tmp_i36_strb_reg_474_pp0_iter29_reg <= tmp_i36_strb_reg_474_pp0_iter28_reg;
        tmp_i36_strb_reg_474_pp0_iter2_reg <= tmp_i36_strb_reg_474_pp0_iter1_reg;
        tmp_i36_strb_reg_474_pp0_iter3_reg <= tmp_i36_strb_reg_474_pp0_iter2_reg;
        tmp_i36_strb_reg_474_pp0_iter4_reg <= tmp_i36_strb_reg_474_pp0_iter3_reg;
        tmp_i36_strb_reg_474_pp0_iter5_reg <= tmp_i36_strb_reg_474_pp0_iter4_reg;
        tmp_i36_strb_reg_474_pp0_iter6_reg <= tmp_i36_strb_reg_474_pp0_iter5_reg;
        tmp_i36_strb_reg_474_pp0_iter7_reg <= tmp_i36_strb_reg_474_pp0_iter6_reg;
        tmp_i36_strb_reg_474_pp0_iter8_reg <= tmp_i36_strb_reg_474_pp0_iter7_reg;
        tmp_i36_strb_reg_474_pp0_iter9_reg <= tmp_i36_strb_reg_474_pp0_iter8_reg;
        tmp_i36_user_reg_479_pp0_iter10_reg <= tmp_i36_user_reg_479_pp0_iter9_reg;
        tmp_i36_user_reg_479_pp0_iter11_reg <= tmp_i36_user_reg_479_pp0_iter10_reg;
        tmp_i36_user_reg_479_pp0_iter12_reg <= tmp_i36_user_reg_479_pp0_iter11_reg;
        tmp_i36_user_reg_479_pp0_iter13_reg <= tmp_i36_user_reg_479_pp0_iter12_reg;
        tmp_i36_user_reg_479_pp0_iter14_reg <= tmp_i36_user_reg_479_pp0_iter13_reg;
        tmp_i36_user_reg_479_pp0_iter15_reg <= tmp_i36_user_reg_479_pp0_iter14_reg;
        tmp_i36_user_reg_479_pp0_iter16_reg <= tmp_i36_user_reg_479_pp0_iter15_reg;
        tmp_i36_user_reg_479_pp0_iter17_reg <= tmp_i36_user_reg_479_pp0_iter16_reg;
        tmp_i36_user_reg_479_pp0_iter18_reg <= tmp_i36_user_reg_479_pp0_iter17_reg;
        tmp_i36_user_reg_479_pp0_iter19_reg <= tmp_i36_user_reg_479_pp0_iter18_reg;
        tmp_i36_user_reg_479_pp0_iter20_reg <= tmp_i36_user_reg_479_pp0_iter19_reg;
        tmp_i36_user_reg_479_pp0_iter21_reg <= tmp_i36_user_reg_479_pp0_iter20_reg;
        tmp_i36_user_reg_479_pp0_iter22_reg <= tmp_i36_user_reg_479_pp0_iter21_reg;
        tmp_i36_user_reg_479_pp0_iter23_reg <= tmp_i36_user_reg_479_pp0_iter22_reg;
        tmp_i36_user_reg_479_pp0_iter24_reg <= tmp_i36_user_reg_479_pp0_iter23_reg;
        tmp_i36_user_reg_479_pp0_iter25_reg <= tmp_i36_user_reg_479_pp0_iter24_reg;
        tmp_i36_user_reg_479_pp0_iter26_reg <= tmp_i36_user_reg_479_pp0_iter25_reg;
        tmp_i36_user_reg_479_pp0_iter27_reg <= tmp_i36_user_reg_479_pp0_iter26_reg;
        tmp_i36_user_reg_479_pp0_iter28_reg <= tmp_i36_user_reg_479_pp0_iter27_reg;
        tmp_i36_user_reg_479_pp0_iter29_reg <= tmp_i36_user_reg_479_pp0_iter28_reg;
        tmp_i36_user_reg_479_pp0_iter2_reg <= tmp_i36_user_reg_479_pp0_iter1_reg;
        tmp_i36_user_reg_479_pp0_iter3_reg <= tmp_i36_user_reg_479_pp0_iter2_reg;
        tmp_i36_user_reg_479_pp0_iter4_reg <= tmp_i36_user_reg_479_pp0_iter3_reg;
        tmp_i36_user_reg_479_pp0_iter5_reg <= tmp_i36_user_reg_479_pp0_iter4_reg;
        tmp_i36_user_reg_479_pp0_iter6_reg <= tmp_i36_user_reg_479_pp0_iter5_reg;
        tmp_i36_user_reg_479_pp0_iter7_reg <= tmp_i36_user_reg_479_pp0_iter6_reg;
        tmp_i36_user_reg_479_pp0_iter8_reg <= tmp_i36_user_reg_479_pp0_iter7_reg;
        tmp_i36_user_reg_479_pp0_iter9_reg <= tmp_i36_user_reg_479_pp0_iter8_reg;
        trunc_ln328_reg_569 <= trunc_ln328_fu_276_p1;
        trunc_ln328_reg_569_pp0_iter28_reg <= trunc_ln328_reg_569;
        val_reg_554 <= grp_fu_153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        op2_1_reg_499 <= op2_1_fu_209_p1;
        op2_1_reg_499_pp0_iter1_reg <= op2_1_reg_499;
        p_last_V_reg_484 <= in_data_TLAST_int_regslice;
        p_last_V_reg_484_pp0_iter1_reg <= p_last_V_reg_484;
        tmp_i36_dest_reg_494 <= in_data_TDEST_int_regslice;
        tmp_i36_dest_reg_494_pp0_iter1_reg <= tmp_i36_dest_reg_494;
        tmp_i36_id_reg_489 <= in_data_TID_int_regslice;
        tmp_i36_id_reg_489_pp0_iter1_reg <= tmp_i36_id_reg_489;
        tmp_i36_keep_reg_469 <= in_data_TKEEP_int_regslice;
        tmp_i36_keep_reg_469_pp0_iter1_reg <= tmp_i36_keep_reg_469;
        tmp_i36_strb_reg_474 <= in_data_TSTRB_int_regslice;
        tmp_i36_strb_reg_474_pp0_iter1_reg <= tmp_i36_strb_reg_474;
        tmp_i36_user_reg_479 <= in_data_TUSER_int_regslice;
        tmp_i36_user_reg_479_pp0_iter1_reg <= tmp_i36_user_reg_479;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_last_V_fu_197_p1 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_149_ce = 1'b1;
    end else begin
        grp_fu_149_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_153_ce = 1'b1;
    end else begin
        grp_fu_153_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_157_ce = 1'b1;
    end else begin
        grp_fu_157_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_162_ce = 1'b1;
    end else begin
        grp_fu_162_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_167_ce = 1'b1;
    end else begin
        grp_fu_167_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_172_ce = 1'b1;
    end else begin
        grp_fu_172_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_175_ce = 1'b1;
    end else begin
        grp_fu_175_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_178_ce = 1'b1;
    end else begin
        grp_fu_178_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_data_TDATA_blk_n = in_data_TVALID_int_regslice;
    end else begin
        in_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_data_TREADY_int_regslice = 1'b1;
    end else begin
        in_data_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter31 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        out_data_TDATA_blk_n = out_data_TREADY_int_regslice;
    end else begin
        out_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_data_TVALID_int_regslice = 1'b1;
    end else begin
        out_data_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter31 == 1'b1) & (ap_enable_reg_pp0_iter30 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter31 == 1'b1) & (ap_enable_reg_pp0_iter30 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((regslice_both_out_data_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln327_fu_445_p2 = (xor_ln323_fu_440_p2 & icmp_ln327_reg_589_pp0_iter28_reg);

assign and_ln329_fu_362_p2 = (xor_ln327_fu_356_p2 & icmp_ln329_reg_595);

assign and_ln330_1_fu_404_p2 = (xor_ln330_fu_398_p2 & and_ln329_fu_362_p2);

assign and_ln330_fu_367_p2 = (icmp_ln330_fu_319_p2 & and_ln329_fu_362_p2);

assign and_ln337_fu_392_p2 = (xor_ln329_fu_386_p2 & icmp_ln337_fu_329_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_data_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((out_data_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b1)) | ((in_data_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_data_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((out_data_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b1)) | ((in_data_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_data_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((out_data_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b1)) | ((in_data_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (in_data_TVALID_int_regslice == 1'b0);
end

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp0_stage0_iter30 = (out_data_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state33_pp0_stage0_iter31 = (out_data_TREADY_int_regslice == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exp_fu_262_p4 = {{reg_fu_247_p1[62:52]}};

assign grp_fu_172_p0 = r_fu_213_p4;

assign grp_fu_175_p0 = op2_fu_228_p4;

assign grp_fu_178_p0 = op2_1_reg_499_pp0_iter6_reg;

assign icmp_ln323_fu_280_p2 = ((trunc_ln306_fu_250_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_fu_292_p2 = ((exp_fu_262_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_298_p2 = (($signed(sh_amt_fu_286_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_319_p2 = (($signed(sh_amt_reg_582) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln337_fu_329_p2 = (($signed(sh_amt_1_fu_324_p2) < $signed(12'd24)) ? 1'b1 : 1'b0);

assign in_data_TREADY = regslice_both_in_data_V_data_V_U_ack_in;

assign lshr_ln331_fu_342_p2 = zext_ln320_fu_315_p1 >> zext_ln331_fu_338_p1;

assign op2_1_fu_209_p1 = in_data_TDATA_int_regslice[7:0];

assign op2_fu_228_p4 = {{in_data_TDATA_int_regslice[15:8]}};

assign or_ln327_fu_352_p2 = (icmp_ln327_reg_589 | icmp_ln323_reg_575);

assign or_ln329_fu_381_p2 = (or_ln327_fu_352_p2 | icmp_ln329_reg_595);

assign or_ln330_fu_410_p2 = (icmp_ln323_reg_575 | and_ln330_1_fu_404_p2);

assign out_data_TDATA_int_regslice = ((p_Result_s_reg_564_pp0_iter29_reg[0:0] == 1'b1) ? sub_ln455_fu_457_p2 : select_ln327_reg_621);

assign out_data_TVALID = regslice_both_out_data_V_data_V_U_vld_out;

assign p_Result_1_fu_307_p3 = {{1'd1}, {trunc_ln315_fu_304_p1}};

assign p_last_V_fu_197_p1 = in_data_TLAST_int_regslice;

assign r_fu_213_p4 = {{in_data_TDATA_int_regslice[23:16]}};

assign reg_fu_247_p1 = val_reg_554;

assign select_ln327_fu_450_p3 = ((and_ln327_fu_445_p2[0:0] == 1'b1) ? trunc_ln328_reg_569_pp0_iter28_reg : select_ln330_1_fu_433_p3);

assign select_ln330_1_fu_433_p3 = ((or_ln330_reg_616[0:0] == 1'b1) ? 24'd0 : select_ln337_fu_427_p3);

assign select_ln330_fu_373_p3 = ((and_ln330_fu_367_p2[0:0] == 1'b1) ? trunc_ln331_fu_348_p1 : 24'd0);

assign select_ln337_fu_427_p3 = ((and_ln337_reg_611[0:0] == 1'b1) ? shl_ln339_fu_422_p2 : select_ln330_reg_606);

assign sext_ln326_fu_415_p1 = sh_amt_1_reg_601;

assign sext_ln326cast_fu_418_p1 = sext_ln326_fu_415_p1[23:0];

assign sext_ln331_fu_335_p1 = sh_amt_reg_582;

assign sh_amt_1_fu_324_p2 = ($signed(12'd0) - $signed(sh_amt_reg_582));

assign sh_amt_fu_286_p2 = (12'd1075 - zext_ln311_fu_272_p1);

assign shl_ln339_fu_422_p2 = trunc_ln328_reg_569_pp0_iter28_reg << sext_ln326cast_fu_418_p1;

assign sub_ln455_fu_457_p2 = (24'd0 - select_ln327_reg_621);

assign trunc_ln306_fu_250_p1 = reg_fu_247_p1[62:0];

assign trunc_ln315_fu_304_p1 = reg_reg_559[51:0];

assign trunc_ln328_fu_276_p1 = reg_fu_247_p1[23:0];

assign trunc_ln331_fu_348_p1 = lshr_ln331_fu_342_p2[23:0];

assign xor_ln323_fu_440_p2 = (icmp_ln323_reg_575_pp0_iter28_reg ^ 1'd1);

assign xor_ln327_fu_356_p2 = (or_ln327_fu_352_p2 ^ 1'd1);

assign xor_ln329_fu_386_p2 = (or_ln329_fu_381_p2 ^ 1'd1);

assign xor_ln330_fu_398_p2 = (icmp_ln330_fu_319_p2 ^ 1'd1);

assign zext_ln311_fu_272_p1 = exp_fu_262_p4;

assign zext_ln320_fu_315_p1 = p_Result_1_fu_307_p3;

assign zext_ln331_fu_338_p1 = $unsigned(sext_ln331_fu_335_p1);

endmodule //gray
