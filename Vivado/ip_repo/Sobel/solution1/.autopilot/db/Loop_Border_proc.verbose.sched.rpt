

================================================================
== Vitis HLS Report for 'Loop_Border_proc'
================================================================
* Date:           Fri Feb 25 17:19:02 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        Sobel
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.912 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |         Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Border_VITIS_LOOP_75_1  |        ?|        ?|         5|          1|          1|     ?|       yes|
        +--------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 9 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 4 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.63>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%pix_in = alloca i32 1"   --->   Operation 10 'alloca' 'pix_in' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%r_edge_pix = alloca i32 1"   --->   Operation 11 'alloca' 'r_edge_pix' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%l_edge_pix = alloca i32 1"   --->   Operation 12 'alloca' 'l_edge_pix' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%borderbuf_V = alloca i64 1" [Sobel/Sobel.cpp:33]   --->   Operation 13 'alloca' 'borderbuf_V' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1918> <RAM>
ST_1 : Operation 14 [1/1] (3.63ns)   --->   "%h_read = read i32 @_ssdm_op_Read.ap_fifo.i32P0A, i32 %h" [Sobel/Sobel.cpp:74]   --->   Operation 14 'read' 'h_read' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 15 [1/1] (3.63ns)   --->   "%w_read = read i32 @_ssdm_op_Read.ap_fifo.i32P0A, i32 %w" [Sobel/Sobel.cpp:75]   --->   Operation 15 'read' 'w_read' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 3> <FIFO>
ST_1 : Operation 16 [1/1] (3.63ns)   --->   "%vconv_xlim_loc_read = read i32 @_ssdm_op_Read.ap_fifo.i32P0A, i32 %vconv_xlim_loc"   --->   Operation 16 'read' 'vconv_xlim_loc_read' <Predicate = true> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>

State 2 <SV = 1> <Delay = 6.91>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%cast = zext i32 %h_read" [Sobel/Sobel.cpp:74]   --->   Operation 17 'zext' 'cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%cast1 = zext i32 %w_read" [Sobel/Sobel.cpp:75]   --->   Operation 18 'zext' 'cast1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [2/2] (6.91ns)   --->   "%bound = mul i64 %cast, i64 %cast1" [Sobel/Sobel.cpp:74]   --->   Operation 19 'mul' 'bound' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.91>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %out_data_V_dest_V, i1 %out_data_V_id_V, i1 %out_data_V_last_V, i1 %out_data_V_user_V, i1 %out_data_V_strb_V, i1 %out_data_V_keep_V, i8 %out_data_V_data_V, void @empty_4, i32 1, i32 1, void @empty_3, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %out_data_V_dest_V, i1 %out_data_V_id_V, i1 %out_data_V_last_V, i1 %out_data_V_user_V, i1 %out_data_V_strb_V, i1 %out_data_V_keep_V, i8 %out_data_V_data_V, void @empty_4, i32 1, i32 1, void @empty_3, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %out_data_V_dest_V, i1 %out_data_V_id_V, i1 %out_data_V_last_V, i1 %out_data_V_user_V, i1 %out_data_V_strb_V, i1 %out_data_V_keep_V, i8 %out_data_V_data_V, void @empty_4, i32 1, i32 1, void @empty_3, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2"   --->   Operation 22 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %out_data_V_dest_V, i1 %out_data_V_id_V, i1 %out_data_V_last_V, i1 %out_data_V_user_V, i1 %out_data_V_strb_V, i1 %out_data_V_keep_V, i8 %out_data_V_data_V, void @empty_4, i32 1, i32 1, void @empty_3, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2"   --->   Operation 23 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %out_data_V_dest_V, i1 %out_data_V_id_V, i1 %out_data_V_last_V, i1 %out_data_V_user_V, i1 %out_data_V_strb_V, i1 %out_data_V_keep_V, i8 %out_data_V_data_V, void @empty_4, i32 1, i32 1, void @empty_3, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2"   --->   Operation 24 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %out_data_V_dest_V, i1 %out_data_V_id_V, i1 %out_data_V_last_V, i1 %out_data_V_user_V, i1 %out_data_V_strb_V, i1 %out_data_V_keep_V, i8 %out_data_V_data_V, void @empty_4, i32 1, i32 1, void @empty_3, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2"   --->   Operation 25 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %out_data_V_dest_V, i1 %out_data_V_id_V, i1 %out_data_V_last_V, i1 %out_data_V_user_V, i1 %out_data_V_strb_V, i1 %out_data_V_keep_V, i8 %out_data_V_data_V, void @empty_4, i32 1, i32 1, void @empty_3, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2"   --->   Operation 26 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %vconv, void @empty_9, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2"   --->   Operation 27 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %w, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str"   --->   Operation 28 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %h, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %vconv_xlim_loc, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str"   --->   Operation 30 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %vconv, void @empty_9, i32 0, i32 0, void @empty_2, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %out_data_V_dest_V, i1 %out_data_V_id_V, i1 %out_data_V_last_V, i1 %out_data_V_user_V, i1 %out_data_V_strb_V, i1 %out_data_V_keep_V, i8 %out_data_V_data_V, void @empty_4, i32 1, i32 1, void @empty_3, i32 0, i32 0, void @empty_2, void @empty_2, void @empty_2, i32 0, i32 0, i32 0, i32 0, void @empty_2, void @empty_2"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (2.55ns)   --->   "%sub85_i_i_i = add i32 %h_read, i32 4294967295" [Sobel/Sobel.cpp:74]   --->   Operation 33 'add' 'sub85_i_i_i' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (2.55ns)   --->   "%sub75_i_i_i = add i32 %w_read, i32 4294967295" [Sobel/Sobel.cpp:75]   --->   Operation 34 'add' 'sub75_i_i_i' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (2.55ns)   --->   "%sub72_i_i_i = add i32 %w_read, i32 4294967293" [Sobel/Sobel.cpp:75]   --->   Operation 35 'add' 'sub72_i_i_i' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%sext_ln74 = sext i32 %vconv_xlim_loc_read" [Sobel/Sobel.cpp:74]   --->   Operation 36 'sext' 'sext_ln74' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/2] (6.91ns)   --->   "%bound = mul i64 %cast, i64 %cast1" [Sobel/Sobel.cpp:74]   --->   Operation 37 'mul' 'bound' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (1.58ns)   --->   "%br_ln74 = br void" [Sobel/Sobel.cpp:74]   --->   Operation 38 'br' 'br_ln74' <Predicate = true> <Delay = 1.58>

State 4 <SV = 3> <Delay = 6.62>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i64 0, void %entry, i64 %add_ln76, void %.split4._crit_edge.i.i_ifconv" [Sobel/Sobel.cpp:76]   --->   Operation 39 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%i = phi i11 0, void %entry, i11 %select_ln76_3, void %.split4._crit_edge.i.i_ifconv" [Sobel/Sobel.cpp:76]   --->   Operation 40 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%j = phi i32 0, void %entry, i32 %add_ln75, void %.split4._crit_edge.i.i_ifconv" [Sobel/Sobel.cpp:75]   --->   Operation 41 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (3.52ns)   --->   "%add_ln76 = add i64 %indvar_flatten, i64 1" [Sobel/Sobel.cpp:76]   --->   Operation 42 'add' 'add_ln76' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln76_1 = zext i11 %i" [Sobel/Sobel.cpp:76]   --->   Operation 43 'zext' 'zext_ln76_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (1.88ns)   --->   "%cmp63_i_i_i = icmp_eq  i11 %i, i11 0" [Sobel/Sobel.cpp:76]   --->   Operation 44 'icmp' 'cmp63_i_i_i' <Predicate = true> <Delay = 1.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (2.47ns)   --->   "%cmp86_i_i_i = icmp_eq  i32 %zext_ln76_1, i32 %sub85_i_i_i" [Sobel/Sobel.cpp:76]   --->   Operation 45 'icmp' 'cmp86_i_i_i' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%tmp = partselect i10 @_ssdm_op_PartSelect.i10.i11.i32.i32, i11 %i, i32 1, i32 10" [Sobel/Sobel.cpp:76]   --->   Operation 46 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (1.77ns)   --->   "%icmp20 = icmp_ne  i10 %tmp, i10 0" [Sobel/Sobel.cpp:76]   --->   Operation 47 'icmp' 'icmp20' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (2.47ns)   --->   "%notrhs_i_i = icmp_slt  i32 %zext_ln76_1, i32 %sub85_i_i_i" [Sobel/Sobel.cpp:76]   --->   Operation 48 'icmp' 'notrhs_i_i' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node brmerge237_i_i)   --->   "%brmerge_not_i_i = and i1 %notrhs_i_i, i1 %icmp20" [Sobel/Sobel.cpp:76]   --->   Operation 49 'and' 'brmerge_not_i_i' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.97ns) (out node of the LUT)   --->   "%brmerge237_i_i = or i1 %cmp63_i_i_i, i1 %brmerge_not_i_i" [Sobel/Sobel.cpp:76]   --->   Operation 50 'or' 'brmerge237_i_i' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (2.77ns)   --->   "%icmp_ln76 = icmp_eq  i64 %indvar_flatten, i64 %bound" [Sobel/Sobel.cpp:76]   --->   Operation 51 'icmp' 'icmp_ln76' <Predicate = true> <Delay = 2.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln76 = br i1 %icmp_ln76, void %._crit_edge.loopexit.i.i, void %.exit" [Sobel/Sobel.cpp:76]   --->   Operation 52 'br' 'br_ln76' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (1.63ns)   --->   "%add_ln74 = add i11 %i, i11 1" [Sobel/Sobel.cpp:74]   --->   Operation 53 'add' 'add_ln74' <Predicate = (!icmp_ln76)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i11 %add_ln74" [Sobel/Sobel.cpp:76]   --->   Operation 54 'zext' 'zext_ln76' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (2.47ns)   --->   "%icmp_ln75 = icmp_eq  i32 %j, i32 %w_read" [Sobel/Sobel.cpp:75]   --->   Operation 55 'icmp' 'icmp_ln75' <Predicate = (!icmp_ln76)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/1] (0.69ns)   --->   "%select_ln76 = select i1 %icmp_ln75, i32 0, i32 %j" [Sobel/Sobel.cpp:76]   --->   Operation 56 'select' 'select_ln76' <Predicate = (!icmp_ln76)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (1.88ns)   --->   "%cmp63_i_i_i_mid1 = icmp_eq  i11 %add_ln74, i11 0" [Sobel/Sobel.cpp:74]   --->   Operation 57 'icmp' 'cmp63_i_i_i_mid1' <Predicate = (!icmp_ln76)> <Delay = 1.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (2.47ns)   --->   "%cmp86_i_i_i_mid1 = icmp_eq  i32 %zext_ln76, i32 %sub85_i_i_i" [Sobel/Sobel.cpp:76]   --->   Operation 58 'icmp' 'cmp86_i_i_i_mid1' <Predicate = (!icmp_ln76)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.99ns)   --->   "%select_ln76_1 = select i1 %icmp_ln75, i1 %cmp86_i_i_i_mid1, i1 %cmp86_i_i_i" [Sobel/Sobel.cpp:76]   --->   Operation 59 'select' 'select_ln76_1' <Predicate = (!icmp_ln76)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i10 @_ssdm_op_PartSelect.i10.i11.i32.i32, i11 %add_ln74, i32 1, i32 10" [Sobel/Sobel.cpp:74]   --->   Operation 60 'partselect' 'tmp_4' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (1.77ns)   --->   "%icmp = icmp_ne  i10 %tmp_4, i10 0" [Sobel/Sobel.cpp:74]   --->   Operation 61 'icmp' 'icmp' <Predicate = (!icmp_ln76)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (2.47ns)   --->   "%notrhs_i_i_mid1 = icmp_slt  i32 %zext_ln76, i32 %sub85_i_i_i" [Sobel/Sobel.cpp:76]   --->   Operation 62 'icmp' 'notrhs_i_i_mid1' <Predicate = (!icmp_ln76)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln76_2)   --->   "%brmerge_not_i_i_mid1 = and i1 %notrhs_i_i_mid1, i1 %icmp" [Sobel/Sobel.cpp:76]   --->   Operation 63 'and' 'brmerge_not_i_i_mid1' <Predicate = (!icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln76_2)   --->   "%brmerge237_i_i_mid1 = or i1 %cmp63_i_i_i_mid1, i1 %brmerge_not_i_i_mid1" [Sobel/Sobel.cpp:74]   --->   Operation 64 'or' 'brmerge237_i_i_mid1' <Predicate = (!icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln76_2 = select i1 %icmp_ln75, i1 %brmerge237_i_i_mid1, i1 %brmerge237_i_i" [Sobel/Sobel.cpp:76]   --->   Operation 65 'select' 'select_ln76_2' <Predicate = (!icmp_ln76)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 66 [1/1] (0.69ns)   --->   "%select_ln76_3 = select i1 %icmp_ln75, i11 %add_ln74, i11 %i" [Sobel/Sobel.cpp:76]   --->   Operation 66 'select' 'select_ln76_3' <Predicate = (!icmp_ln76)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i32 %select_ln76" [Sobel/Sobel.cpp:75]   --->   Operation 67 'zext' 'zext_ln75' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%trunc_ln75 = trunc i32 %select_ln76" [Sobel/Sobel.cpp:75]   --->   Operation 68 'trunc' 'trunc_ln75' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln78 = br i1 %select_ln76_2, void %.split4._crit_edge.i.i_ifconv, void" [Sobel/Sobel.cpp:78]   --->   Operation 69 'br' 'br_ln78' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (2.47ns)   --->   "%icmp_ln81 = icmp_slt  i33 %zext_ln75, i33 %sext_ln74" [Sobel/Sobel.cpp:81]   --->   Operation 70 'icmp' 'icmp_ln81' <Predicate = (!icmp_ln76 & select_ln76_2)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln81 = br i1 %icmp_ln81, void %._crit_edge6.i.i, void" [Sobel/Sobel.cpp:81]   --->   Operation 71 'br' 'br_ln81' <Predicate = (!icmp_ln76 & select_ln76_2)> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (2.47ns)   --->   "%icmp_ln87 = icmp_eq  i32 %select_ln76, i32 %sub72_i_i_i" [Sobel/Sobel.cpp:87]   --->   Operation 72 'icmp' 'icmp_ln87' <Predicate = (!icmp_ln76 & select_ln76_2)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (2.47ns)   --->   "%icmp_ln92 = icmp_slt  i33 %zext_ln75, i33 %sext_ln74" [Sobel/Sobel.cpp:92]   --->   Operation 73 'icmp' 'icmp_ln92' <Predicate = (!icmp_ln76)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (2.47ns)   --->   "%icmp_ln100 = icmp_eq  i32 %select_ln76, i32 %sub75_i_i_i" [Sobel/Sobel.cpp:100]   --->   Operation 74 'icmp' 'icmp_ln100' <Predicate = (!icmp_ln76)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (0.97ns)   --->   "%output_last_V = and i1 %select_ln76_1, i1 %icmp_ln100" [Sobel/Sobel.cpp:100]   --->   Operation 75 'and' 'output_last_V' <Predicate = (!icmp_ln76)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (2.55ns)   --->   "%add_ln75 = add i32 %select_ln76, i32 1" [Sobel/Sobel.cpp:75]   --->   Operation 76 'add' 'add_ln75' <Predicate = (!icmp_ln76)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.88>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Border_VITIS_LOOP_75_1_str"   --->   Operation 77 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln75_1 = zext i32 %select_ln76" [Sobel/Sobel.cpp:75]   --->   Operation 78 'zext' 'zext_ln75_1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%specpipeline_ln76 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_2" [Sobel/Sobel.cpp:76]   --->   Operation 79 'specpipeline' 'specpipeline_ln76' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%specloopname_ln76 = specloopname void @_ssdm_op_SpecLoopName, void @empty_1" [Sobel/Sobel.cpp:76]   --->   Operation 80 'specloopname' 'specloopname_ln76' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (3.63ns)   --->   "%pix_in_1 = read i8 @_ssdm_op_Read.ap_fifo.volatile.i8P0A, i8 %vconv" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 81 'read' 'pix_in_1' <Predicate = (select_ln76_2 & icmp_ln81)> <Delay = 3.63> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 2> <FIFO>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%borderbuf_V_addr = getelementptr i8 %borderbuf_V, i64 0, i64 %zext_ln75_1" [Sobel/Sobel.cpp:83]   --->   Operation 82 'getelementptr' 'borderbuf_V_addr' <Predicate = (select_ln76_2 & icmp_ln81)> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (3.25ns)   --->   "%store_ln83 = store i8 %pix_in_1, i11 %borderbuf_V_addr" [Sobel/Sobel.cpp:83]   --->   Operation 83 'store' 'store_ln83' <Predicate = (select_ln76_2 & icmp_ln81)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1918> <RAM>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%store_ln84 = store i8 %pix_in_1, i8 %pix_in" [Sobel/Sobel.cpp:84]   --->   Operation 84 'store' 'store_ln84' <Predicate = (select_ln76_2 & icmp_ln81)> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln84 = br void %._crit_edge6.i.i" [Sobel/Sobel.cpp:84]   --->   Operation 85 'br' 'br_ln84' <Predicate = (select_ln76_2 & icmp_ln81)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 4.89>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "%pix_in_3 = load i8 %pix_in" [Sobel/Sobel.cpp:87]   --->   Operation 86 'load' 'pix_in_3' <Predicate = (select_ln76_2)> <Delay = 0.00>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%r_edge_pix_load = load i8 %r_edge_pix" [Sobel/Sobel.cpp:87]   --->   Operation 87 'load' 'r_edge_pix_load' <Predicate = (select_ln76_2 & !icmp_ln87)> <Delay = 0.00>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%l_edge_pix_load = load i8 %l_edge_pix" [Sobel/Sobel.cpp:85]   --->   Operation 88 'load' 'l_edge_pix_load' <Predicate = (select_ln76_2)> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (2.47ns)   --->   "%icmp_ln85 = icmp_eq  i32 %select_ln76, i32 0" [Sobel/Sobel.cpp:85]   --->   Operation 89 'icmp' 'icmp_ln85' <Predicate = (select_ln76_2)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 90 [1/1] (1.24ns)   --->   "%l_edge_pix_1 = select i1 %icmp_ln85, i8 %pix_in_3, i8 %l_edge_pix_load" [Sobel/Sobel.cpp:85]   --->   Operation 90 'select' 'l_edge_pix_1' <Predicate = (select_ln76_2)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 91 [1/1] (1.24ns)   --->   "%select_ln87 = select i1 %icmp_ln87, i8 %pix_in_3, i8 %r_edge_pix_load" [Sobel/Sobel.cpp:87]   --->   Operation 91 'select' 'select_ln87' <Predicate = (select_ln76_2)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 92 [1/1] (0.00ns)   --->   "%store_ln87 = store i8 %l_edge_pix_1, i8 %l_edge_pix" [Sobel/Sobel.cpp:87]   --->   Operation 92 'store' 'store_ln87' <Predicate = (select_ln76_2)> <Delay = 0.00>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%store_ln87 = store i8 %select_ln87, i8 %r_edge_pix" [Sobel/Sobel.cpp:87]   --->   Operation 93 'store' 'store_ln87' <Predicate = (select_ln76_2)> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%br_ln87 = br void %.split4._crit_edge.i.i_ifconv" [Sobel/Sobel.cpp:87]   --->   Operation 94 'br' 'br_ln87' <Predicate = (select_ln76_2)> <Delay = 0.00>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %select_ln76, i32 1, i32 31" [Sobel/Sobel.cpp:90]   --->   Operation 95 'partselect' 'tmp_5' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (2.47ns)   --->   "%icmp_ln90 = icmp_eq  i31 %tmp_5, i31 0" [Sobel/Sobel.cpp:90]   --->   Operation 96 'icmp' 'icmp_ln90' <Predicate = (!icmp_ln76)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 97 [1/1] (1.63ns)   --->   "%add_ln95 = add i11 %trunc_ln75, i11 2047" [Sobel/Sobel.cpp:95]   --->   Operation 97 'add' 'add_ln95' <Predicate = (!icmp_ln76)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln95 = zext i11 %add_ln95" [Sobel/Sobel.cpp:95]   --->   Operation 98 'zext' 'zext_ln95' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%borderbuf_V_addr_1 = getelementptr i8 %borderbuf_V, i64 0, i64 %zext_ln95" [Sobel/Sobel.cpp:95]   --->   Operation 99 'getelementptr' 'borderbuf_V_addr_1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_6 : Operation 100 [2/2] (3.25ns)   --->   "%borderbuf_V_load = load i11 %borderbuf_V_addr_1" [Sobel/Sobel.cpp:95]   --->   Operation 100 'load' 'borderbuf_V_load' <Predicate = (!icmp_ln76)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1918> <RAM>

State 7 <SV = 6> <Delay = 4.50>
ST_7 : Operation 101 [1/1] (0.00ns)   --->   "%r_edge_pix_2 = load i8 %r_edge_pix" [Sobel/Sobel.cpp:92]   --->   Operation 101 'load' 'r_edge_pix_2' <Predicate = (!icmp_ln76 & !icmp_ln90)> <Delay = 0.00>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "%l_edge_pix_2 = load i8 %l_edge_pix" [Sobel/Sobel.cpp:90]   --->   Operation 102 'load' 'l_edge_pix_2' <Predicate = (!icmp_ln76 & icmp_ln90)> <Delay = 0.00>
ST_7 : Operation 103 [1/2] (3.25ns)   --->   "%borderbuf_V_load = load i11 %borderbuf_V_addr_1" [Sobel/Sobel.cpp:95]   --->   Operation 103 'load' 'borderbuf_V_load' <Predicate = (!icmp_ln76)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1918> <RAM>
ST_7 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node pix_out)   --->   "%xor_ln90 = xor i1 %icmp_ln90, i1 1" [Sobel/Sobel.cpp:90]   --->   Operation 104 'xor' 'xor_ln90' <Predicate = (!icmp_ln76 & !icmp_ln90)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node pix_out)   --->   "%and_ln92 = and i1 %icmp_ln92, i1 %xor_ln90" [Sobel/Sobel.cpp:92]   --->   Operation 105 'and' 'and_ln92' <Predicate = (!icmp_ln76 & !icmp_ln90)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node pix_out)   --->   "%select_ln92 = select i1 %and_ln92, i8 %borderbuf_V_load, i8 %r_edge_pix_2" [Sobel/Sobel.cpp:92]   --->   Operation 106 'select' 'select_ln92' <Predicate = (!icmp_ln76 & !icmp_ln90)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 107 [1/1] (1.24ns) (out node of the LUT)   --->   "%pix_out = select i1 %icmp_ln90, i8 %l_edge_pix_2, i8 %select_ln92" [Sobel/Sobel.cpp:90]   --->   Operation 107 'select' 'pix_out' <Predicate = (!icmp_ln76)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 108 [2/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i8P0A.i1P0A.i1P0A.i1P0A.i1P0A.i1P0A.i1P0A, i8 %out_data_V_data_V, i1 %out_data_V_keep_V, i1 %out_data_V_strb_V, i1 %out_data_V_user_V, i1 %out_data_V_last_V, i1 %out_data_V_id_V, i1 %out_data_V_dest_V, i8 %pix_out, i1 1, i1 1, i1 0, i1 %output_last_V, i1 0, i1 0"   --->   Operation 108 'write' 'write_ln304' <Predicate = (!icmp_ln76)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 109 [1/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i8P0A.i1P0A.i1P0A.i1P0A.i1P0A.i1P0A.i1P0A, i8 %out_data_V_data_V, i1 %out_data_V_keep_V, i1 %out_data_V_strb_V, i1 %out_data_V_user_V, i1 %out_data_V_last_V, i1 %out_data_V_id_V, i1 %out_data_V_dest_V, i8 %pix_out, i1 1, i1 1, i1 0, i1 %output_last_V, i1 0, i1 0"   --->   Operation 109 'write' 'write_ln304' <Predicate = (!icmp_ln76)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 110 'br' 'br_ln0' <Predicate = (!icmp_ln76)> <Delay = 0.00>

State 9 <SV = 4> <Delay = 0.00>
ST_9 : Operation 111 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 111 'ret' 'ret_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.63ns
The critical path consists of the following:
	fifo read on port 'h' (Sobel/Sobel.cpp:74) [27]  (3.63 ns)

 <State 2>: 6.91ns
The critical path consists of the following:
	'mul' operation ('bound', Sobel/Sobel.cpp:74) [38]  (6.91 ns)

 <State 3>: 6.91ns
The critical path consists of the following:
	'mul' operation ('bound', Sobel/Sobel.cpp:74) [38]  (6.91 ns)

 <State 4>: 6.62ns
The critical path consists of the following:
	'phi' operation ('j', Sobel/Sobel.cpp:75) with incoming values : ('add_ln75', Sobel/Sobel.cpp:75) [43]  (0 ns)
	'icmp' operation ('icmp_ln75', Sobel/Sobel.cpp:75) [59]  (2.47 ns)
	'select' operation ('select_ln76', Sobel/Sobel.cpp:76) [60]  (0.698 ns)
	'icmp' operation ('icmp_ln100', Sobel/Sobel.cpp:100) [111]  (2.47 ns)
	'and' operation ('output.last.V', Sobel/Sobel.cpp:100) [112]  (0.978 ns)

 <State 5>: 6.89ns
The critical path consists of the following:
	fifo read on port 'vconv' (C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145) [81]  (3.63 ns)
	'store' operation ('store_ln83', Sobel/Sobel.cpp:83) of variable 'pix_in', C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145 on array 'borderbuf.V', Sobel/Sobel.cpp:33 [83]  (3.25 ns)

 <State 6>: 4.89ns
The critical path consists of the following:
	'add' operation ('add_ln95', Sobel/Sobel.cpp:95) [103]  (1.64 ns)
	'getelementptr' operation ('borderbuf_V_addr_1', Sobel/Sobel.cpp:95) [105]  (0 ns)
	'load' operation ('borderbuf_V_load', Sobel/Sobel.cpp:95) on array 'borderbuf.V', Sobel/Sobel.cpp:33 [106]  (3.25 ns)

 <State 7>: 4.5ns
The critical path consists of the following:
	'load' operation ('borderbuf_V_load', Sobel/Sobel.cpp:95) on array 'borderbuf.V', Sobel/Sobel.cpp:33 [106]  (3.25 ns)
	'select' operation ('select_ln92', Sobel/Sobel.cpp:92) [109]  (0 ns)
	'select' operation ('pix_out', Sobel/Sobel.cpp:90) [110]  (1.25 ns)

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
