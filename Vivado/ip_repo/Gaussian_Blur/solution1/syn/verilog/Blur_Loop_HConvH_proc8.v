// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Blur_Loop_HConvH_proc8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        h_dout,
        h_empty_n,
        h_read,
        w_dout,
        w_empty_n,
        w_read,
        in_data_TDATA,
        in_data_TVALID,
        in_data_TREADY,
        in_data_TKEEP,
        in_data_TSTRB,
        in_data_TUSER,
        in_data_TLAST,
        in_data_TID,
        in_data_TDEST,
        hconv_din,
        hconv_full_n,
        hconv_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state25 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] h_dout;
input   h_empty_n;
output   h_read;
input  [31:0] w_dout;
input   w_empty_n;
output   w_read;
input  [23:0] in_data_TDATA;
input   in_data_TVALID;
output   in_data_TREADY;
input  [2:0] in_data_TKEEP;
input  [2:0] in_data_TSTRB;
input  [0:0] in_data_TUSER;
input  [0:0] in_data_TLAST;
input  [0:0] in_data_TID;
input  [0:0] in_data_TDEST;
output  [23:0] hconv_din;
input   hconv_full_n;
output   hconv_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg h_read;
reg w_read;
reg hconv_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    h_blk_n;
reg    w_blk_n;
reg    in_data_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln43_fu_321_p2;
reg    hconv_blk_n;
reg    ap_enable_reg_pp0_iter20;
reg   [0:0] icmp_ln57_reg_2250;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter19_reg;
reg   [63:0] indvar_flatten_reg_215;
reg   [10:0] row_reg_226;
reg   [31:0] h_read_reg_2111;
reg   [31:0] w_read_reg_2116;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_fu_267_p2;
reg   [63:0] bound_reg_2132;
wire    ap_CS_fsm_state3;
wire   [63:0] add_ln43_fu_273_p2;
reg    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_state10_pp0_stage0_iter6;
wire    ap_block_state11_pp0_stage0_iter7;
wire    ap_block_state12_pp0_stage0_iter8;
wire    ap_block_state13_pp0_stage0_iter9;
wire    ap_block_state14_pp0_stage0_iter10;
wire    ap_block_state15_pp0_stage0_iter11;
wire    ap_block_state16_pp0_stage0_iter12;
wire    ap_block_state17_pp0_stage0_iter13;
wire    ap_block_state18_pp0_stage0_iter14;
wire    ap_block_state19_pp0_stage0_iter15;
wire    ap_block_state20_pp0_stage0_iter16;
wire    ap_block_state21_pp0_stage0_iter17;
wire    ap_block_state22_pp0_stage0_iter18;
wire    ap_block_state23_pp0_stage0_iter19;
reg    ap_block_state24_pp0_stage0_iter20;
reg    ap_block_pp0_stage0_11001;
reg   [23:0] hwin_4_V_load_reg_2142;
reg   [23:0] hwin_8_V_load_reg_2149;
reg   [0:0] icmp_ln43_reg_2156;
reg   [0:0] icmp_ln43_reg_2156_pp0_iter1_reg;
reg   [0:0] icmp_ln43_reg_2156_pp0_iter2_reg;
wire   [9:0] add_ln691_45_fu_604_p2;
reg   [9:0] add_ln691_45_reg_2160;
wire   [9:0] add_ln691_47_fu_634_p2;
reg   [9:0] add_ln691_47_reg_2165;
wire   [9:0] add_ln691_49_fu_654_p2;
reg   [9:0] add_ln691_49_reg_2170;
wire   [9:0] add_ln691_52_fu_748_p2;
reg   [9:0] add_ln691_52_reg_2175;
wire   [9:0] add_ln691_56_fu_778_p2;
reg   [9:0] add_ln691_56_reg_2180;
wire   [9:0] add_ln691_60_fu_798_p2;
reg   [9:0] add_ln691_60_reg_2185;
wire   [8:0] add_ln691_63_fu_964_p2;
reg   [8:0] add_ln691_63_reg_2190;
reg   [8:0] add_ln691_63_reg_2190_pp0_iter1_reg;
wire   [9:0] add_ln691_67_fu_990_p2;
reg   [9:0] add_ln691_67_reg_2195;
reg   [9:0] add_ln691_67_reg_2195_pp0_iter1_reg;
wire   [8:0] add_ln691_70_fu_1010_p2;
reg   [8:0] add_ln691_70_reg_2200;
reg   [8:0] add_ln691_70_reg_2200_pp0_iter1_reg;
wire   [9:0] add_ln691_74_fu_1036_p2;
reg   [9:0] add_ln691_74_reg_2205;
reg   [9:0] add_ln691_74_reg_2205_pp0_iter1_reg;
wire   [8:0] add_ln691_77_fu_1056_p2;
reg   [8:0] add_ln691_77_reg_2210;
reg   [8:0] add_ln691_77_reg_2210_pp0_iter1_reg;
wire   [9:0] add_ln691_81_fu_1082_p2;
reg   [9:0] add_ln691_81_reg_2215;
reg   [9:0] add_ln691_81_reg_2215_pp0_iter1_reg;
wire   [11:0] add_ln691_62_fu_1225_p2;
reg   [11:0] add_ln691_62_reg_2220;
wire   [11:0] add_ln691_69_fu_1231_p2;
reg   [11:0] add_ln691_69_reg_2225;
wire   [11:0] add_ln691_76_fu_1237_p2;
reg   [11:0] add_ln691_76_reg_2230;
wire   [11:0] add_ln691_68_fu_1254_p2;
reg   [11:0] add_ln691_68_reg_2235;
wire   [11:0] add_ln691_75_fu_1271_p2;
reg   [11:0] add_ln691_75_reg_2240;
wire   [11:0] add_ln691_82_fu_1288_p2;
reg   [11:0] add_ln691_82_reg_2245;
wire   [0:0] icmp_ln57_fu_1311_p2;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter4_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter5_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter6_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter7_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter8_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter9_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter10_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter11_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter12_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter13_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter14_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter15_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter16_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter17_reg;
reg   [0:0] icmp_ln57_reg_2250_pp0_iter18_reg;
wire   [10:0] row_1_fu_1329_p2;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] grp_fu_252_p1;
reg   [63:0] conv_i151_i_i_reg_2274;
wire   [63:0] grp_fu_255_p1;
reg   [63:0] conv_i146_i_i_reg_2279;
wire   [63:0] grp_fu_258_p1;
reg   [63:0] conv_i141_i_i_reg_2284;
wire   [63:0] grp_fu_237_p2;
reg   [63:0] val_reg_2289;
wire   [63:0] grp_fu_242_p2;
reg   [63:0] val_3_reg_2294;
wire   [63:0] grp_fu_247_p2;
reg   [63:0] val_4_reg_2299;
wire   [63:0] reg_fu_1335_p1;
reg   [63:0] reg_reg_2304;
reg   [63:0] reg_reg_2304_pp0_iter17_reg;
reg   [63:0] reg_reg_2304_pp0_iter18_reg;
wire   [7:0] trunc_ln328_fu_1356_p1;
reg   [7:0] trunc_ln328_reg_2310;
reg   [7:0] trunc_ln328_reg_2310_pp0_iter17_reg;
wire   [0:0] icmp_ln323_fu_1360_p2;
reg   [0:0] icmp_ln323_reg_2316;
reg   [0:0] icmp_ln323_reg_2316_pp0_iter17_reg;
wire   [11:0] sh_amt_fu_1366_p2;
reg   [11:0] sh_amt_reg_2323;
wire   [9:0] trunc_ln326_fu_1372_p1;
reg   [9:0] trunc_ln326_reg_2329;
wire   [0:0] icmp_ln327_fu_1376_p2;
reg   [0:0] icmp_ln327_reg_2334;
reg   [0:0] icmp_ln327_reg_2334_pp0_iter17_reg;
wire   [0:0] icmp_ln329_fu_1382_p2;
reg   [0:0] icmp_ln329_reg_2340;
wire   [63:0] reg_3_fu_1388_p1;
reg   [63:0] reg_3_reg_2346;
reg   [63:0] reg_3_reg_2346_pp0_iter17_reg;
reg   [63:0] reg_3_reg_2346_pp0_iter18_reg;
wire   [15:0] trunc_ln328_3_fu_1409_p1;
reg   [15:0] trunc_ln328_3_reg_2352;
reg   [15:0] trunc_ln328_3_reg_2352_pp0_iter17_reg;
wire   [0:0] icmp_ln323_3_fu_1413_p2;
reg   [0:0] icmp_ln323_3_reg_2358;
reg   [0:0] icmp_ln323_3_reg_2358_pp0_iter17_reg;
wire   [11:0] sh_amt_7_fu_1419_p2;
reg   [11:0] sh_amt_7_reg_2365;
wire   [9:0] trunc_ln326_3_fu_1425_p1;
reg   [9:0] trunc_ln326_3_reg_2371;
wire   [0:0] icmp_ln327_3_fu_1429_p2;
reg   [0:0] icmp_ln327_3_reg_2376;
reg   [0:0] icmp_ln327_3_reg_2376_pp0_iter17_reg;
wire   [0:0] icmp_ln329_3_fu_1435_p2;
reg   [0:0] icmp_ln329_3_reg_2382;
wire   [63:0] reg_4_fu_1441_p1;
reg   [63:0] reg_4_reg_2388;
reg   [63:0] reg_4_reg_2388_pp0_iter17_reg;
reg   [63:0] reg_4_reg_2388_pp0_iter18_reg;
wire   [23:0] trunc_ln328_4_fu_1462_p1;
reg   [23:0] trunc_ln328_4_reg_2394;
reg   [23:0] trunc_ln328_4_reg_2394_pp0_iter17_reg;
wire   [0:0] icmp_ln323_4_fu_1466_p2;
reg   [0:0] icmp_ln323_4_reg_2400;
reg   [0:0] icmp_ln323_4_reg_2400_pp0_iter17_reg;
wire   [11:0] sh_amt_9_fu_1472_p2;
reg   [11:0] sh_amt_9_reg_2407;
wire   [9:0] trunc_ln326_4_fu_1478_p1;
reg   [9:0] trunc_ln326_4_reg_2413;
wire   [0:0] icmp_ln327_4_fu_1482_p2;
reg   [0:0] icmp_ln327_4_reg_2418;
reg   [0:0] icmp_ln327_4_reg_2418_pp0_iter17_reg;
wire   [0:0] icmp_ln329_4_fu_1488_p2;
reg   [0:0] icmp_ln329_4_reg_2424;
wire   [9:0] sh_amt_6_fu_1514_p2;
reg   [9:0] sh_amt_6_reg_2430;
wire   [7:0] select_ln330_fu_1563_p3;
reg   [7:0] select_ln330_reg_2435;
wire   [0:0] and_ln337_fu_1582_p2;
reg   [0:0] and_ln337_reg_2440;
wire   [0:0] or_ln330_fu_1600_p2;
reg   [0:0] or_ln330_reg_2445;
wire   [9:0] sh_amt_8_fu_1625_p2;
reg   [9:0] sh_amt_8_reg_2450;
wire   [15:0] select_ln330_7_fu_1674_p3;
reg   [15:0] select_ln330_7_reg_2455;
wire   [0:0] and_ln337_3_fu_1693_p2;
reg   [0:0] and_ln337_3_reg_2460;
wire   [0:0] or_ln330_3_fu_1711_p2;
reg   [0:0] or_ln330_3_reg_2465;
wire   [9:0] sh_amt_10_fu_1736_p2;
reg   [9:0] sh_amt_10_reg_2470;
wire   [23:0] select_ln330_9_fu_1785_p3;
reg   [23:0] select_ln330_9_reg_2475;
wire   [0:0] and_ln337_4_fu_1804_p2;
reg   [0:0] and_ln337_4_reg_2480;
wire   [0:0] or_ln330_4_fu_1822_p2;
reg   [0:0] or_ln330_4_reg_2485;
wire   [7:0] select_ln327_fu_1858_p3;
reg   [7:0] select_ln327_reg_2490;
wire   [15:0] select_ln327_3_fu_1896_p3;
reg   [15:0] select_ln327_3_reg_2496;
wire   [23:0] select_ln327_4_fu_1934_p3;
reg   [23:0] select_ln327_4_reg_2502;
wire   [23:0] ret_V_fu_2020_p2;
reg   [23:0] ret_V_reg_2508;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg    ap_condition_pp0_exit_iter3_state7;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg   [23:0] hwin_V_1_1_i_fu_122;
reg   [23:0] hwin_1_V_fu_126;
reg   [23:0] hwin_2_V_fu_130;
reg   [23:0] hwin_3_V_fu_134;
reg   [23:0] hwin_4_V_fu_138;
reg   [23:0] hwin_5_V_fu_142;
reg   [23:0] hwin_6_V_fu_146;
reg   [23:0] hwin_7_V_fu_150;
reg   [23:0] hwin_8_V_fu_154;
reg   [23:0] hwin_9_V_fu_158;
reg   [23:0] hwin_10_V_fu_162;
reg   [23:0] hwin_11_V_fu_166;
reg   [23:0] hwin_12_V_fu_170;
reg   [23:0] hwin_13_V_fu_174;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_252_p0;
wire   [31:0] grp_fu_255_p0;
wire   [31:0] grp_fu_258_p0;
wire   [31:0] grp_fu_267_p0;
wire   [31:0] grp_fu_267_p1;
wire   [7:0] trunc_ln47_fu_446_p1;
wire   [7:0] trunc_ln_fu_454_p4;
wire   [7:0] trunc_ln1_fu_468_p4;
wire   [7:0] trunc_ln2_fu_482_p4;
wire   [8:0] zext_ln691_fu_492_p1;
wire   [8:0] zext_ln1497_fu_464_p1;
wire   [8:0] add_ln691_fu_496_p2;
wire   [7:0] trunc_ln691_s_fu_506_p4;
wire   [8:0] zext_ln691_39_fu_516_p1;
wire   [8:0] zext_ln1348_fu_478_p1;
wire   [8:0] add_ln691_42_fu_520_p2;
wire   [7:0] trunc_ln44_fu_394_p1;
wire   [7:0] trunc_ln44_1_fu_398_p1;
wire   [8:0] zext_ln691_40_fu_534_p1;
wire   [8:0] zext_ln51_fu_530_p1;
wire   [8:0] add_ln691_43_fu_538_p2;
wire   [7:0] trunc_ln1497_9_fu_548_p4;
wire   [7:0] trunc_ln691_11_fu_562_p4;
wire   [7:0] trunc_ln44_2_fu_402_p1;
wire   [7:0] trunc_ln691_12_fu_580_p4;
wire   [8:0] zext_ln1497_19_fu_558_p1;
wire   [8:0] zext_ln691_42_fu_590_p1;
wire   [8:0] add_ln691_44_fu_594_p2;
wire   [9:0] zext_ln691_43_fu_600_p1;
wire   [9:0] zext_ln1497_4_fu_502_p1;
wire   [7:0] trunc_ln691_13_fu_610_p4;
wire   [8:0] zext_ln691_41_fu_572_p1;
wire   [8:0] zext_ln691_44_fu_620_p1;
wire   [8:0] add_ln691_46_fu_624_p2;
wire   [9:0] zext_ln691_45_fu_630_p1;
wire   [9:0] zext_ln1348_4_fu_526_p1;
wire   [7:0] trunc_ln44_3_fu_406_p1;
wire   [8:0] zext_ln51_4_fu_576_p1;
wire   [8:0] zext_ln691_46_fu_640_p1;
wire   [8:0] add_ln691_48_fu_644_p2;
wire   [9:0] zext_ln691_47_fu_650_p1;
wire   [9:0] zext_ln51_1_fu_544_p1;
wire   [7:0] trunc_ln1497_s_fu_660_p4;
wire   [7:0] trunc_ln691_16_fu_674_p4;
wire   [7:0] trunc_ln44_5_fu_410_p1;
wire   [7:0] trunc_ln1497_1_fu_692_p4;
wire   [7:0] trunc_ln691_17_fu_706_p4;
wire   [7:0] trunc_ln44_6_fu_414_p1;
wire   [7:0] trunc_ln691_18_fu_724_p4;
wire   [8:0] zext_ln1497_21_fu_702_p1;
wire   [8:0] zext_ln691_53_fu_734_p1;
wire   [8:0] add_ln691_51_fu_738_p2;
wire   [9:0] zext_ln691_54_fu_744_p1;
wire   [9:0] zext_ln1497_20_fu_670_p1;
wire   [7:0] trunc_ln691_19_fu_754_p4;
wire   [8:0] zext_ln691_52_fu_716_p1;
wire   [8:0] zext_ln691_56_fu_764_p1;
wire   [8:0] add_ln691_55_fu_768_p2;
wire   [9:0] zext_ln691_57_fu_774_p1;
wire   [9:0] zext_ln691_51_fu_684_p1;
wire   [7:0] trunc_ln44_7_fu_418_p1;
wire   [8:0] zext_ln51_6_fu_720_p1;
wire   [8:0] zext_ln691_59_fu_784_p1;
wire   [8:0] add_ln691_59_fu_788_p2;
wire   [9:0] zext_ln691_60_fu_794_p1;
wire   [9:0] zext_ln51_5_fu_688_p1;
wire   [7:0] trunc_ln1497_2_fu_804_p4;
wire   [7:0] trunc_ln691_22_fu_818_p4;
wire   [7:0] trunc_ln44_9_fu_422_p1;
wire   [7:0] trunc_ln1497_3_fu_836_p4;
wire   [7:0] trunc_ln691_23_fu_850_p4;
wire   [7:0] trunc_ln44_10_fu_426_p1;
wire   [7:0] trunc_ln1497_4_fu_868_p4;
wire   [7:0] trunc_ln691_24_fu_882_p4;
wire   [7:0] trunc_ln44_11_fu_430_p1;
wire   [7:0] trunc_ln1497_5_fu_900_p4;
wire   [7:0] trunc_ln691_25_fu_914_p4;
wire   [7:0] trunc_ln44_12_fu_434_p1;
wire   [7:0] trunc_ln1497_6_fu_932_p4;
wire   [7:0] trunc_ln691_26_fu_946_p4;
wire   [7:0] trunc_ln44_13_fu_438_p1;
wire   [8:0] zext_ln51_7_fu_832_p1;
wire   [8:0] zext_ln51_8_fu_864_p1;
wire   [8:0] zext_ln51_9_fu_896_p1;
wire   [8:0] zext_ln51_10_fu_928_p1;
wire   [8:0] add_ln691_65_fu_970_p2;
wire   [8:0] zext_ln691_70_fu_960_p1;
wire   [8:0] zext_ln47_fu_450_p1;
wire   [8:0] add_ln691_66_fu_980_p2;
wire   [9:0] zext_ln691_73_fu_986_p1;
wire   [9:0] zext_ln691_72_fu_976_p1;
wire   [7:0] trunc_ln691_27_fu_996_p4;
wire   [8:0] zext_ln1497_22_fu_814_p1;
wire   [8:0] zext_ln1497_23_fu_846_p1;
wire   [8:0] zext_ln1497_24_fu_878_p1;
wire   [8:0] zext_ln1497_25_fu_910_p1;
wire   [8:0] add_ln691_72_fu_1016_p2;
wire   [8:0] zext_ln1497_26_fu_942_p1;
wire   [8:0] zext_ln691_75_fu_1006_p1;
wire   [8:0] add_ln691_73_fu_1026_p2;
wire   [9:0] zext_ln691_78_fu_1032_p1;
wire   [9:0] zext_ln691_77_fu_1022_p1;
wire   [7:0] trunc_ln691_28_fu_1042_p4;
wire   [8:0] zext_ln691_65_fu_828_p1;
wire   [8:0] zext_ln691_66_fu_860_p1;
wire   [8:0] zext_ln691_67_fu_892_p1;
wire   [8:0] zext_ln691_68_fu_924_p1;
wire   [8:0] add_ln691_79_fu_1062_p2;
wire   [8:0] zext_ln691_69_fu_956_p1;
wire   [8:0] zext_ln691_80_fu_1052_p1;
wire   [8:0] add_ln691_80_fu_1072_p2;
wire   [9:0] zext_ln691_83_fu_1078_p1;
wire   [9:0] zext_ln691_82_fu_1068_p1;
wire   [7:0] trunc_ln691_14_fu_1108_p4;
wire   [7:0] trunc_ln691_15_fu_1121_p4;
wire   [7:0] trunc_ln44_4_fu_1093_p1;
wire   [10:0] zext_ln1497_5_fu_1099_p1;
wire   [10:0] zext_ln691_48_fu_1117_p1;
wire   [10:0] zext_ln691_55_fu_1144_p1;
wire   [10:0] add_ln691_50_fu_1138_p2;
wire   [10:0] add_ln691_53_fu_1147_p2;
wire   [10:0] zext_ln1348_5_fu_1102_p1;
wire   [10:0] zext_ln691_49_fu_1130_p1;
wire   [10:0] zext_ln691_58_fu_1163_p1;
wire   [10:0] add_ln691_54_fu_1157_p2;
wire   [10:0] add_ln691_57_fu_1166_p2;
wire   [10:0] zext_ln51_2_fu_1105_p1;
wire   [10:0] zext_ln691_50_fu_1134_p1;
wire   [10:0] zext_ln691_61_fu_1182_p1;
wire   [10:0] add_ln691_58_fu_1176_p2;
wire   [10:0] add_ln691_61_fu_1185_p2;
wire   [7:0] trunc_ln691_20_fu_1195_p4;
wire   [7:0] trunc_ln691_21_fu_1208_p4;
wire   [7:0] trunc_ln44_8_fu_1096_p1;
wire   [11:0] zext_ln51_3_fu_1191_p1;
wire   [11:0] zext_ln691_64_fu_1221_p1;
wire   [11:0] zext_ln1497_6_fu_1153_p1;
wire   [11:0] zext_ln691_62_fu_1204_p1;
wire   [11:0] zext_ln1348_6_fu_1172_p1;
wire   [11:0] zext_ln691_63_fu_1217_p1;
wire   [11:0] zext_ln691_71_fu_1243_p1;
wire   [11:0] zext_ln691_74_fu_1251_p1;
wire   [11:0] add_ln691_64_fu_1246_p2;
wire   [11:0] zext_ln691_76_fu_1260_p1;
wire   [11:0] zext_ln691_79_fu_1268_p1;
wire   [11:0] add_ln691_71_fu_1263_p2;
wire   [11:0] zext_ln691_81_fu_1277_p1;
wire   [11:0] zext_ln691_84_fu_1285_p1;
wire   [11:0] add_ln691_78_fu_1280_p2;
wire   [31:0] zext_ln44_fu_1294_p1;
wire   [0:0] icmp_ln44_fu_1298_p2;
wire   [10:0] select_ln43_fu_1303_p3;
wire   [10:0] exp_fu_1342_p4;
wire   [62:0] trunc_ln306_fu_1338_p1;
wire   [11:0] zext_ln311_fu_1352_p1;
wire   [10:0] exp_3_fu_1395_p4;
wire   [62:0] trunc_ln306_3_fu_1391_p1;
wire   [11:0] zext_ln311_3_fu_1405_p1;
wire   [10:0] exp_4_fu_1448_p4;
wire   [62:0] trunc_ln306_4_fu_1444_p1;
wire   [11:0] zext_ln311_4_fu_1458_p1;
wire   [51:0] trunc_ln315_fu_1494_p1;
wire   [52:0] p_Result_6_fu_1497_p3;
wire   [5:0] trunc_ln331_fu_1525_p1;
wire   [53:0] zext_ln320_fu_1505_p1;
wire   [53:0] zext_ln331_fu_1528_p1;
wire   [53:0] lshr_ln331_fu_1532_p2;
wire   [0:0] or_ln327_fu_1542_p2;
wire   [0:0] xor_ln327_fu_1546_p2;
wire   [0:0] and_ln329_fu_1552_p2;
wire   [0:0] icmp_ln330_fu_1509_p2;
wire   [0:0] and_ln330_fu_1557_p2;
wire   [7:0] trunc_ln331_6_fu_1538_p1;
wire   [0:0] or_ln329_fu_1571_p2;
wire   [0:0] icmp_ln337_fu_1519_p2;
wire   [0:0] xor_ln329_fu_1576_p2;
wire   [0:0] xor_ln330_fu_1588_p2;
wire   [0:0] and_ln330_6_fu_1594_p2;
wire   [51:0] trunc_ln315_3_fu_1605_p1;
wire   [52:0] p_Result_8_fu_1608_p3;
wire   [5:0] trunc_ln331_7_fu_1636_p1;
wire   [53:0] zext_ln320_3_fu_1616_p1;
wire   [53:0] zext_ln331_3_fu_1639_p1;
wire   [53:0] lshr_ln331_3_fu_1643_p2;
wire   [0:0] or_ln327_3_fu_1653_p2;
wire   [0:0] xor_ln327_3_fu_1657_p2;
wire   [0:0] and_ln329_3_fu_1663_p2;
wire   [0:0] icmp_ln330_3_fu_1620_p2;
wire   [0:0] and_ln330_7_fu_1668_p2;
wire   [15:0] trunc_ln331_8_fu_1649_p1;
wire   [0:0] or_ln329_3_fu_1682_p2;
wire   [0:0] icmp_ln337_3_fu_1630_p2;
wire   [0:0] xor_ln329_3_fu_1687_p2;
wire   [0:0] xor_ln330_3_fu_1699_p2;
wire   [0:0] and_ln330_8_fu_1705_p2;
wire   [51:0] trunc_ln315_4_fu_1716_p1;
wire   [52:0] p_Result_10_fu_1719_p3;
wire   [5:0] trunc_ln331_9_fu_1747_p1;
wire   [53:0] zext_ln320_4_fu_1727_p1;
wire   [53:0] zext_ln331_4_fu_1750_p1;
wire   [53:0] lshr_ln331_4_fu_1754_p2;
wire   [0:0] or_ln327_4_fu_1764_p2;
wire   [0:0] xor_ln327_4_fu_1768_p2;
wire   [0:0] and_ln329_4_fu_1774_p2;
wire   [0:0] icmp_ln330_4_fu_1731_p2;
wire   [0:0] and_ln330_9_fu_1779_p2;
wire   [23:0] trunc_ln331_10_fu_1760_p1;
wire   [0:0] or_ln329_4_fu_1793_p2;
wire   [0:0] icmp_ln337_4_fu_1741_p2;
wire   [0:0] xor_ln329_4_fu_1798_p2;
wire   [0:0] xor_ln330_4_fu_1810_p2;
wire   [0:0] and_ln330_10_fu_1816_p2;
wire   [7:0] sh_amt_6cast_fu_1827_p1;
wire   [7:0] shl_ln339_fu_1830_p2;
wire   [7:0] select_ln337_fu_1835_p3;
wire   [0:0] xor_ln323_fu_1848_p2;
wire   [0:0] and_ln327_fu_1853_p2;
wire   [7:0] select_ln330_6_fu_1841_p3;
wire   [15:0] sh_amt_8cast_fu_1865_p1;
wire   [15:0] shl_ln339_3_fu_1868_p2;
wire   [15:0] select_ln337_3_fu_1873_p3;
wire   [0:0] xor_ln323_3_fu_1886_p2;
wire   [0:0] and_ln327_3_fu_1891_p2;
wire   [15:0] select_ln330_8_fu_1879_p3;
wire   [23:0] sh_amt_10cast_fu_1903_p1;
wire   [23:0] shl_ln339_4_fu_1906_p2;
wire   [23:0] select_ln337_4_fu_1911_p3;
wire   [0:0] xor_ln323_4_fu_1924_p2;
wire   [0:0] and_ln327_4_fu_1929_p2;
wire   [23:0] select_ln330_10_fu_1917_p3;
wire   [0:0] p_Result_9_fu_1965_p3;
wire   [23:0] sub_ln455_4_fu_1972_p2;
wire   [0:0] p_Result_s_fu_1941_p3;
wire   [7:0] sub_ln455_fu_1948_p2;
wire   [7:0] select_ln345_fu_1984_p3;
wire   [0:0] p_Result_7_fu_1953_p3;
wire   [15:0] sub_ln455_3_fu_1960_p2;
wire   [15:0] select_ln345_2_fu_1999_p3;
wire   [23:0] shl_ln_fu_1991_p3;
wire   [23:0] b_V_fu_1977_p3;
wire   [23:0] or_ln1349_fu_2014_p2;
wire   [23:0] shl_ln1349_2_fu_2006_p3;
reg    grp_fu_237_ce;
reg    grp_fu_242_ce;
reg    grp_fu_247_ce;
reg    grp_fu_252_ce;
reg    grp_fu_255_ce;
reg    grp_fu_258_ce;
wire    ap_CS_fsm_state25;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_in_data_V_data_V_U_apdone_blk;
wire   [23:0] in_data_TDATA_int_regslice;
wire    in_data_TVALID_int_regslice;
reg    in_data_TREADY_int_regslice;
wire    regslice_both_in_data_V_data_V_U_ack_in;
wire    regslice_both_in_data_V_keep_V_U_apdone_blk;
wire   [2:0] in_data_TKEEP_int_regslice;
wire    regslice_both_in_data_V_keep_V_U_vld_out;
wire    regslice_both_in_data_V_keep_V_U_ack_in;
wire    regslice_both_in_data_V_strb_V_U_apdone_blk;
wire   [2:0] in_data_TSTRB_int_regslice;
wire    regslice_both_in_data_V_strb_V_U_vld_out;
wire    regslice_both_in_data_V_strb_V_U_ack_in;
wire    regslice_both_in_data_V_user_V_U_apdone_blk;
wire   [0:0] in_data_TUSER_int_regslice;
wire    regslice_both_in_data_V_user_V_U_vld_out;
wire    regslice_both_in_data_V_user_V_U_ack_in;
wire    regslice_both_in_data_V_last_V_U_apdone_blk;
wire   [0:0] in_data_TLAST_int_regslice;
wire    regslice_both_in_data_V_last_V_U_vld_out;
wire    regslice_both_in_data_V_last_V_U_ack_in;
wire    regslice_both_in_data_V_id_V_U_apdone_blk;
wire   [0:0] in_data_TID_int_regslice;
wire    regslice_both_in_data_V_id_V_U_vld_out;
wire    regslice_both_in_data_V_id_V_U_ack_in;
wire    regslice_both_in_data_V_dest_V_U_apdone_blk;
wire   [0:0] in_data_TDEST_int_regslice;
wire    regslice_both_in_data_V_dest_V_U_vld_out;
wire    regslice_both_in_data_V_dest_V_U_ack_in;
wire   [63:0] grp_fu_267_p00;
wire   [63:0] grp_fu_267_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
end

Blur_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_i151_i_i_reg_2274),
    .din1(64'd4589468260265693457),
    .ce(grp_fu_237_ce),
    .dout(grp_fu_237_p2)
);

Blur_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_i146_i_i_reg_2279),
    .din1(64'd4589468260265693457),
    .ce(grp_fu_242_ce),
    .dout(grp_fu_242_p2)
);

Blur_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_i141_i_i_reg_2284),
    .din1(64'd4589468260265693457),
    .ce(grp_fu_247_ce),
    .dout(grp_fu_247_p2)
);

Blur_uitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_6_no_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_252_p0),
    .ce(grp_fu_252_ce),
    .dout(grp_fu_252_p1)
);

Blur_uitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_6_no_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_255_p0),
    .ce(grp_fu_255_ce),
    .dout(grp_fu_255_p1)
);

Blur_uitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_6_no_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_258_p0),
    .ce(grp_fu_258_ce),
    .dout(grp_fu_258_p1)
);

Blur_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_267_p0),
    .din1(grp_fu_267_p1),
    .ce(1'b1),
    .dout(grp_fu_267_p2)
);

Blur_regslice_both #(
    .DataWidth( 24 ))
regslice_both_in_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_data_TDATA),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_data_V_U_ack_in),
    .data_out(in_data_TDATA_int_regslice),
    .vld_out(in_data_TVALID_int_regslice),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_data_V_U_apdone_blk)
);

Blur_regslice_both #(
    .DataWidth( 3 ))
regslice_both_in_data_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_data_TKEEP),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_keep_V_U_ack_in),
    .data_out(in_data_TKEEP_int_regslice),
    .vld_out(regslice_both_in_data_V_keep_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_keep_V_U_apdone_blk)
);

Blur_regslice_both #(
    .DataWidth( 3 ))
regslice_both_in_data_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_data_TSTRB),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_strb_V_U_ack_in),
    .data_out(in_data_TSTRB_int_regslice),
    .vld_out(regslice_both_in_data_V_strb_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_strb_V_U_apdone_blk)
);

Blur_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_data_TUSER),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_user_V_U_ack_in),
    .data_out(in_data_TUSER_int_regslice),
    .vld_out(regslice_both_in_data_V_user_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_user_V_U_apdone_blk)
);

Blur_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_data_TLAST),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_last_V_U_ack_in),
    .data_out(in_data_TLAST_int_regslice),
    .vld_out(regslice_both_in_data_V_last_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_last_V_U_apdone_blk)
);

Blur_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_data_TID),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_id_V_U_ack_in),
    .data_out(in_data_TID_int_regslice),
    .vld_out(regslice_both_in_data_V_id_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_id_V_U_apdone_blk)
);

Blur_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_data_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_data_TDEST),
    .vld_in(in_data_TVALID),
    .ack_in(regslice_both_in_data_V_dest_V_U_ack_in),
    .data_out(in_data_TDEST_int_regslice),
    .vld_out(regslice_both_in_data_V_dest_V_U_vld_out),
    .ack_out(in_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_data_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter20 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter3_state7)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_321_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_215 <= add_ln43_fu_273_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten_reg_215 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln43_reg_2156_pp0_iter2_reg == 1'd0))) begin
        row_reg_226 <= row_1_fu_1329_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        row_reg_226 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_321_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln691_45_reg_2160 <= add_ln691_45_fu_604_p2;
        add_ln691_47_reg_2165 <= add_ln691_47_fu_634_p2;
        add_ln691_49_reg_2170 <= add_ln691_49_fu_654_p2;
        add_ln691_52_reg_2175 <= add_ln691_52_fu_748_p2;
        add_ln691_56_reg_2180 <= add_ln691_56_fu_778_p2;
        add_ln691_60_reg_2185 <= add_ln691_60_fu_798_p2;
        add_ln691_63_reg_2190 <= add_ln691_63_fu_964_p2;
        add_ln691_67_reg_2195 <= add_ln691_67_fu_990_p2;
        add_ln691_70_reg_2200 <= add_ln691_70_fu_1010_p2;
        add_ln691_74_reg_2205 <= add_ln691_74_fu_1036_p2;
        add_ln691_77_reg_2210 <= add_ln691_77_fu_1056_p2;
        add_ln691_81_reg_2215 <= add_ln691_81_fu_1082_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_reg_2156 == 1'd0))) begin
        add_ln691_62_reg_2220 <= add_ln691_62_fu_1225_p2;
        add_ln691_69_reg_2225 <= add_ln691_69_fu_1231_p2;
        add_ln691_76_reg_2230 <= add_ln691_76_fu_1237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln691_63_reg_2190_pp0_iter1_reg <= add_ln691_63_reg_2190;
        add_ln691_67_reg_2195_pp0_iter1_reg <= add_ln691_67_reg_2195;
        add_ln691_70_reg_2200_pp0_iter1_reg <= add_ln691_70_reg_2200;
        add_ln691_74_reg_2205_pp0_iter1_reg <= add_ln691_74_reg_2205;
        add_ln691_77_reg_2210_pp0_iter1_reg <= add_ln691_77_reg_2210;
        add_ln691_81_reg_2215_pp0_iter1_reg <= add_ln691_81_reg_2215;
        hwin_4_V_load_reg_2142 <= hwin_4_V_fu_138;
        hwin_8_V_load_reg_2149 <= hwin_8_V_fu_154;
        icmp_ln43_reg_2156 <= icmp_ln43_fu_321_p2;
        icmp_ln43_reg_2156_pp0_iter1_reg <= icmp_ln43_reg_2156;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln43_reg_2156_pp0_iter1_reg == 1'd0))) begin
        add_ln691_68_reg_2235 <= add_ln691_68_fu_1254_p2;
        add_ln691_75_reg_2240 <= add_ln691_75_fu_1271_p2;
        add_ln691_82_reg_2245 <= add_ln691_82_fu_1288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln57_reg_2250_pp0_iter16_reg == 1'd1))) begin
        and_ln337_3_reg_2460 <= and_ln337_3_fu_1693_p2;
        and_ln337_4_reg_2480 <= and_ln337_4_fu_1804_p2;
        and_ln337_reg_2440 <= and_ln337_fu_1582_p2;
        or_ln330_3_reg_2465 <= or_ln330_3_fu_1711_p2;
        or_ln330_4_reg_2485 <= or_ln330_4_fu_1822_p2;
        or_ln330_reg_2445 <= or_ln330_fu_1600_p2;
        select_ln330_7_reg_2455 <= select_ln330_7_fu_1674_p3;
        select_ln330_9_reg_2475 <= select_ln330_9_fu_1785_p3;
        select_ln330_reg_2435 <= select_ln330_fu_1563_p3;
        sh_amt_10_reg_2470 <= sh_amt_10_fu_1736_p2;
        sh_amt_6_reg_2430 <= sh_amt_6_fu_1514_p2;
        sh_amt_8_reg_2450 <= sh_amt_8_fu_1625_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_2132 <= grp_fu_267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln57_reg_2250_pp0_iter7_reg == 1'd1))) begin
        conv_i141_i_i_reg_2284 <= grp_fu_258_p1;
        conv_i146_i_i_reg_2279 <= grp_fu_255_p1;
        conv_i151_i_i_reg_2274 <= grp_fu_252_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        h_read_reg_2111 <= h_dout;
        w_read_reg_2116 <= w_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hwin_10_V_fu_162 <= hwin_11_V_fu_166;
        hwin_11_V_fu_166 <= hwin_12_V_fu_170;
        hwin_12_V_fu_170 <= hwin_13_V_fu_174;
        hwin_1_V_fu_126 <= hwin_2_V_fu_130;
        hwin_2_V_fu_130 <= hwin_3_V_fu_134;
        hwin_3_V_fu_134 <= hwin_4_V_fu_138;
        hwin_4_V_fu_138 <= hwin_5_V_fu_142;
        hwin_5_V_fu_142 <= hwin_6_V_fu_146;
        hwin_6_V_fu_146 <= hwin_7_V_fu_150;
        hwin_7_V_fu_150 <= hwin_8_V_fu_154;
        hwin_8_V_fu_154 <= hwin_9_V_fu_158;
        hwin_9_V_fu_158 <= hwin_10_V_fu_162;
        hwin_V_1_1_i_fu_122 <= hwin_1_V_fu_126;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_321_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hwin_13_V_fu_174 <= in_data_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln57_reg_2250_pp0_iter15_reg == 1'd1))) begin
        icmp_ln323_3_reg_2358 <= icmp_ln323_3_fu_1413_p2;
        icmp_ln323_4_reg_2400 <= icmp_ln323_4_fu_1466_p2;
        icmp_ln323_reg_2316 <= icmp_ln323_fu_1360_p2;
        icmp_ln327_3_reg_2376 <= icmp_ln327_3_fu_1429_p2;
        icmp_ln327_4_reg_2418 <= icmp_ln327_4_fu_1482_p2;
        icmp_ln327_reg_2334 <= icmp_ln327_fu_1376_p2;
        icmp_ln329_3_reg_2382 <= icmp_ln329_3_fu_1435_p2;
        icmp_ln329_4_reg_2424 <= icmp_ln329_4_fu_1488_p2;
        icmp_ln329_reg_2340 <= icmp_ln329_fu_1382_p2;
        reg_3_reg_2346 <= reg_3_fu_1388_p1;
        reg_4_reg_2388 <= reg_4_fu_1441_p1;
        reg_reg_2304 <= reg_fu_1335_p1;
        sh_amt_7_reg_2365 <= sh_amt_7_fu_1419_p2;
        sh_amt_9_reg_2407 <= sh_amt_9_fu_1472_p2;
        sh_amt_reg_2323 <= sh_amt_fu_1366_p2;
        trunc_ln326_3_reg_2371 <= trunc_ln326_3_fu_1425_p1;
        trunc_ln326_4_reg_2413 <= trunc_ln326_4_fu_1478_p1;
        trunc_ln326_reg_2329 <= trunc_ln326_fu_1372_p1;
        trunc_ln328_3_reg_2352 <= trunc_ln328_3_fu_1409_p1;
        trunc_ln328_4_reg_2394 <= trunc_ln328_4_fu_1462_p1;
        trunc_ln328_reg_2310 <= trunc_ln328_fu_1356_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln323_3_reg_2358_pp0_iter17_reg <= icmp_ln323_3_reg_2358;
        icmp_ln323_4_reg_2400_pp0_iter17_reg <= icmp_ln323_4_reg_2400;
        icmp_ln323_reg_2316_pp0_iter17_reg <= icmp_ln323_reg_2316;
        icmp_ln327_3_reg_2376_pp0_iter17_reg <= icmp_ln327_3_reg_2376;
        icmp_ln327_4_reg_2418_pp0_iter17_reg <= icmp_ln327_4_reg_2418;
        icmp_ln327_reg_2334_pp0_iter17_reg <= icmp_ln327_reg_2334;
        icmp_ln43_reg_2156_pp0_iter2_reg <= icmp_ln43_reg_2156_pp0_iter1_reg;
        icmp_ln57_reg_2250_pp0_iter10_reg <= icmp_ln57_reg_2250_pp0_iter9_reg;
        icmp_ln57_reg_2250_pp0_iter11_reg <= icmp_ln57_reg_2250_pp0_iter10_reg;
        icmp_ln57_reg_2250_pp0_iter12_reg <= icmp_ln57_reg_2250_pp0_iter11_reg;
        icmp_ln57_reg_2250_pp0_iter13_reg <= icmp_ln57_reg_2250_pp0_iter12_reg;
        icmp_ln57_reg_2250_pp0_iter14_reg <= icmp_ln57_reg_2250_pp0_iter13_reg;
        icmp_ln57_reg_2250_pp0_iter15_reg <= icmp_ln57_reg_2250_pp0_iter14_reg;
        icmp_ln57_reg_2250_pp0_iter16_reg <= icmp_ln57_reg_2250_pp0_iter15_reg;
        icmp_ln57_reg_2250_pp0_iter17_reg <= icmp_ln57_reg_2250_pp0_iter16_reg;
        icmp_ln57_reg_2250_pp0_iter18_reg <= icmp_ln57_reg_2250_pp0_iter17_reg;
        icmp_ln57_reg_2250_pp0_iter19_reg <= icmp_ln57_reg_2250_pp0_iter18_reg;
        icmp_ln57_reg_2250_pp0_iter4_reg <= icmp_ln57_reg_2250;
        icmp_ln57_reg_2250_pp0_iter5_reg <= icmp_ln57_reg_2250_pp0_iter4_reg;
        icmp_ln57_reg_2250_pp0_iter6_reg <= icmp_ln57_reg_2250_pp0_iter5_reg;
        icmp_ln57_reg_2250_pp0_iter7_reg <= icmp_ln57_reg_2250_pp0_iter6_reg;
        icmp_ln57_reg_2250_pp0_iter8_reg <= icmp_ln57_reg_2250_pp0_iter7_reg;
        icmp_ln57_reg_2250_pp0_iter9_reg <= icmp_ln57_reg_2250_pp0_iter8_reg;
        reg_3_reg_2346_pp0_iter17_reg <= reg_3_reg_2346;
        reg_3_reg_2346_pp0_iter18_reg <= reg_3_reg_2346_pp0_iter17_reg;
        reg_4_reg_2388_pp0_iter17_reg <= reg_4_reg_2388;
        reg_4_reg_2388_pp0_iter18_reg <= reg_4_reg_2388_pp0_iter17_reg;
        reg_reg_2304_pp0_iter17_reg <= reg_reg_2304;
        reg_reg_2304_pp0_iter18_reg <= reg_reg_2304_pp0_iter17_reg;
        trunc_ln328_3_reg_2352_pp0_iter17_reg <= trunc_ln328_3_reg_2352;
        trunc_ln328_4_reg_2394_pp0_iter17_reg <= trunc_ln328_4_reg_2394;
        trunc_ln328_reg_2310_pp0_iter17_reg <= trunc_ln328_reg_2310;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln43_reg_2156_pp0_iter2_reg == 1'd0))) begin
        icmp_ln57_reg_2250 <= icmp_ln57_fu_1311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln57_reg_2250_pp0_iter18_reg == 1'd1))) begin
        ret_V_reg_2508 <= ret_V_fu_2020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln57_reg_2250_pp0_iter17_reg == 1'd1))) begin
        select_ln327_3_reg_2496 <= select_ln327_3_fu_1896_p3;
        select_ln327_4_reg_2502 <= select_ln327_4_fu_1934_p3;
        select_ln327_reg_2490 <= select_ln327_fu_1858_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln57_reg_2250_pp0_iter14_reg == 1'd1))) begin
        val_3_reg_2294 <= grp_fu_242_p2;
        val_4_reg_2299 <= grp_fu_247_p2;
        val_reg_2289 <= grp_fu_237_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_condition_pp0_exit_iter3_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter3_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln43_fu_321_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_237_ce = 1'b1;
    end else begin
        grp_fu_237_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_242_ce = 1'b1;
    end else begin
        grp_fu_242_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_247_ce = 1'b1;
    end else begin
        grp_fu_247_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_252_ce = 1'b1;
    end else begin
        grp_fu_252_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_255_ce = 1'b1;
    end else begin
        grp_fu_255_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_258_ce = 1'b1;
    end else begin
        grp_fu_258_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_blk_n = h_empty_n;
    end else begin
        h_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((w_empty_n == 1'b0) | (h_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_read = 1'b1;
    end else begin
        h_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln57_reg_2250_pp0_iter19_reg == 1'd1) & (ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        hconv_blk_n = hconv_full_n;
    end else begin
        hconv_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln57_reg_2250_pp0_iter19_reg == 1'd1) & (ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hconv_write = 1'b1;
    end else begin
        hconv_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln43_fu_321_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_data_TDATA_blk_n = in_data_TVALID_int_regslice;
    end else begin
        in_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln43_fu_321_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_data_TREADY_int_regslice = 1'b1;
    end else begin
        in_data_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        w_blk_n = w_empty_n;
    end else begin
        w_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((w_empty_n == 1'b0) | (h_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        w_read = 1'b1;
    end else begin
        w_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((w_empty_n == 1'b0) | (h_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) & ~((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter19 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter19 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln43_fu_273_p2 = (indvar_flatten_reg_215 + 64'd1);

assign add_ln691_42_fu_520_p2 = (zext_ln691_39_fu_516_p1 + zext_ln1348_fu_478_p1);

assign add_ln691_43_fu_538_p2 = (zext_ln691_40_fu_534_p1 + zext_ln51_fu_530_p1);

assign add_ln691_44_fu_594_p2 = (zext_ln1497_19_fu_558_p1 + zext_ln691_42_fu_590_p1);

assign add_ln691_45_fu_604_p2 = (zext_ln691_43_fu_600_p1 + zext_ln1497_4_fu_502_p1);

assign add_ln691_46_fu_624_p2 = (zext_ln691_41_fu_572_p1 + zext_ln691_44_fu_620_p1);

assign add_ln691_47_fu_634_p2 = (zext_ln691_45_fu_630_p1 + zext_ln1348_4_fu_526_p1);

assign add_ln691_48_fu_644_p2 = (zext_ln51_4_fu_576_p1 + zext_ln691_46_fu_640_p1);

assign add_ln691_49_fu_654_p2 = (zext_ln691_47_fu_650_p1 + zext_ln51_1_fu_544_p1);

assign add_ln691_50_fu_1138_p2 = (zext_ln1497_5_fu_1099_p1 + zext_ln691_48_fu_1117_p1);

assign add_ln691_51_fu_738_p2 = (zext_ln1497_21_fu_702_p1 + zext_ln691_53_fu_734_p1);

assign add_ln691_52_fu_748_p2 = (zext_ln691_54_fu_744_p1 + zext_ln1497_20_fu_670_p1);

assign add_ln691_53_fu_1147_p2 = (zext_ln691_55_fu_1144_p1 + add_ln691_50_fu_1138_p2);

assign add_ln691_54_fu_1157_p2 = (zext_ln1348_5_fu_1102_p1 + zext_ln691_49_fu_1130_p1);

assign add_ln691_55_fu_768_p2 = (zext_ln691_52_fu_716_p1 + zext_ln691_56_fu_764_p1);

assign add_ln691_56_fu_778_p2 = (zext_ln691_57_fu_774_p1 + zext_ln691_51_fu_684_p1);

assign add_ln691_57_fu_1166_p2 = (zext_ln691_58_fu_1163_p1 + add_ln691_54_fu_1157_p2);

assign add_ln691_58_fu_1176_p2 = (zext_ln51_2_fu_1105_p1 + zext_ln691_50_fu_1134_p1);

assign add_ln691_59_fu_788_p2 = (zext_ln51_6_fu_720_p1 + zext_ln691_59_fu_784_p1);

assign add_ln691_60_fu_798_p2 = (zext_ln691_60_fu_794_p1 + zext_ln51_5_fu_688_p1);

assign add_ln691_61_fu_1185_p2 = (zext_ln691_61_fu_1182_p1 + add_ln691_58_fu_1176_p2);

assign add_ln691_62_fu_1225_p2 = (zext_ln51_3_fu_1191_p1 + zext_ln691_64_fu_1221_p1);

assign add_ln691_63_fu_964_p2 = (zext_ln51_7_fu_832_p1 + zext_ln51_8_fu_864_p1);

assign add_ln691_64_fu_1246_p2 = (zext_ln691_71_fu_1243_p1 + add_ln691_62_reg_2220);

assign add_ln691_65_fu_970_p2 = (zext_ln51_9_fu_896_p1 + zext_ln51_10_fu_928_p1);

assign add_ln691_66_fu_980_p2 = (zext_ln691_70_fu_960_p1 + zext_ln47_fu_450_p1);

assign add_ln691_67_fu_990_p2 = (zext_ln691_73_fu_986_p1 + zext_ln691_72_fu_976_p1);

assign add_ln691_68_fu_1254_p2 = (zext_ln691_74_fu_1251_p1 + add_ln691_64_fu_1246_p2);

assign add_ln691_69_fu_1231_p2 = (zext_ln1497_6_fu_1153_p1 + zext_ln691_62_fu_1204_p1);

assign add_ln691_70_fu_1010_p2 = (zext_ln1497_22_fu_814_p1 + zext_ln1497_23_fu_846_p1);

assign add_ln691_71_fu_1263_p2 = (zext_ln691_76_fu_1260_p1 + add_ln691_69_reg_2225);

assign add_ln691_72_fu_1016_p2 = (zext_ln1497_24_fu_878_p1 + zext_ln1497_25_fu_910_p1);

assign add_ln691_73_fu_1026_p2 = (zext_ln1497_26_fu_942_p1 + zext_ln691_75_fu_1006_p1);

assign add_ln691_74_fu_1036_p2 = (zext_ln691_78_fu_1032_p1 + zext_ln691_77_fu_1022_p1);

assign add_ln691_75_fu_1271_p2 = (zext_ln691_79_fu_1268_p1 + add_ln691_71_fu_1263_p2);

assign add_ln691_76_fu_1237_p2 = (zext_ln1348_6_fu_1172_p1 + zext_ln691_63_fu_1217_p1);

assign add_ln691_77_fu_1056_p2 = (zext_ln691_65_fu_828_p1 + zext_ln691_66_fu_860_p1);

assign add_ln691_78_fu_1280_p2 = (zext_ln691_81_fu_1277_p1 + add_ln691_76_reg_2230);

assign add_ln691_79_fu_1062_p2 = (zext_ln691_67_fu_892_p1 + zext_ln691_68_fu_924_p1);

assign add_ln691_80_fu_1072_p2 = (zext_ln691_69_fu_956_p1 + zext_ln691_80_fu_1052_p1);

assign add_ln691_81_fu_1082_p2 = (zext_ln691_83_fu_1078_p1 + zext_ln691_82_fu_1068_p1);

assign add_ln691_82_fu_1288_p2 = (zext_ln691_84_fu_1285_p1 + add_ln691_78_fu_1280_p2);

assign add_ln691_fu_496_p2 = (zext_ln691_fu_492_p1 + zext_ln1497_fu_464_p1);

assign and_ln327_3_fu_1891_p2 = (xor_ln323_3_fu_1886_p2 & icmp_ln327_3_reg_2376_pp0_iter17_reg);

assign and_ln327_4_fu_1929_p2 = (xor_ln323_4_fu_1924_p2 & icmp_ln327_4_reg_2418_pp0_iter17_reg);

assign and_ln327_fu_1853_p2 = (xor_ln323_fu_1848_p2 & icmp_ln327_reg_2334_pp0_iter17_reg);

assign and_ln329_3_fu_1663_p2 = (xor_ln327_3_fu_1657_p2 & icmp_ln329_3_reg_2382);

assign and_ln329_4_fu_1774_p2 = (xor_ln327_4_fu_1768_p2 & icmp_ln329_4_reg_2424);

assign and_ln329_fu_1552_p2 = (xor_ln327_fu_1546_p2 & icmp_ln329_reg_2340);

assign and_ln330_10_fu_1816_p2 = (xor_ln330_4_fu_1810_p2 & and_ln329_4_fu_1774_p2);

assign and_ln330_6_fu_1594_p2 = (xor_ln330_fu_1588_p2 & and_ln329_fu_1552_p2);

assign and_ln330_7_fu_1668_p2 = (icmp_ln330_3_fu_1620_p2 & and_ln329_3_fu_1663_p2);

assign and_ln330_8_fu_1705_p2 = (xor_ln330_3_fu_1699_p2 & and_ln329_3_fu_1663_p2);

assign and_ln330_9_fu_1779_p2 = (icmp_ln330_4_fu_1731_p2 & and_ln329_4_fu_1774_p2);

assign and_ln330_fu_1557_p2 = (icmp_ln330_fu_1509_p2 & and_ln329_fu_1552_p2);

assign and_ln337_3_fu_1693_p2 = (xor_ln329_3_fu_1687_p2 & icmp_ln337_3_fu_1630_p2);

assign and_ln337_4_fu_1804_p2 = (xor_ln329_4_fu_1798_p2 & icmp_ln337_4_fu_1741_p2);

assign and_ln337_fu_1582_p2 = (xor_ln329_fu_1576_p2 & icmp_ln337_fu_1519_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln57_reg_2250_pp0_iter19_reg == 1'd1) & (ap_enable_reg_pp0_iter20 == 1'b1) & (hconv_full_n == 1'b0)) | ((icmp_ln43_fu_321_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (in_data_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln57_reg_2250_pp0_iter19_reg == 1'd1) & (ap_enable_reg_pp0_iter20 == 1'b1) & (hconv_full_n == 1'b0)) | ((icmp_ln43_fu_321_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (in_data_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln57_reg_2250_pp0_iter19_reg == 1'd1) & (ap_enable_reg_pp0_iter20 == 1'b1) & (hconv_full_n == 1'b0)) | ((icmp_ln43_fu_321_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (in_data_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((w_empty_n == 1'b0) | (h_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_pp0_stage0_iter20 = ((icmp_ln57_reg_2250_pp0_iter19_reg == 1'd1) & (hconv_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter0 = ((icmp_ln43_fu_321_p2 == 1'd0) & (in_data_TVALID_int_regslice == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign b_V_fu_1977_p3 = ((p_Result_9_fu_1965_p3[0:0] == 1'b1) ? sub_ln455_4_fu_1972_p2 : select_ln327_4_reg_2502);

assign exp_3_fu_1395_p4 = {{reg_3_fu_1388_p1[62:52]}};

assign exp_4_fu_1448_p4 = {{reg_4_fu_1441_p1[62:52]}};

assign exp_fu_1342_p4 = {{reg_fu_1335_p1[62:52]}};

assign grp_fu_252_p0 = add_ln691_75_reg_2240;

assign grp_fu_255_p0 = add_ln691_82_reg_2245;

assign grp_fu_258_p0 = add_ln691_68_reg_2235;

assign grp_fu_267_p0 = grp_fu_267_p00;

assign grp_fu_267_p00 = h_read_reg_2111;

assign grp_fu_267_p1 = grp_fu_267_p10;

assign grp_fu_267_p10 = w_read_reg_2116;

assign hconv_din = ret_V_reg_2508;

assign icmp_ln323_3_fu_1413_p2 = ((trunc_ln306_3_fu_1391_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln323_4_fu_1466_p2 = ((trunc_ln306_4_fu_1444_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln323_fu_1360_p2 = ((trunc_ln306_fu_1338_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_3_fu_1429_p2 = ((exp_3_fu_1395_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln327_4_fu_1482_p2 = ((exp_4_fu_1448_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln327_fu_1376_p2 = ((exp_fu_1342_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln329_3_fu_1435_p2 = (($signed(sh_amt_7_fu_1419_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln329_4_fu_1488_p2 = (($signed(sh_amt_9_fu_1472_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_1382_p2 = (($signed(sh_amt_fu_1366_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln330_3_fu_1620_p2 = (($signed(sh_amt_7_reg_2365) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln330_4_fu_1731_p2 = (($signed(sh_amt_9_reg_2407) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_1509_p2 = (($signed(sh_amt_reg_2323) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln337_3_fu_1630_p2 = ((sh_amt_8_fu_1625_p2 < 10'd24) ? 1'b1 : 1'b0);

assign icmp_ln337_4_fu_1741_p2 = ((sh_amt_10_fu_1736_p2 < 10'd24) ? 1'b1 : 1'b0);

assign icmp_ln337_fu_1519_p2 = ((sh_amt_6_fu_1514_p2 < 10'd24) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_321_p2 = ((indvar_flatten_reg_215 == bound_reg_2132) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_1298_p2 = (($signed(zext_ln44_fu_1294_p1) < $signed(w_read_reg_2116)) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_1311_p2 = ((select_ln43_fu_1303_p3 > 11'd13) ? 1'b1 : 1'b0);

assign in_data_TREADY = regslice_both_in_data_V_data_V_U_ack_in;

assign lshr_ln331_3_fu_1643_p2 = zext_ln320_3_fu_1616_p1 >> zext_ln331_3_fu_1639_p1;

assign lshr_ln331_4_fu_1754_p2 = zext_ln320_4_fu_1727_p1 >> zext_ln331_4_fu_1750_p1;

assign lshr_ln331_fu_1532_p2 = zext_ln320_fu_1505_p1 >> zext_ln331_fu_1528_p1;

assign or_ln1349_fu_2014_p2 = (shl_ln_fu_1991_p3 | b_V_fu_1977_p3);

assign or_ln327_3_fu_1653_p2 = (icmp_ln327_3_reg_2376 | icmp_ln323_3_reg_2358);

assign or_ln327_4_fu_1764_p2 = (icmp_ln327_4_reg_2418 | icmp_ln323_4_reg_2400);

assign or_ln327_fu_1542_p2 = (icmp_ln327_reg_2334 | icmp_ln323_reg_2316);

assign or_ln329_3_fu_1682_p2 = (or_ln327_3_fu_1653_p2 | icmp_ln329_3_reg_2382);

assign or_ln329_4_fu_1793_p2 = (or_ln327_4_fu_1764_p2 | icmp_ln329_4_reg_2424);

assign or_ln329_fu_1571_p2 = (or_ln327_fu_1542_p2 | icmp_ln329_reg_2340);

assign or_ln330_3_fu_1711_p2 = (icmp_ln323_3_reg_2358 | and_ln330_8_fu_1705_p2);

assign or_ln330_4_fu_1822_p2 = (icmp_ln323_4_reg_2400 | and_ln330_10_fu_1816_p2);

assign or_ln330_fu_1600_p2 = (icmp_ln323_reg_2316 | and_ln330_6_fu_1594_p2);

assign p_Result_10_fu_1719_p3 = {{1'd1}, {trunc_ln315_4_fu_1716_p1}};

assign p_Result_6_fu_1497_p3 = {{1'd1}, {trunc_ln315_fu_1494_p1}};

assign p_Result_7_fu_1953_p3 = reg_3_reg_2346_pp0_iter18_reg[32'd63];

assign p_Result_8_fu_1608_p3 = {{1'd1}, {trunc_ln315_3_fu_1605_p1}};

assign p_Result_9_fu_1965_p3 = reg_4_reg_2388_pp0_iter18_reg[32'd63];

assign p_Result_s_fu_1941_p3 = reg_reg_2304_pp0_iter18_reg[32'd63];

assign reg_3_fu_1388_p1 = val_3_reg_2294;

assign reg_4_fu_1441_p1 = val_4_reg_2299;

assign reg_fu_1335_p1 = val_reg_2289;

assign ret_V_fu_2020_p2 = (shl_ln1349_2_fu_2006_p3 | or_ln1349_fu_2014_p2);

assign row_1_fu_1329_p2 = (select_ln43_fu_1303_p3 + 11'd1);

assign select_ln327_3_fu_1896_p3 = ((and_ln327_3_fu_1891_p2[0:0] == 1'b1) ? trunc_ln328_3_reg_2352_pp0_iter17_reg : select_ln330_8_fu_1879_p3);

assign select_ln327_4_fu_1934_p3 = ((and_ln327_4_fu_1929_p2[0:0] == 1'b1) ? trunc_ln328_4_reg_2394_pp0_iter17_reg : select_ln330_10_fu_1917_p3);

assign select_ln327_fu_1858_p3 = ((and_ln327_fu_1853_p2[0:0] == 1'b1) ? trunc_ln328_reg_2310_pp0_iter17_reg : select_ln330_6_fu_1841_p3);

assign select_ln330_10_fu_1917_p3 = ((or_ln330_4_reg_2485[0:0] == 1'b1) ? 24'd0 : select_ln337_4_fu_1911_p3);

assign select_ln330_6_fu_1841_p3 = ((or_ln330_reg_2445[0:0] == 1'b1) ? 8'd0 : select_ln337_fu_1835_p3);

assign select_ln330_7_fu_1674_p3 = ((and_ln330_7_fu_1668_p2[0:0] == 1'b1) ? trunc_ln331_8_fu_1649_p1 : 16'd0);

assign select_ln330_8_fu_1879_p3 = ((or_ln330_3_reg_2465[0:0] == 1'b1) ? 16'd0 : select_ln337_3_fu_1873_p3);

assign select_ln330_9_fu_1785_p3 = ((and_ln330_9_fu_1779_p2[0:0] == 1'b1) ? trunc_ln331_10_fu_1760_p1 : 24'd0);

assign select_ln330_fu_1563_p3 = ((and_ln330_fu_1557_p2[0:0] == 1'b1) ? trunc_ln331_6_fu_1538_p1 : 8'd0);

assign select_ln337_3_fu_1873_p3 = ((and_ln337_3_reg_2460[0:0] == 1'b1) ? shl_ln339_3_fu_1868_p2 : select_ln330_7_reg_2455);

assign select_ln337_4_fu_1911_p3 = ((and_ln337_4_reg_2480[0:0] == 1'b1) ? shl_ln339_4_fu_1906_p2 : select_ln330_9_reg_2475);

assign select_ln337_fu_1835_p3 = ((and_ln337_reg_2440[0:0] == 1'b1) ? shl_ln339_fu_1830_p2 : select_ln330_reg_2435);

assign select_ln345_2_fu_1999_p3 = ((p_Result_7_fu_1953_p3[0:0] == 1'b1) ? sub_ln455_3_fu_1960_p2 : select_ln327_3_reg_2496);

assign select_ln345_fu_1984_p3 = ((p_Result_s_fu_1941_p3[0:0] == 1'b1) ? sub_ln455_fu_1948_p2 : select_ln327_reg_2490);

assign select_ln43_fu_1303_p3 = ((icmp_ln44_fu_1298_p2[0:0] == 1'b1) ? row_reg_226 : 11'd0);

assign sh_amt_10_fu_1736_p2 = (10'd0 - trunc_ln326_4_reg_2413);

assign sh_amt_10cast_fu_1903_p1 = sh_amt_10_reg_2470;

assign sh_amt_6_fu_1514_p2 = (10'd0 - trunc_ln326_reg_2329);

assign sh_amt_6cast_fu_1827_p1 = sh_amt_6_reg_2430[7:0];

assign sh_amt_7_fu_1419_p2 = (12'd1075 - zext_ln311_3_fu_1405_p1);

assign sh_amt_8_fu_1625_p2 = (10'd0 - trunc_ln326_3_reg_2371);

assign sh_amt_8cast_fu_1865_p1 = sh_amt_8_reg_2450;

assign sh_amt_9_fu_1472_p2 = (12'd1075 - zext_ln311_4_fu_1458_p1);

assign sh_amt_fu_1366_p2 = (12'd1075 - zext_ln311_fu_1352_p1);

assign shl_ln1349_2_fu_2006_p3 = {{select_ln345_2_fu_1999_p3}, {8'd0}};

assign shl_ln339_3_fu_1868_p2 = trunc_ln328_3_reg_2352_pp0_iter17_reg << sh_amt_8cast_fu_1865_p1;

assign shl_ln339_4_fu_1906_p2 = trunc_ln328_4_reg_2394_pp0_iter17_reg << sh_amt_10cast_fu_1903_p1;

assign shl_ln339_fu_1830_p2 = trunc_ln328_reg_2310_pp0_iter17_reg << sh_amt_6cast_fu_1827_p1;

assign shl_ln_fu_1991_p3 = {{select_ln345_fu_1984_p3}, {16'd0}};

assign sub_ln455_3_fu_1960_p2 = (16'd0 - select_ln327_3_reg_2496);

assign sub_ln455_4_fu_1972_p2 = (24'd0 - select_ln327_4_reg_2502);

assign sub_ln455_fu_1948_p2 = (8'd0 - select_ln327_reg_2490);

assign trunc_ln1497_1_fu_692_p4 = {{hwin_6_V_fu_146[23:16]}};

assign trunc_ln1497_2_fu_804_p4 = {{hwin_9_V_fu_158[23:16]}};

assign trunc_ln1497_3_fu_836_p4 = {{hwin_10_V_fu_162[23:16]}};

assign trunc_ln1497_4_fu_868_p4 = {{hwin_11_V_fu_166[23:16]}};

assign trunc_ln1497_5_fu_900_p4 = {{hwin_12_V_fu_170[23:16]}};

assign trunc_ln1497_6_fu_932_p4 = {{hwin_13_V_fu_174[23:16]}};

assign trunc_ln1497_9_fu_548_p4 = {{hwin_2_V_fu_130[23:16]}};

assign trunc_ln1497_s_fu_660_p4 = {{hwin_5_V_fu_142[23:16]}};

assign trunc_ln1_fu_468_p4 = {{hwin_V_1_1_i_fu_122[15:8]}};

assign trunc_ln2_fu_482_p4 = {{hwin_1_V_fu_126[23:16]}};

assign trunc_ln306_3_fu_1391_p1 = reg_3_fu_1388_p1[62:0];

assign trunc_ln306_4_fu_1444_p1 = reg_4_fu_1441_p1[62:0];

assign trunc_ln306_fu_1338_p1 = reg_fu_1335_p1[62:0];

assign trunc_ln315_3_fu_1605_p1 = reg_3_reg_2346[51:0];

assign trunc_ln315_4_fu_1716_p1 = reg_4_reg_2388[51:0];

assign trunc_ln315_fu_1494_p1 = reg_reg_2304[51:0];

assign trunc_ln326_3_fu_1425_p1 = sh_amt_7_fu_1419_p2[9:0];

assign trunc_ln326_4_fu_1478_p1 = sh_amt_9_fu_1472_p2[9:0];

assign trunc_ln326_fu_1372_p1 = sh_amt_fu_1366_p2[9:0];

assign trunc_ln328_3_fu_1409_p1 = reg_3_fu_1388_p1[15:0];

assign trunc_ln328_4_fu_1462_p1 = reg_4_fu_1441_p1[23:0];

assign trunc_ln328_fu_1356_p1 = reg_fu_1335_p1[7:0];

assign trunc_ln331_10_fu_1760_p1 = lshr_ln331_4_fu_1754_p2[23:0];

assign trunc_ln331_6_fu_1538_p1 = lshr_ln331_fu_1532_p2[7:0];

assign trunc_ln331_7_fu_1636_p1 = sh_amt_7_reg_2365[5:0];

assign trunc_ln331_8_fu_1649_p1 = lshr_ln331_3_fu_1643_p2[15:0];

assign trunc_ln331_9_fu_1747_p1 = sh_amt_9_reg_2407[5:0];

assign trunc_ln331_fu_1525_p1 = sh_amt_reg_2323[5:0];

assign trunc_ln44_10_fu_426_p1 = hwin_10_V_fu_162[7:0];

assign trunc_ln44_11_fu_430_p1 = hwin_11_V_fu_166[7:0];

assign trunc_ln44_12_fu_434_p1 = hwin_12_V_fu_170[7:0];

assign trunc_ln44_13_fu_438_p1 = hwin_13_V_fu_174[7:0];

assign trunc_ln44_1_fu_398_p1 = hwin_1_V_fu_126[7:0];

assign trunc_ln44_2_fu_402_p1 = hwin_2_V_fu_130[7:0];

assign trunc_ln44_3_fu_406_p1 = hwin_3_V_fu_134[7:0];

assign trunc_ln44_4_fu_1093_p1 = hwin_4_V_load_reg_2142[7:0];

assign trunc_ln44_5_fu_410_p1 = hwin_5_V_fu_142[7:0];

assign trunc_ln44_6_fu_414_p1 = hwin_6_V_fu_146[7:0];

assign trunc_ln44_7_fu_418_p1 = hwin_7_V_fu_150[7:0];

assign trunc_ln44_8_fu_1096_p1 = hwin_8_V_load_reg_2149[7:0];

assign trunc_ln44_9_fu_422_p1 = hwin_9_V_fu_158[7:0];

assign trunc_ln44_fu_394_p1 = hwin_V_1_1_i_fu_122[7:0];

assign trunc_ln47_fu_446_p1 = in_data_TDATA_int_regslice[7:0];

assign trunc_ln691_11_fu_562_p4 = {{hwin_2_V_fu_130[15:8]}};

assign trunc_ln691_12_fu_580_p4 = {{hwin_3_V_fu_134[23:16]}};

assign trunc_ln691_13_fu_610_p4 = {{hwin_3_V_fu_134[15:8]}};

assign trunc_ln691_14_fu_1108_p4 = {{hwin_4_V_load_reg_2142[23:16]}};

assign trunc_ln691_15_fu_1121_p4 = {{hwin_4_V_load_reg_2142[15:8]}};

assign trunc_ln691_16_fu_674_p4 = {{hwin_5_V_fu_142[15:8]}};

assign trunc_ln691_17_fu_706_p4 = {{hwin_6_V_fu_146[15:8]}};

assign trunc_ln691_18_fu_724_p4 = {{hwin_7_V_fu_150[23:16]}};

assign trunc_ln691_19_fu_754_p4 = {{hwin_7_V_fu_150[15:8]}};

assign trunc_ln691_20_fu_1195_p4 = {{hwin_8_V_load_reg_2149[23:16]}};

assign trunc_ln691_21_fu_1208_p4 = {{hwin_8_V_load_reg_2149[15:8]}};

assign trunc_ln691_22_fu_818_p4 = {{hwin_9_V_fu_158[15:8]}};

assign trunc_ln691_23_fu_850_p4 = {{hwin_10_V_fu_162[15:8]}};

assign trunc_ln691_24_fu_882_p4 = {{hwin_11_V_fu_166[15:8]}};

assign trunc_ln691_25_fu_914_p4 = {{hwin_12_V_fu_170[15:8]}};

assign trunc_ln691_26_fu_946_p4 = {{hwin_13_V_fu_174[15:8]}};

assign trunc_ln691_27_fu_996_p4 = {{in_data_TDATA_int_regslice[23:16]}};

assign trunc_ln691_28_fu_1042_p4 = {{in_data_TDATA_int_regslice[15:8]}};

assign trunc_ln691_s_fu_506_p4 = {{hwin_1_V_fu_126[15:8]}};

assign trunc_ln_fu_454_p4 = {{hwin_V_1_1_i_fu_122[23:16]}};

assign xor_ln323_3_fu_1886_p2 = (icmp_ln323_3_reg_2358_pp0_iter17_reg ^ 1'd1);

assign xor_ln323_4_fu_1924_p2 = (icmp_ln323_4_reg_2400_pp0_iter17_reg ^ 1'd1);

assign xor_ln323_fu_1848_p2 = (icmp_ln323_reg_2316_pp0_iter17_reg ^ 1'd1);

assign xor_ln327_3_fu_1657_p2 = (or_ln327_3_fu_1653_p2 ^ 1'd1);

assign xor_ln327_4_fu_1768_p2 = (or_ln327_4_fu_1764_p2 ^ 1'd1);

assign xor_ln327_fu_1546_p2 = (or_ln327_fu_1542_p2 ^ 1'd1);

assign xor_ln329_3_fu_1687_p2 = (or_ln329_3_fu_1682_p2 ^ 1'd1);

assign xor_ln329_4_fu_1798_p2 = (or_ln329_4_fu_1793_p2 ^ 1'd1);

assign xor_ln329_fu_1576_p2 = (or_ln329_fu_1571_p2 ^ 1'd1);

assign xor_ln330_3_fu_1699_p2 = (icmp_ln330_3_fu_1620_p2 ^ 1'd1);

assign xor_ln330_4_fu_1810_p2 = (icmp_ln330_4_fu_1731_p2 ^ 1'd1);

assign xor_ln330_fu_1588_p2 = (icmp_ln330_fu_1509_p2 ^ 1'd1);

assign zext_ln1348_4_fu_526_p1 = add_ln691_42_fu_520_p2;

assign zext_ln1348_5_fu_1102_p1 = add_ln691_47_reg_2165;

assign zext_ln1348_6_fu_1172_p1 = add_ln691_57_fu_1166_p2;

assign zext_ln1348_fu_478_p1 = trunc_ln1_fu_468_p4;

assign zext_ln1497_19_fu_558_p1 = trunc_ln1497_9_fu_548_p4;

assign zext_ln1497_20_fu_670_p1 = trunc_ln1497_s_fu_660_p4;

assign zext_ln1497_21_fu_702_p1 = trunc_ln1497_1_fu_692_p4;

assign zext_ln1497_22_fu_814_p1 = trunc_ln1497_2_fu_804_p4;

assign zext_ln1497_23_fu_846_p1 = trunc_ln1497_3_fu_836_p4;

assign zext_ln1497_24_fu_878_p1 = trunc_ln1497_4_fu_868_p4;

assign zext_ln1497_25_fu_910_p1 = trunc_ln1497_5_fu_900_p4;

assign zext_ln1497_26_fu_942_p1 = trunc_ln1497_6_fu_932_p4;

assign zext_ln1497_4_fu_502_p1 = add_ln691_fu_496_p2;

assign zext_ln1497_5_fu_1099_p1 = add_ln691_45_reg_2160;

assign zext_ln1497_6_fu_1153_p1 = add_ln691_53_fu_1147_p2;

assign zext_ln1497_fu_464_p1 = trunc_ln_fu_454_p4;

assign zext_ln311_3_fu_1405_p1 = exp_3_fu_1395_p4;

assign zext_ln311_4_fu_1458_p1 = exp_4_fu_1448_p4;

assign zext_ln311_fu_1352_p1 = exp_fu_1342_p4;

assign zext_ln320_3_fu_1616_p1 = p_Result_8_fu_1608_p3;

assign zext_ln320_4_fu_1727_p1 = p_Result_10_fu_1719_p3;

assign zext_ln320_fu_1505_p1 = p_Result_6_fu_1497_p3;

assign zext_ln331_3_fu_1639_p1 = trunc_ln331_7_fu_1636_p1;

assign zext_ln331_4_fu_1750_p1 = trunc_ln331_9_fu_1747_p1;

assign zext_ln331_fu_1528_p1 = trunc_ln331_fu_1525_p1;

assign zext_ln44_fu_1294_p1 = row_reg_226;

assign zext_ln47_fu_450_p1 = trunc_ln47_fu_446_p1;

assign zext_ln51_10_fu_928_p1 = trunc_ln44_12_fu_434_p1;

assign zext_ln51_1_fu_544_p1 = add_ln691_43_fu_538_p2;

assign zext_ln51_2_fu_1105_p1 = add_ln691_49_reg_2170;

assign zext_ln51_3_fu_1191_p1 = add_ln691_61_fu_1185_p2;

assign zext_ln51_4_fu_576_p1 = trunc_ln44_2_fu_402_p1;

assign zext_ln51_5_fu_688_p1 = trunc_ln44_5_fu_410_p1;

assign zext_ln51_6_fu_720_p1 = trunc_ln44_6_fu_414_p1;

assign zext_ln51_7_fu_832_p1 = trunc_ln44_9_fu_422_p1;

assign zext_ln51_8_fu_864_p1 = trunc_ln44_10_fu_426_p1;

assign zext_ln51_9_fu_896_p1 = trunc_ln44_11_fu_430_p1;

assign zext_ln51_fu_530_p1 = trunc_ln44_fu_394_p1;

assign zext_ln691_39_fu_516_p1 = trunc_ln691_s_fu_506_p4;

assign zext_ln691_40_fu_534_p1 = trunc_ln44_1_fu_398_p1;

assign zext_ln691_41_fu_572_p1 = trunc_ln691_11_fu_562_p4;

assign zext_ln691_42_fu_590_p1 = trunc_ln691_12_fu_580_p4;

assign zext_ln691_43_fu_600_p1 = add_ln691_44_fu_594_p2;

assign zext_ln691_44_fu_620_p1 = trunc_ln691_13_fu_610_p4;

assign zext_ln691_45_fu_630_p1 = add_ln691_46_fu_624_p2;

assign zext_ln691_46_fu_640_p1 = trunc_ln44_3_fu_406_p1;

assign zext_ln691_47_fu_650_p1 = add_ln691_48_fu_644_p2;

assign zext_ln691_48_fu_1117_p1 = trunc_ln691_14_fu_1108_p4;

assign zext_ln691_49_fu_1130_p1 = trunc_ln691_15_fu_1121_p4;

assign zext_ln691_50_fu_1134_p1 = trunc_ln44_4_fu_1093_p1;

assign zext_ln691_51_fu_684_p1 = trunc_ln691_16_fu_674_p4;

assign zext_ln691_52_fu_716_p1 = trunc_ln691_17_fu_706_p4;

assign zext_ln691_53_fu_734_p1 = trunc_ln691_18_fu_724_p4;

assign zext_ln691_54_fu_744_p1 = add_ln691_51_fu_738_p2;

assign zext_ln691_55_fu_1144_p1 = add_ln691_52_reg_2175;

assign zext_ln691_56_fu_764_p1 = trunc_ln691_19_fu_754_p4;

assign zext_ln691_57_fu_774_p1 = add_ln691_55_fu_768_p2;

assign zext_ln691_58_fu_1163_p1 = add_ln691_56_reg_2180;

assign zext_ln691_59_fu_784_p1 = trunc_ln44_7_fu_418_p1;

assign zext_ln691_60_fu_794_p1 = add_ln691_59_fu_788_p2;

assign zext_ln691_61_fu_1182_p1 = add_ln691_60_reg_2185;

assign zext_ln691_62_fu_1204_p1 = trunc_ln691_20_fu_1195_p4;

assign zext_ln691_63_fu_1217_p1 = trunc_ln691_21_fu_1208_p4;

assign zext_ln691_64_fu_1221_p1 = trunc_ln44_8_fu_1096_p1;

assign zext_ln691_65_fu_828_p1 = trunc_ln691_22_fu_818_p4;

assign zext_ln691_66_fu_860_p1 = trunc_ln691_23_fu_850_p4;

assign zext_ln691_67_fu_892_p1 = trunc_ln691_24_fu_882_p4;

assign zext_ln691_68_fu_924_p1 = trunc_ln691_25_fu_914_p4;

assign zext_ln691_69_fu_956_p1 = trunc_ln691_26_fu_946_p4;

assign zext_ln691_70_fu_960_p1 = trunc_ln44_13_fu_438_p1;

assign zext_ln691_71_fu_1243_p1 = add_ln691_63_reg_2190_pp0_iter1_reg;

assign zext_ln691_72_fu_976_p1 = add_ln691_65_fu_970_p2;

assign zext_ln691_73_fu_986_p1 = add_ln691_66_fu_980_p2;

assign zext_ln691_74_fu_1251_p1 = add_ln691_67_reg_2195_pp0_iter1_reg;

assign zext_ln691_75_fu_1006_p1 = trunc_ln691_27_fu_996_p4;

assign zext_ln691_76_fu_1260_p1 = add_ln691_70_reg_2200_pp0_iter1_reg;

assign zext_ln691_77_fu_1022_p1 = add_ln691_72_fu_1016_p2;

assign zext_ln691_78_fu_1032_p1 = add_ln691_73_fu_1026_p2;

assign zext_ln691_79_fu_1268_p1 = add_ln691_74_reg_2205_pp0_iter1_reg;

assign zext_ln691_80_fu_1052_p1 = trunc_ln691_28_fu_1042_p4;

assign zext_ln691_81_fu_1277_p1 = add_ln691_77_reg_2210_pp0_iter1_reg;

assign zext_ln691_82_fu_1068_p1 = add_ln691_79_fu_1062_p2;

assign zext_ln691_83_fu_1078_p1 = add_ln691_80_fu_1072_p2;

assign zext_ln691_84_fu_1285_p1 = add_ln691_81_reg_2215_pp0_iter1_reg;

assign zext_ln691_fu_492_p1 = trunc_ln2_fu_482_p4;

endmodule //Blur_Loop_HConvH_proc8
