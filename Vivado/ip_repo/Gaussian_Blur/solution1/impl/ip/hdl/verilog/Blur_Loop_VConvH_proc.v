// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Blur_Loop_VConvH_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        h_dout,
        h_empty_n,
        h_read,
        vconv_xlim_loc_dout,
        vconv_xlim_loc_empty_n,
        vconv_xlim_loc_read,
        hconv_dout,
        hconv_empty_n,
        hconv_read,
        vconv_din,
        vconv_full_n,
        vconv_write,
        h_out_din,
        h_out_full_n,
        h_out_write,
        vconv_xlim_loc_out_din,
        vconv_xlim_loc_out_full_n,
        vconv_xlim_loc_out_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state26 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] h_dout;
input   h_empty_n;
output   h_read;
input  [31:0] vconv_xlim_loc_dout;
input   vconv_xlim_loc_empty_n;
output   vconv_xlim_loc_read;
input  [23:0] hconv_dout;
input   hconv_empty_n;
output   hconv_read;
output  [23:0] vconv_din;
input   vconv_full_n;
output   vconv_write;
output  [31:0] h_out_din;
input   h_out_full_n;
output   h_out_write;
output  [31:0] vconv_xlim_loc_out_din;
input   vconv_xlim_loc_out_full_n;
output   vconv_xlim_loc_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg h_read;
reg vconv_xlim_loc_read;
reg hconv_read;
reg vconv_write;
reg h_out_write;
reg vconv_xlim_loc_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] linebuf_V_0_address0;
reg    linebuf_V_0_ce0;
reg    linebuf_V_0_we0;
wire   [10:0] linebuf_V_0_address1;
reg    linebuf_V_0_ce1;
wire   [23:0] linebuf_V_0_q1;
wire   [10:0] linebuf_V_1_address0;
reg    linebuf_V_1_ce0;
reg    linebuf_V_1_we0;
wire   [10:0] linebuf_V_1_address1;
reg    linebuf_V_1_ce1;
wire   [23:0] linebuf_V_1_q1;
wire   [10:0] linebuf_V_2_address0;
reg    linebuf_V_2_ce0;
reg    linebuf_V_2_we0;
wire   [10:0] linebuf_V_2_address1;
reg    linebuf_V_2_ce1;
wire   [23:0] linebuf_V_2_q1;
wire   [10:0] linebuf_V_3_address0;
reg    linebuf_V_3_ce0;
reg    linebuf_V_3_we0;
wire   [10:0] linebuf_V_3_address1;
reg    linebuf_V_3_ce1;
wire   [23:0] linebuf_V_3_q1;
wire   [10:0] linebuf_V_4_address0;
reg    linebuf_V_4_ce0;
reg    linebuf_V_4_we0;
wire   [10:0] linebuf_V_4_address1;
reg    linebuf_V_4_ce1;
wire   [23:0] linebuf_V_4_q1;
wire   [10:0] linebuf_V_5_address0;
reg    linebuf_V_5_ce0;
reg    linebuf_V_5_we0;
wire   [10:0] linebuf_V_5_address1;
reg    linebuf_V_5_ce1;
wire   [23:0] linebuf_V_5_q1;
wire   [10:0] linebuf_V_6_address0;
reg    linebuf_V_6_ce0;
reg    linebuf_V_6_we0;
wire   [10:0] linebuf_V_6_address1;
reg    linebuf_V_6_ce1;
wire   [23:0] linebuf_V_6_q1;
wire   [10:0] linebuf_V_7_address0;
reg    linebuf_V_7_ce0;
reg    linebuf_V_7_we0;
wire   [10:0] linebuf_V_7_address1;
reg    linebuf_V_7_ce1;
wire   [23:0] linebuf_V_7_q1;
wire   [10:0] linebuf_V_8_address0;
reg    linebuf_V_8_ce0;
reg    linebuf_V_8_we0;
wire   [10:0] linebuf_V_8_address1;
reg    linebuf_V_8_ce1;
wire   [23:0] linebuf_V_8_q1;
wire   [10:0] linebuf_V_9_address0;
reg    linebuf_V_9_ce0;
reg    linebuf_V_9_we0;
wire   [10:0] linebuf_V_9_address1;
reg    linebuf_V_9_ce1;
wire   [23:0] linebuf_V_9_q1;
wire   [10:0] linebuf_V_10_address0;
reg    linebuf_V_10_ce0;
reg    linebuf_V_10_we0;
wire   [10:0] linebuf_V_10_address1;
reg    linebuf_V_10_ce1;
wire   [23:0] linebuf_V_10_q1;
wire   [10:0] linebuf_V_11_address0;
reg    linebuf_V_11_ce0;
reg    linebuf_V_11_we0;
wire   [10:0] linebuf_V_11_address1;
reg    linebuf_V_11_ce1;
wire   [23:0] linebuf_V_11_q1;
wire   [10:0] linebuf_V_12_address0;
reg    linebuf_V_12_ce0;
reg    linebuf_V_12_we0;
wire   [10:0] linebuf_V_12_address1;
reg    linebuf_V_12_ce1;
wire   [23:0] linebuf_V_12_q1;
wire   [10:0] linebuf_V_13_address0;
reg    linebuf_V_13_ce0;
reg    linebuf_V_13_we0;
wire   [10:0] linebuf_V_13_address1;
reg    linebuf_V_13_ce1;
wire   [23:0] linebuf_V_13_q1;
reg    h_blk_n;
reg    vconv_xlim_loc_blk_n;
reg    hconv_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln64_reg_2197;
reg    vconv_blk_n;
reg    ap_enable_reg_pp0_iter21;
reg   [0:0] select_ln64_1_reg_2446;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter20_reg;
reg    h_out_blk_n;
reg    vconv_xlim_loc_out_blk_n;
reg   [63:0] indvar_flatten_reg_429;
reg   [31:0] row_reg_440;
reg   [10:0] col_reg_451;
reg   [31:0] h_read_reg_2166;
reg   [31:0] vconv_xlim_loc_read_reg_2171;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_fu_492_p2;
reg   [63:0] bound_reg_2187;
wire    ap_CS_fsm_state3;
wire   [63:0] add_ln64_fu_498_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_state10_pp0_stage0_iter6;
wire    ap_block_state11_pp0_stage0_iter7;
wire    ap_block_state12_pp0_stage0_iter8;
wire    ap_block_state13_pp0_stage0_iter9;
wire    ap_block_state14_pp0_stage0_iter10;
wire    ap_block_state15_pp0_stage0_iter11;
wire    ap_block_state16_pp0_stage0_iter12;
wire    ap_block_state17_pp0_stage0_iter13;
wire    ap_block_state18_pp0_stage0_iter14;
wire    ap_block_state19_pp0_stage0_iter15;
wire    ap_block_state20_pp0_stage0_iter16;
wire    ap_block_state21_pp0_stage0_iter17;
wire    ap_block_state22_pp0_stage0_iter18;
wire    ap_block_state23_pp0_stage0_iter19;
wire    ap_block_state24_pp0_stage0_iter20;
reg    ap_block_state25_pp0_stage0_iter21;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln64_fu_504_p2;
reg   [0:0] icmp_ln64_reg_2197_pp0_iter1_reg;
reg   [0:0] icmp_ln64_reg_2197_pp0_iter2_reg;
reg   [0:0] icmp_ln64_reg_2197_pp0_iter3_reg;
wire   [0:0] icmp_ln65_fu_509_p2;
reg   [0:0] icmp_ln65_reg_2201;
reg   [0:0] icmp_ln65_reg_2201_pp0_iter1_reg;
reg   [0:0] icmp_ln65_reg_2201_pp0_iter2_reg;
reg   [0:0] icmp_ln65_reg_2201_pp0_iter3_reg;
reg   [10:0] linebuf_V_0_addr_reg_2207;
reg   [10:0] linebuf_V_1_addr_reg_2213;
reg   [10:0] linebuf_V_2_addr_reg_2219;
reg   [10:0] linebuf_V_3_addr_reg_2225;
reg   [10:0] linebuf_V_4_addr_reg_2231;
reg   [10:0] linebuf_V_5_addr_reg_2237;
reg   [10:0] linebuf_V_6_addr_reg_2243;
reg   [10:0] linebuf_V_7_addr_reg_2249;
reg   [10:0] linebuf_V_8_addr_reg_2255;
reg   [10:0] linebuf_V_9_addr_reg_2261;
reg   [10:0] linebuf_V_10_addr_reg_2267;
reg   [10:0] linebuf_V_11_addr_reg_2273;
reg   [10:0] linebuf_V_12_addr_reg_2279;
reg   [10:0] linebuf_V_13_addr_reg_2285;
wire   [31:0] add_ln65_fu_540_p2;
wire   [9:0] add_ln691_4_fu_710_p2;
reg   [9:0] add_ln691_4_reg_2296;
wire   [9:0] add_ln691_6_fu_740_p2;
reg   [9:0] add_ln691_6_reg_2301;
wire   [9:0] add_ln691_8_fu_770_p2;
reg   [9:0] add_ln691_8_reg_2306;
wire   [7:0] empty_51_fu_776_p1;
reg   [7:0] empty_51_reg_2311;
reg   [7:0] trunc_ln691_4_reg_2316;
reg   [7:0] trunc_ln691_5_reg_2321;
wire   [9:0] add_ln691_11_fu_890_p2;
reg   [9:0] add_ln691_11_reg_2326;
wire   [9:0] add_ln691_15_fu_920_p2;
reg   [9:0] add_ln691_15_reg_2331;
wire   [9:0] add_ln691_19_fu_950_p2;
reg   [9:0] add_ln691_19_reg_2336;
wire   [7:0] empty_55_fu_956_p1;
reg   [7:0] empty_55_reg_2341;
reg   [7:0] trunc_ln691_8_reg_2346;
reg   [7:0] trunc_ln691_9_reg_2351;
wire   [8:0] add_ln691_22_fu_1132_p2;
reg   [8:0] add_ln691_22_reg_2356;
reg   [8:0] add_ln691_22_reg_2356_pp0_iter2_reg;
wire   [8:0] add_ln691_24_fu_1138_p2;
reg   [8:0] add_ln691_24_reg_2361;
wire   [8:0] add_ln691_25_fu_1144_p2;
reg   [8:0] add_ln691_25_reg_2366;
wire   [8:0] add_ln691_29_fu_1192_p2;
reg   [8:0] add_ln691_29_reg_2371;
reg   [8:0] add_ln691_29_reg_2371_pp0_iter2_reg;
wire   [8:0] add_ln691_31_fu_1198_p2;
reg   [8:0] add_ln691_31_reg_2376;
wire   [8:0] add_ln691_32_fu_1204_p2;
reg   [8:0] add_ln691_32_reg_2381;
wire   [8:0] add_ln691_36_fu_1224_p2;
reg   [8:0] add_ln691_36_reg_2386;
reg   [8:0] add_ln691_36_reg_2386_pp0_iter2_reg;
wire   [8:0] add_ln691_38_fu_1230_p2;
reg   [8:0] add_ln691_38_reg_2391;
wire   [8:0] add_ln691_39_fu_1236_p2;
reg   [8:0] add_ln691_39_reg_2396;
wire   [11:0] add_ln691_21_fu_1326_p2;
reg   [11:0] add_ln691_21_reg_2401;
wire   [9:0] add_ln691_26_fu_1338_p2;
reg   [9:0] add_ln691_26_reg_2406;
wire   [11:0] add_ln691_28_fu_1344_p2;
reg   [11:0] add_ln691_28_reg_2411;
wire   [9:0] add_ln691_33_fu_1356_p2;
reg   [9:0] add_ln691_33_reg_2416;
wire   [11:0] add_ln691_35_fu_1362_p2;
reg   [11:0] add_ln691_35_reg_2421;
wire   [9:0] add_ln691_40_fu_1374_p2;
reg   [9:0] add_ln691_40_reg_2426;
wire   [11:0] add_ln691_27_fu_1391_p2;
reg   [11:0] add_ln691_27_reg_2431;
wire   [11:0] add_ln691_34_fu_1408_p2;
reg   [11:0] add_ln691_34_reg_2436;
wire   [11:0] add_ln691_41_fu_1425_p2;
reg   [11:0] add_ln691_41_reg_2441;
wire   [0:0] select_ln64_1_fu_1449_p3;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter5_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter6_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter7_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter8_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter9_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter10_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter11_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter12_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter13_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter14_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter15_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter16_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter17_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter18_reg;
reg   [0:0] select_ln64_1_reg_2446_pp0_iter19_reg;
wire   [10:0] select_ln64_2_fu_1456_p3;
reg    ap_enable_reg_pp0_iter4;
wire   [63:0] grp_fu_477_p1;
reg   [63:0] conv_i38_i_i_i_reg_2470;
wire   [63:0] grp_fu_480_p1;
reg   [63:0] conv_i33_i_i_i_reg_2475;
wire   [63:0] grp_fu_483_p1;
reg   [63:0] conv_i30_i_i_i_reg_2480;
wire   [63:0] grp_fu_462_p2;
reg   [63:0] val_reg_2485;
wire   [63:0] grp_fu_467_p2;
reg   [63:0] val_1_reg_2490;
wire   [63:0] grp_fu_472_p2;
reg   [63:0] val_2_reg_2495;
wire   [63:0] reg_fu_1475_p1;
reg   [63:0] reg_reg_2500;
reg   [63:0] reg_reg_2500_pp0_iter18_reg;
reg   [63:0] reg_reg_2500_pp0_iter19_reg;
wire   [7:0] trunc_ln328_fu_1496_p1;
reg   [7:0] trunc_ln328_reg_2506;
reg   [7:0] trunc_ln328_reg_2506_pp0_iter18_reg;
wire   [0:0] icmp_ln323_fu_1500_p2;
reg   [0:0] icmp_ln323_reg_2512;
reg   [0:0] icmp_ln323_reg_2512_pp0_iter18_reg;
wire   [11:0] sh_amt_fu_1506_p2;
reg   [11:0] sh_amt_reg_2519;
wire   [9:0] trunc_ln326_fu_1512_p1;
reg   [9:0] trunc_ln326_reg_2525;
wire   [0:0] icmp_ln327_fu_1516_p2;
reg   [0:0] icmp_ln327_reg_2530;
reg   [0:0] icmp_ln327_reg_2530_pp0_iter18_reg;
wire   [0:0] icmp_ln329_fu_1522_p2;
reg   [0:0] icmp_ln329_reg_2536;
wire   [63:0] reg_1_fu_1528_p1;
reg   [63:0] reg_1_reg_2542;
reg   [63:0] reg_1_reg_2542_pp0_iter18_reg;
reg   [63:0] reg_1_reg_2542_pp0_iter19_reg;
wire   [15:0] trunc_ln328_1_fu_1549_p1;
reg   [15:0] trunc_ln328_1_reg_2548;
reg   [15:0] trunc_ln328_1_reg_2548_pp0_iter18_reg;
wire   [0:0] icmp_ln323_1_fu_1553_p2;
reg   [0:0] icmp_ln323_1_reg_2554;
reg   [0:0] icmp_ln323_1_reg_2554_pp0_iter18_reg;
wire   [11:0] sh_amt_2_fu_1559_p2;
reg   [11:0] sh_amt_2_reg_2561;
wire   [9:0] trunc_ln326_1_fu_1565_p1;
reg   [9:0] trunc_ln326_1_reg_2567;
wire   [0:0] icmp_ln327_1_fu_1569_p2;
reg   [0:0] icmp_ln327_1_reg_2572;
reg   [0:0] icmp_ln327_1_reg_2572_pp0_iter18_reg;
wire   [0:0] icmp_ln329_1_fu_1575_p2;
reg   [0:0] icmp_ln329_1_reg_2578;
wire   [63:0] reg_2_fu_1581_p1;
reg   [63:0] reg_2_reg_2584;
reg   [63:0] reg_2_reg_2584_pp0_iter18_reg;
reg   [63:0] reg_2_reg_2584_pp0_iter19_reg;
wire   [23:0] trunc_ln328_2_fu_1602_p1;
reg   [23:0] trunc_ln328_2_reg_2590;
reg   [23:0] trunc_ln328_2_reg_2590_pp0_iter18_reg;
wire   [0:0] icmp_ln323_2_fu_1606_p2;
reg   [0:0] icmp_ln323_2_reg_2596;
reg   [0:0] icmp_ln323_2_reg_2596_pp0_iter18_reg;
wire   [11:0] sh_amt_4_fu_1612_p2;
reg   [11:0] sh_amt_4_reg_2603;
wire   [9:0] trunc_ln326_2_fu_1618_p1;
reg   [9:0] trunc_ln326_2_reg_2609;
wire   [0:0] icmp_ln327_2_fu_1622_p2;
reg   [0:0] icmp_ln327_2_reg_2614;
reg   [0:0] icmp_ln327_2_reg_2614_pp0_iter18_reg;
wire   [0:0] icmp_ln329_2_fu_1628_p2;
reg   [0:0] icmp_ln329_2_reg_2620;
wire   [9:0] sh_amt_1_fu_1654_p2;
reg   [9:0] sh_amt_1_reg_2626;
wire   [7:0] select_ln330_fu_1703_p3;
reg   [7:0] select_ln330_reg_2631;
wire   [0:0] and_ln337_fu_1722_p2;
reg   [0:0] and_ln337_reg_2636;
wire   [0:0] or_ln330_fu_1740_p2;
reg   [0:0] or_ln330_reg_2641;
wire   [9:0] sh_amt_3_fu_1765_p2;
reg   [9:0] sh_amt_3_reg_2646;
wire   [15:0] select_ln330_2_fu_1814_p3;
reg   [15:0] select_ln330_2_reg_2651;
wire   [0:0] and_ln337_1_fu_1833_p2;
reg   [0:0] and_ln337_1_reg_2656;
wire   [0:0] or_ln330_1_fu_1851_p2;
reg   [0:0] or_ln330_1_reg_2661;
wire   [9:0] sh_amt_5_fu_1876_p2;
reg   [9:0] sh_amt_5_reg_2666;
wire   [23:0] select_ln330_4_fu_1925_p3;
reg   [23:0] select_ln330_4_reg_2671;
wire   [0:0] and_ln337_2_fu_1944_p2;
reg   [0:0] and_ln337_2_reg_2676;
wire   [0:0] or_ln330_2_fu_1962_p2;
reg   [0:0] or_ln330_2_reg_2681;
wire   [7:0] select_ln327_fu_1998_p3;
reg   [7:0] select_ln327_reg_2686;
wire   [15:0] select_ln327_1_fu_2036_p3;
reg   [15:0] select_ln327_1_reg_2692;
wire   [23:0] select_ln327_2_fu_2074_p3;
reg   [23:0] select_ln327_2_reg_2698;
wire   [23:0] ret_V_fu_2160_p2;
reg   [23:0] ret_V_reg_2704;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_condition_pp0_exit_iter4_state8;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
wire   [63:0] zext_ln65_fu_522_p1;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_477_p0;
wire   [31:0] grp_fu_480_p0;
wire   [31:0] grp_fu_483_p0;
wire   [31:0] grp_fu_492_p0;
wire   [31:0] grp_fu_492_p1;
wire   [31:0] select_ln64_fu_514_p3;
wire   [7:0] trunc_ln155_fu_546_p1;
wire   [7:0] empty_fu_554_p1;
wire   [7:0] trunc_ln2_fu_562_p4;
wire   [7:0] trunc_ln3_fu_576_p4;
wire   [7:0] empty_48_fu_590_p1;
wire   [8:0] zext_ln691_fu_594_p1;
wire   [8:0] zext_ln72_fu_558_p1;
wire   [8:0] add_ln691_fu_598_p2;
wire   [7:0] trunc_ln4_fu_608_p4;
wire   [8:0] zext_ln691_1_fu_618_p1;
wire   [8:0] zext_ln1497_fu_572_p1;
wire   [8:0] add_ln691_1_fu_622_p2;
wire   [7:0] trunc_ln691_1_fu_632_p4;
wire   [8:0] zext_ln691_2_fu_642_p1;
wire   [8:0] zext_ln1348_fu_586_p1;
wire   [8:0] add_ln691_2_fu_646_p2;
wire   [7:0] empty_49_fu_656_p1;
wire   [7:0] trunc_ln1497_1_fu_664_p4;
wire   [7:0] trunc_ln5_fu_678_p4;
wire   [7:0] empty_50_fu_692_p1;
wire   [8:0] zext_ln1497_4_fu_660_p1;
wire   [8:0] zext_ln691_3_fu_696_p1;
wire   [8:0] add_ln691_3_fu_700_p2;
wire   [9:0] zext_ln691_4_fu_706_p1;
wire   [9:0] zext_ln78_fu_604_p1;
wire   [7:0] trunc_ln691_2_fu_716_p4;
wire   [8:0] zext_ln1497_5_fu_674_p1;
wire   [8:0] zext_ln691_5_fu_726_p1;
wire   [8:0] add_ln691_5_fu_730_p2;
wire   [9:0] zext_ln691_6_fu_736_p1;
wire   [9:0] zext_ln1497_1_fu_628_p1;
wire   [7:0] trunc_ln691_3_fu_746_p4;
wire   [8:0] zext_ln78_3_fu_688_p1;
wire   [8:0] zext_ln691_7_fu_756_p1;
wire   [8:0] add_ln691_7_fu_760_p2;
wire   [9:0] zext_ln691_8_fu_766_p1;
wire   [9:0] zext_ln1348_1_fu_652_p1;
wire   [7:0] empty_52_fu_800_p1;
wire   [7:0] trunc_ln1497_2_fu_808_p4;
wire   [7:0] trunc_ln78_1_fu_822_p4;
wire   [7:0] empty_53_fu_836_p1;
wire   [7:0] trunc_ln1497_3_fu_844_p4;
wire   [7:0] trunc_ln78_2_fu_858_p4;
wire   [7:0] empty_54_fu_872_p1;
wire   [8:0] zext_ln1497_8_fu_840_p1;
wire   [8:0] zext_ln691_12_fu_876_p1;
wire   [8:0] add_ln691_10_fu_880_p2;
wire   [9:0] zext_ln691_13_fu_886_p1;
wire   [9:0] zext_ln1497_6_fu_804_p1;
wire   [7:0] trunc_ln691_6_fu_896_p4;
wire   [8:0] zext_ln1497_9_fu_854_p1;
wire   [8:0] zext_ln691_15_fu_906_p1;
wire   [8:0] add_ln691_14_fu_910_p2;
wire   [9:0] zext_ln691_16_fu_916_p1;
wire   [9:0] zext_ln1497_7_fu_818_p1;
wire   [7:0] trunc_ln691_7_fu_926_p4;
wire   [8:0] zext_ln78_5_fu_868_p1;
wire   [8:0] zext_ln691_18_fu_936_p1;
wire   [8:0] add_ln691_18_fu_940_p2;
wire   [9:0] zext_ln691_19_fu_946_p1;
wire   [9:0] zext_ln78_4_fu_832_p1;
wire   [7:0] empty_56_fu_980_p1;
wire   [7:0] trunc_ln1497_4_fu_988_p4;
wire   [7:0] trunc_ln78_3_fu_1002_p4;
wire   [7:0] empty_57_fu_1016_p1;
wire   [7:0] trunc_ln1497_5_fu_1024_p4;
wire   [7:0] trunc_ln78_4_fu_1038_p4;
wire   [7:0] empty_58_fu_1052_p1;
wire   [7:0] trunc_ln1497_6_fu_1060_p4;
wire   [7:0] trunc_ln78_5_fu_1074_p4;
wire   [7:0] empty_59_fu_1088_p1;
wire   [7:0] trunc_ln1497_7_fu_1096_p4;
wire   [7:0] trunc_ln78_6_fu_1110_p4;
wire   [7:0] empty_60_fu_1124_p1;
wire   [8:0] zext_ln1497_10_fu_984_p1;
wire   [8:0] zext_ln1497_12_fu_1020_p1;
wire   [8:0] zext_ln1497_14_fu_1056_p1;
wire   [8:0] zext_ln1497_16_fu_1092_p1;
wire   [8:0] zext_ln691_24_fu_1128_p1;
wire   [8:0] zext_ln155_fu_550_p1;
wire   [7:0] trunc_ln1497_8_fu_1150_p4;
wire   [7:0] trunc_ln78_7_fu_1164_p4;
wire   [7:0] trunc_ln691_s_fu_1178_p4;
wire   [8:0] zext_ln1497_11_fu_998_p1;
wire   [8:0] zext_ln1497_13_fu_1034_p1;
wire   [8:0] zext_ln1497_15_fu_1070_p1;
wire   [8:0] zext_ln1497_17_fu_1106_p1;
wire   [8:0] zext_ln1497_18_fu_1160_p1;
wire   [8:0] zext_ln691_29_fu_1188_p1;
wire   [7:0] trunc_ln691_10_fu_1210_p4;
wire   [8:0] zext_ln78_6_fu_1012_p1;
wire   [8:0] zext_ln78_7_fu_1048_p1;
wire   [8:0] zext_ln78_8_fu_1084_p1;
wire   [8:0] zext_ln78_9_fu_1120_p1;
wire   [8:0] zext_ln78_10_fu_1174_p1;
wire   [8:0] zext_ln691_34_fu_1220_p1;
wire   [10:0] zext_ln78_1_fu_1242_p1;
wire   [10:0] zext_ln691_9_fu_1251_p1;
wire   [10:0] zext_ln691_14_fu_1266_p1;
wire   [10:0] add_ln691_9_fu_1260_p2;
wire   [10:0] add_ln691_12_fu_1269_p2;
wire   [10:0] zext_ln1497_2_fu_1245_p1;
wire   [10:0] zext_ln691_10_fu_1254_p1;
wire   [10:0] zext_ln691_17_fu_1285_p1;
wire   [10:0] add_ln691_13_fu_1279_p2;
wire   [10:0] add_ln691_16_fu_1288_p2;
wire   [10:0] zext_ln1348_2_fu_1248_p1;
wire   [10:0] zext_ln691_11_fu_1257_p1;
wire   [10:0] zext_ln691_20_fu_1304_p1;
wire   [10:0] add_ln691_17_fu_1298_p2;
wire   [10:0] add_ln691_20_fu_1307_p2;
wire   [11:0] zext_ln78_2_fu_1275_p1;
wire   [11:0] zext_ln691_21_fu_1317_p1;
wire   [9:0] zext_ln691_27_fu_1335_p1;
wire   [9:0] zext_ln691_26_fu_1332_p1;
wire   [11:0] zext_ln1497_3_fu_1294_p1;
wire   [11:0] zext_ln691_22_fu_1320_p1;
wire   [9:0] zext_ln691_32_fu_1353_p1;
wire   [9:0] zext_ln691_31_fu_1350_p1;
wire   [11:0] zext_ln1348_3_fu_1313_p1;
wire   [11:0] zext_ln691_23_fu_1323_p1;
wire   [9:0] zext_ln691_37_fu_1371_p1;
wire   [9:0] zext_ln691_36_fu_1368_p1;
wire   [11:0] zext_ln691_25_fu_1380_p1;
wire   [11:0] zext_ln691_28_fu_1388_p1;
wire   [11:0] add_ln691_23_fu_1383_p2;
wire   [11:0] zext_ln691_30_fu_1397_p1;
wire   [11:0] zext_ln691_33_fu_1405_p1;
wire   [11:0] add_ln691_30_fu_1400_p2;
wire   [11:0] zext_ln691_35_fu_1414_p1;
wire   [11:0] zext_ln691_38_fu_1422_p1;
wire   [11:0] add_ln691_37_fu_1417_p2;
wire   [10:0] add_ln64_1_fu_1431_p2;
wire   [0:0] cmp76_i_i_i_mid1_fu_1437_p2;
wire   [0:0] cmp76_i_i_i84_fu_1443_p2;
wire   [10:0] exp_fu_1482_p4;
wire   [62:0] trunc_ln306_fu_1478_p1;
wire   [11:0] zext_ln311_fu_1492_p1;
wire   [10:0] exp_1_fu_1535_p4;
wire   [62:0] trunc_ln306_1_fu_1531_p1;
wire   [11:0] zext_ln311_1_fu_1545_p1;
wire   [10:0] exp_2_fu_1588_p4;
wire   [62:0] trunc_ln306_2_fu_1584_p1;
wire   [11:0] zext_ln311_2_fu_1598_p1;
wire   [51:0] trunc_ln315_fu_1634_p1;
wire   [52:0] p_Result_1_fu_1637_p3;
wire   [5:0] trunc_ln331_fu_1665_p1;
wire   [53:0] zext_ln320_fu_1645_p1;
wire   [53:0] zext_ln331_fu_1668_p1;
wire   [53:0] lshr_ln331_fu_1672_p2;
wire   [0:0] or_ln327_fu_1682_p2;
wire   [0:0] xor_ln327_fu_1686_p2;
wire   [0:0] and_ln329_fu_1692_p2;
wire   [0:0] icmp_ln330_fu_1649_p2;
wire   [0:0] and_ln330_fu_1697_p2;
wire   [7:0] trunc_ln331_1_fu_1678_p1;
wire   [0:0] or_ln329_fu_1711_p2;
wire   [0:0] icmp_ln337_fu_1659_p2;
wire   [0:0] xor_ln329_fu_1716_p2;
wire   [0:0] xor_ln330_fu_1728_p2;
wire   [0:0] and_ln330_1_fu_1734_p2;
wire   [51:0] trunc_ln315_1_fu_1745_p1;
wire   [52:0] p_Result_3_fu_1748_p3;
wire   [5:0] trunc_ln331_2_fu_1776_p1;
wire   [53:0] zext_ln320_1_fu_1756_p1;
wire   [53:0] zext_ln331_1_fu_1779_p1;
wire   [53:0] lshr_ln331_1_fu_1783_p2;
wire   [0:0] or_ln327_1_fu_1793_p2;
wire   [0:0] xor_ln327_1_fu_1797_p2;
wire   [0:0] and_ln329_1_fu_1803_p2;
wire   [0:0] icmp_ln330_1_fu_1760_p2;
wire   [0:0] and_ln330_2_fu_1808_p2;
wire   [15:0] trunc_ln331_3_fu_1789_p1;
wire   [0:0] or_ln329_1_fu_1822_p2;
wire   [0:0] icmp_ln337_1_fu_1770_p2;
wire   [0:0] xor_ln329_1_fu_1827_p2;
wire   [0:0] xor_ln330_1_fu_1839_p2;
wire   [0:0] and_ln330_3_fu_1845_p2;
wire   [51:0] trunc_ln315_2_fu_1856_p1;
wire   [52:0] p_Result_5_fu_1859_p3;
wire   [5:0] trunc_ln331_4_fu_1887_p1;
wire   [53:0] zext_ln320_2_fu_1867_p1;
wire   [53:0] zext_ln331_2_fu_1890_p1;
wire   [53:0] lshr_ln331_2_fu_1894_p2;
wire   [0:0] or_ln327_2_fu_1904_p2;
wire   [0:0] xor_ln327_2_fu_1908_p2;
wire   [0:0] and_ln329_2_fu_1914_p2;
wire   [0:0] icmp_ln330_2_fu_1871_p2;
wire   [0:0] and_ln330_4_fu_1919_p2;
wire   [23:0] trunc_ln331_5_fu_1900_p1;
wire   [0:0] or_ln329_2_fu_1933_p2;
wire   [0:0] icmp_ln337_2_fu_1881_p2;
wire   [0:0] xor_ln329_2_fu_1938_p2;
wire   [0:0] xor_ln330_2_fu_1950_p2;
wire   [0:0] and_ln330_5_fu_1956_p2;
wire   [7:0] sh_amt_1cast_fu_1967_p1;
wire   [7:0] shl_ln339_fu_1970_p2;
wire   [7:0] select_ln337_fu_1975_p3;
wire   [0:0] xor_ln323_fu_1988_p2;
wire   [0:0] and_ln327_fu_1993_p2;
wire   [7:0] select_ln330_1_fu_1981_p3;
wire   [15:0] sh_amt_3cast_fu_2005_p1;
wire   [15:0] shl_ln339_1_fu_2008_p2;
wire   [15:0] select_ln337_1_fu_2013_p3;
wire   [0:0] xor_ln323_1_fu_2026_p2;
wire   [0:0] and_ln327_1_fu_2031_p2;
wire   [15:0] select_ln330_3_fu_2019_p3;
wire   [23:0] sh_amt_5cast_fu_2043_p1;
wire   [23:0] shl_ln339_2_fu_2046_p2;
wire   [23:0] select_ln337_2_fu_2051_p3;
wire   [0:0] xor_ln323_2_fu_2064_p2;
wire   [0:0] and_ln327_2_fu_2069_p2;
wire   [23:0] select_ln330_5_fu_2057_p3;
wire   [0:0] p_Result_4_fu_2105_p3;
wire   [23:0] sub_ln455_2_fu_2112_p2;
wire   [0:0] p_Result_s_fu_2081_p3;
wire   [7:0] sub_ln455_fu_2088_p2;
wire   [7:0] select_ln345_fu_2124_p3;
wire   [0:0] p_Result_2_fu_2093_p3;
wire   [15:0] sub_ln455_1_fu_2100_p2;
wire   [15:0] select_ln345_1_fu_2139_p3;
wire   [23:0] shl_ln_fu_2131_p3;
wire   [23:0] b_V_fu_2117_p3;
wire   [23:0] or_ln1349_fu_2154_p2;
wire   [23:0] shl_ln1349_1_fu_2146_p3;
reg    grp_fu_462_ce;
reg    grp_fu_467_ce;
reg    grp_fu_472_ce;
reg    grp_fu_477_ce;
reg    grp_fu_480_ce;
reg    grp_fu_483_ce;
wire    ap_CS_fsm_state26;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_53;
reg    ap_enable_state4_pp0_iter0_stage0;
reg    ap_enable_operation_85;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_enable_operation_105;
reg    ap_enable_operation_55;
reg    ap_enable_operation_92;
reg    ap_enable_operation_113;
reg    ap_enable_operation_57;
reg    ap_enable_operation_106;
reg    ap_enable_operation_130;
reg    ap_enable_operation_59;
reg    ap_enable_operation_114;
reg    ap_enable_operation_135;
reg    ap_enable_operation_61;
reg    ap_enable_operation_131;
reg    ap_enable_operation_143;
reg    ap_enable_operation_63;
reg    ap_enable_operation_136;
reg    ap_enable_operation_151;
reg    ap_enable_operation_65;
reg    ap_enable_operation_144;
reg    ap_enable_operation_168;
reg    ap_enable_operation_67;
reg    ap_enable_operation_152;
reg    ap_enable_operation_173;
reg    ap_enable_operation_69;
reg    ap_enable_operation_169;
reg    ap_enable_operation_181;
reg    ap_enable_operation_71;
reg    ap_enable_operation_174;
reg    ap_enable_operation_189;
reg    ap_enable_operation_73;
reg    ap_enable_operation_182;
reg    ap_enable_operation_197;
reg    ap_enable_operation_75;
reg    ap_enable_operation_190;
reg    ap_enable_operation_205;
reg    ap_enable_operation_77;
reg    ap_enable_operation_198;
reg    ap_enable_operation_216;
reg    ap_enable_operation_79;
reg    ap_enable_operation_206;
reg    ap_enable_operation_227;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [63:0] grp_fu_492_p00;
wire   [63:0] grp_fu_492_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
end

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_0_address0),
    .ce0(linebuf_V_0_ce0),
    .we0(linebuf_V_0_we0),
    .d0(linebuf_V_1_q1),
    .address1(linebuf_V_0_address1),
    .ce1(linebuf_V_0_ce1),
    .q1(linebuf_V_0_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_1_address0),
    .ce0(linebuf_V_1_ce0),
    .we0(linebuf_V_1_we0),
    .d0(linebuf_V_2_q1),
    .address1(linebuf_V_1_address1),
    .ce1(linebuf_V_1_ce1),
    .q1(linebuf_V_1_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_2_address0),
    .ce0(linebuf_V_2_ce0),
    .we0(linebuf_V_2_we0),
    .d0(linebuf_V_3_q1),
    .address1(linebuf_V_2_address1),
    .ce1(linebuf_V_2_ce1),
    .q1(linebuf_V_2_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_3_address0),
    .ce0(linebuf_V_3_ce0),
    .we0(linebuf_V_3_we0),
    .d0(linebuf_V_4_q1),
    .address1(linebuf_V_3_address1),
    .ce1(linebuf_V_3_ce1),
    .q1(linebuf_V_3_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_4_address0),
    .ce0(linebuf_V_4_ce0),
    .we0(linebuf_V_4_we0),
    .d0(linebuf_V_5_q1),
    .address1(linebuf_V_4_address1),
    .ce1(linebuf_V_4_ce1),
    .q1(linebuf_V_4_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_5_address0),
    .ce0(linebuf_V_5_ce0),
    .we0(linebuf_V_5_we0),
    .d0(linebuf_V_6_q1),
    .address1(linebuf_V_5_address1),
    .ce1(linebuf_V_5_ce1),
    .q1(linebuf_V_5_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_6_address0),
    .ce0(linebuf_V_6_ce0),
    .we0(linebuf_V_6_we0),
    .d0(linebuf_V_7_q1),
    .address1(linebuf_V_6_address1),
    .ce1(linebuf_V_6_ce1),
    .q1(linebuf_V_6_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_7_address0),
    .ce0(linebuf_V_7_ce0),
    .we0(linebuf_V_7_we0),
    .d0(linebuf_V_8_q1),
    .address1(linebuf_V_7_address1),
    .ce1(linebuf_V_7_ce1),
    .q1(linebuf_V_7_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_8_address0),
    .ce0(linebuf_V_8_ce0),
    .we0(linebuf_V_8_we0),
    .d0(linebuf_V_9_q1),
    .address1(linebuf_V_8_address1),
    .ce1(linebuf_V_8_ce1),
    .q1(linebuf_V_8_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_9_address0),
    .ce0(linebuf_V_9_ce0),
    .we0(linebuf_V_9_we0),
    .d0(linebuf_V_10_q1),
    .address1(linebuf_V_9_address1),
    .ce1(linebuf_V_9_ce1),
    .q1(linebuf_V_9_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_10_address0),
    .ce0(linebuf_V_10_ce0),
    .we0(linebuf_V_10_we0),
    .d0(linebuf_V_11_q1),
    .address1(linebuf_V_10_address1),
    .ce1(linebuf_V_10_ce1),
    .q1(linebuf_V_10_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_11_address0),
    .ce0(linebuf_V_11_ce0),
    .we0(linebuf_V_11_we0),
    .d0(linebuf_V_12_q1),
    .address1(linebuf_V_11_address1),
    .ce1(linebuf_V_11_ce1),
    .q1(linebuf_V_11_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_12_address0),
    .ce0(linebuf_V_12_ce0),
    .we0(linebuf_V_12_we0),
    .d0(linebuf_V_13_q1),
    .address1(linebuf_V_12_address1),
    .ce1(linebuf_V_12_ce1),
    .q1(linebuf_V_12_q1)
);

Blur_Loop_VConvH_proc_linebuf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_V_13_address0),
    .ce0(linebuf_V_13_ce0),
    .we0(linebuf_V_13_we0),
    .d0(hconv_dout),
    .address1(linebuf_V_13_address1),
    .ce1(linebuf_V_13_ce1),
    .q1(linebuf_V_13_q1)
);

Blur_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_i38_i_i_i_reg_2470),
    .din1(64'd4589468260265693457),
    .ce(grp_fu_462_ce),
    .dout(grp_fu_462_p2)
);

Blur_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_i33_i_i_i_reg_2475),
    .din1(64'd4589468260265693457),
    .ce(grp_fu_467_ce),
    .dout(grp_fu_467_p2)
);

Blur_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_i30_i_i_i_reg_2480),
    .din1(64'd4589468260265693457),
    .ce(grp_fu_472_ce),
    .dout(grp_fu_472_p2)
);

Blur_uitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_6_no_dsp_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_477_p0),
    .ce(grp_fu_477_ce),
    .dout(grp_fu_477_p1)
);

Blur_uitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_6_no_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_480_p0),
    .ce(grp_fu_480_ce),
    .dout(grp_fu_480_p1)
);

Blur_uitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_6_no_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_483_p0),
    .ce(grp_fu_483_ce),
    .dout(grp_fu_483_p1)
);

Blur_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_492_p0),
    .din1(grp_fu_492_p1),
    .ce(1'b1),
    .dout(grp_fu_492_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state26)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter21 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter4_state8)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln64_reg_2197_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_reg_451 <= select_ln64_2_fu_1456_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        col_reg_451 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_504_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_429 <= add_ln64_fu_498_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten_reg_429 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_504_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_reg_440 <= add_ln65_fu_540_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        row_reg_440 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln691_11_reg_2326 <= add_ln691_11_fu_890_p2;
        add_ln691_15_reg_2331 <= add_ln691_15_fu_920_p2;
        add_ln691_19_reg_2336 <= add_ln691_19_fu_950_p2;
        add_ln691_22_reg_2356 <= add_ln691_22_fu_1132_p2;
        add_ln691_24_reg_2361 <= add_ln691_24_fu_1138_p2;
        add_ln691_25_reg_2366 <= add_ln691_25_fu_1144_p2;
        add_ln691_29_reg_2371 <= add_ln691_29_fu_1192_p2;
        add_ln691_31_reg_2376 <= add_ln691_31_fu_1198_p2;
        add_ln691_32_reg_2381 <= add_ln691_32_fu_1204_p2;
        add_ln691_36_reg_2386 <= add_ln691_36_fu_1224_p2;
        add_ln691_38_reg_2391 <= add_ln691_38_fu_1230_p2;
        add_ln691_39_reg_2396 <= add_ln691_39_fu_1236_p2;
        add_ln691_4_reg_2296 <= add_ln691_4_fu_710_p2;
        add_ln691_6_reg_2301 <= add_ln691_6_fu_740_p2;
        add_ln691_8_reg_2306 <= add_ln691_8_fu_770_p2;
        empty_51_reg_2311 <= empty_51_fu_776_p1;
        empty_55_reg_2341 <= empty_55_fu_956_p1;
        trunc_ln691_4_reg_2316 <= {{linebuf_V_4_q1[23:16]}};
        trunc_ln691_5_reg_2321 <= {{linebuf_V_4_q1[15:8]}};
        trunc_ln691_8_reg_2346 <= {{linebuf_V_8_q1[23:16]}};
        trunc_ln691_9_reg_2351 <= {{linebuf_V_8_q1[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2197_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln691_21_reg_2401 <= add_ln691_21_fu_1326_p2;
        add_ln691_26_reg_2406 <= add_ln691_26_fu_1338_p2;
        add_ln691_28_reg_2411 <= add_ln691_28_fu_1344_p2;
        add_ln691_33_reg_2416 <= add_ln691_33_fu_1356_p2;
        add_ln691_35_reg_2421 <= add_ln691_35_fu_1362_p2;
        add_ln691_40_reg_2426 <= add_ln691_40_fu_1374_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln691_22_reg_2356_pp0_iter2_reg <= add_ln691_22_reg_2356;
        add_ln691_29_reg_2371_pp0_iter2_reg <= add_ln691_29_reg_2371;
        add_ln691_36_reg_2386_pp0_iter2_reg <= add_ln691_36_reg_2386;
        icmp_ln323_1_reg_2554_pp0_iter18_reg <= icmp_ln323_1_reg_2554;
        icmp_ln323_2_reg_2596_pp0_iter18_reg <= icmp_ln323_2_reg_2596;
        icmp_ln323_reg_2512_pp0_iter18_reg <= icmp_ln323_reg_2512;
        icmp_ln327_1_reg_2572_pp0_iter18_reg <= icmp_ln327_1_reg_2572;
        icmp_ln327_2_reg_2614_pp0_iter18_reg <= icmp_ln327_2_reg_2614;
        icmp_ln327_reg_2530_pp0_iter18_reg <= icmp_ln327_reg_2530;
        icmp_ln64_reg_2197_pp0_iter2_reg <= icmp_ln64_reg_2197_pp0_iter1_reg;
        icmp_ln64_reg_2197_pp0_iter3_reg <= icmp_ln64_reg_2197_pp0_iter2_reg;
        icmp_ln65_reg_2201_pp0_iter2_reg <= icmp_ln65_reg_2201_pp0_iter1_reg;
        icmp_ln65_reg_2201_pp0_iter3_reg <= icmp_ln65_reg_2201_pp0_iter2_reg;
        reg_1_reg_2542_pp0_iter18_reg <= reg_1_reg_2542;
        reg_1_reg_2542_pp0_iter19_reg <= reg_1_reg_2542_pp0_iter18_reg;
        reg_2_reg_2584_pp0_iter18_reg <= reg_2_reg_2584;
        reg_2_reg_2584_pp0_iter19_reg <= reg_2_reg_2584_pp0_iter18_reg;
        reg_reg_2500_pp0_iter18_reg <= reg_reg_2500;
        reg_reg_2500_pp0_iter19_reg <= reg_reg_2500_pp0_iter18_reg;
        select_ln64_1_reg_2446_pp0_iter10_reg <= select_ln64_1_reg_2446_pp0_iter9_reg;
        select_ln64_1_reg_2446_pp0_iter11_reg <= select_ln64_1_reg_2446_pp0_iter10_reg;
        select_ln64_1_reg_2446_pp0_iter12_reg <= select_ln64_1_reg_2446_pp0_iter11_reg;
        select_ln64_1_reg_2446_pp0_iter13_reg <= select_ln64_1_reg_2446_pp0_iter12_reg;
        select_ln64_1_reg_2446_pp0_iter14_reg <= select_ln64_1_reg_2446_pp0_iter13_reg;
        select_ln64_1_reg_2446_pp0_iter15_reg <= select_ln64_1_reg_2446_pp0_iter14_reg;
        select_ln64_1_reg_2446_pp0_iter16_reg <= select_ln64_1_reg_2446_pp0_iter15_reg;
        select_ln64_1_reg_2446_pp0_iter17_reg <= select_ln64_1_reg_2446_pp0_iter16_reg;
        select_ln64_1_reg_2446_pp0_iter18_reg <= select_ln64_1_reg_2446_pp0_iter17_reg;
        select_ln64_1_reg_2446_pp0_iter19_reg <= select_ln64_1_reg_2446_pp0_iter18_reg;
        select_ln64_1_reg_2446_pp0_iter20_reg <= select_ln64_1_reg_2446_pp0_iter19_reg;
        select_ln64_1_reg_2446_pp0_iter5_reg <= select_ln64_1_reg_2446;
        select_ln64_1_reg_2446_pp0_iter6_reg <= select_ln64_1_reg_2446_pp0_iter5_reg;
        select_ln64_1_reg_2446_pp0_iter7_reg <= select_ln64_1_reg_2446_pp0_iter6_reg;
        select_ln64_1_reg_2446_pp0_iter8_reg <= select_ln64_1_reg_2446_pp0_iter7_reg;
        select_ln64_1_reg_2446_pp0_iter9_reg <= select_ln64_1_reg_2446_pp0_iter8_reg;
        trunc_ln328_1_reg_2548_pp0_iter18_reg <= trunc_ln328_1_reg_2548;
        trunc_ln328_2_reg_2590_pp0_iter18_reg <= trunc_ln328_2_reg_2590;
        trunc_ln328_reg_2506_pp0_iter18_reg <= trunc_ln328_reg_2506;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2197_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln691_27_reg_2431 <= add_ln691_27_fu_1391_p2;
        add_ln691_34_reg_2436 <= add_ln691_34_fu_1408_p2;
        add_ln691_41_reg_2441 <= add_ln691_41_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln64_1_reg_2446_pp0_iter17_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln337_1_reg_2656 <= and_ln337_1_fu_1833_p2;
        and_ln337_2_reg_2676 <= and_ln337_2_fu_1944_p2;
        and_ln337_reg_2636 <= and_ln337_fu_1722_p2;
        or_ln330_1_reg_2661 <= or_ln330_1_fu_1851_p2;
        or_ln330_2_reg_2681 <= or_ln330_2_fu_1962_p2;
        or_ln330_reg_2641 <= or_ln330_fu_1740_p2;
        select_ln330_2_reg_2651 <= select_ln330_2_fu_1814_p3;
        select_ln330_4_reg_2671 <= select_ln330_4_fu_1925_p3;
        select_ln330_reg_2631 <= select_ln330_fu_1703_p3;
        sh_amt_1_reg_2626 <= sh_amt_1_fu_1654_p2;
        sh_amt_3_reg_2646 <= sh_amt_3_fu_1765_p2;
        sh_amt_5_reg_2666 <= sh_amt_5_fu_1876_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_2187 <= grp_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln64_1_reg_2446_pp0_iter8_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_i30_i_i_i_reg_2480 <= grp_fu_483_p1;
        conv_i33_i_i_i_reg_2475 <= grp_fu_480_p1;
        conv_i38_i_i_i_reg_2470 <= grp_fu_477_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        h_read_reg_2166 <= h_dout;
        vconv_xlim_loc_read_reg_2171 <= vconv_xlim_loc_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln64_1_reg_2446_pp0_iter16_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln323_1_reg_2554 <= icmp_ln323_1_fu_1553_p2;
        icmp_ln323_2_reg_2596 <= icmp_ln323_2_fu_1606_p2;
        icmp_ln323_reg_2512 <= icmp_ln323_fu_1500_p2;
        icmp_ln327_1_reg_2572 <= icmp_ln327_1_fu_1569_p2;
        icmp_ln327_2_reg_2614 <= icmp_ln327_2_fu_1622_p2;
        icmp_ln327_reg_2530 <= icmp_ln327_fu_1516_p2;
        icmp_ln329_1_reg_2578 <= icmp_ln329_1_fu_1575_p2;
        icmp_ln329_2_reg_2620 <= icmp_ln329_2_fu_1628_p2;
        icmp_ln329_reg_2536 <= icmp_ln329_fu_1522_p2;
        reg_1_reg_2542 <= reg_1_fu_1528_p1;
        reg_2_reg_2584 <= reg_2_fu_1581_p1;
        reg_reg_2500 <= reg_fu_1475_p1;
        sh_amt_2_reg_2561 <= sh_amt_2_fu_1559_p2;
        sh_amt_4_reg_2603 <= sh_amt_4_fu_1612_p2;
        sh_amt_reg_2519 <= sh_amt_fu_1506_p2;
        trunc_ln326_1_reg_2567 <= trunc_ln326_1_fu_1565_p1;
        trunc_ln326_2_reg_2609 <= trunc_ln326_2_fu_1618_p1;
        trunc_ln326_reg_2525 <= trunc_ln326_fu_1512_p1;
        trunc_ln328_1_reg_2548 <= trunc_ln328_1_fu_1549_p1;
        trunc_ln328_2_reg_2590 <= trunc_ln328_2_fu_1602_p1;
        trunc_ln328_reg_2506 <= trunc_ln328_fu_1496_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln64_reg_2197 <= icmp_ln64_fu_504_p2;
        icmp_ln64_reg_2197_pp0_iter1_reg <= icmp_ln64_reg_2197;
        icmp_ln65_reg_2201_pp0_iter1_reg <= icmp_ln65_reg_2201;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_504_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln65_reg_2201 <= icmp_ln65_fu_509_p2;
        linebuf_V_0_addr_reg_2207 <= zext_ln65_fu_522_p1;
        linebuf_V_10_addr_reg_2267 <= zext_ln65_fu_522_p1;
        linebuf_V_11_addr_reg_2273 <= zext_ln65_fu_522_p1;
        linebuf_V_12_addr_reg_2279 <= zext_ln65_fu_522_p1;
        linebuf_V_13_addr_reg_2285 <= zext_ln65_fu_522_p1;
        linebuf_V_1_addr_reg_2213 <= zext_ln65_fu_522_p1;
        linebuf_V_2_addr_reg_2219 <= zext_ln65_fu_522_p1;
        linebuf_V_3_addr_reg_2225 <= zext_ln65_fu_522_p1;
        linebuf_V_4_addr_reg_2231 <= zext_ln65_fu_522_p1;
        linebuf_V_5_addr_reg_2237 <= zext_ln65_fu_522_p1;
        linebuf_V_6_addr_reg_2243 <= zext_ln65_fu_522_p1;
        linebuf_V_7_addr_reg_2249 <= zext_ln65_fu_522_p1;
        linebuf_V_8_addr_reg_2255 <= zext_ln65_fu_522_p1;
        linebuf_V_9_addr_reg_2261 <= zext_ln65_fu_522_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln64_1_reg_2446_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ret_V_reg_2704 <= ret_V_fu_2160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln64_1_reg_2446_pp0_iter18_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln327_1_reg_2692 <= select_ln327_1_fu_2036_p3;
        select_ln327_2_reg_2698 <= select_ln327_2_fu_2074_p3;
        select_ln327_reg_2686 <= select_ln327_fu_1998_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2197_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln64_1_reg_2446 <= select_ln64_1_fu_1449_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln64_1_reg_2446_pp0_iter15_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        val_1_reg_2490 <= grp_fu_467_p2;
        val_2_reg_2495 <= grp_fu_472_p2;
        val_reg_2485 <= grp_fu_462_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_condition_pp0_exit_iter4_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter4_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_fu_504_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_462_ce = 1'b1;
    end else begin
        grp_fu_462_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_467_ce = 1'b1;
    end else begin
        grp_fu_467_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_472_ce = 1'b1;
    end else begin
        grp_fu_472_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_477_ce = 1'b1;
    end else begin
        grp_fu_477_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_480_ce = 1'b1;
    end else begin
        grp_fu_480_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_483_ce = 1'b1;
    end else begin
        grp_fu_483_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_blk_n = h_empty_n;
    end else begin
        h_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_out_blk_n = h_out_full_n;
    end else begin
        h_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (h_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (h_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_out_write = 1'b1;
    end else begin
        h_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (h_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (h_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        h_read = 1'b1;
    end else begin
        h_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hconv_blk_n = hconv_empty_n;
    end else begin
        hconv_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hconv_read = 1'b1;
    end else begin
        hconv_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_0_ce0 = 1'b1;
    end else begin
        linebuf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_0_ce1 = 1'b1;
    end else begin
        linebuf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_0_we0 = 1'b1;
    end else begin
        linebuf_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_10_ce0 = 1'b1;
    end else begin
        linebuf_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_10_ce1 = 1'b1;
    end else begin
        linebuf_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_10_we0 = 1'b1;
    end else begin
        linebuf_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_11_ce0 = 1'b1;
    end else begin
        linebuf_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_11_ce1 = 1'b1;
    end else begin
        linebuf_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_11_we0 = 1'b1;
    end else begin
        linebuf_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_12_ce0 = 1'b1;
    end else begin
        linebuf_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_12_ce1 = 1'b1;
    end else begin
        linebuf_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_12_we0 = 1'b1;
    end else begin
        linebuf_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_13_ce0 = 1'b1;
    end else begin
        linebuf_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_13_ce1 = 1'b1;
    end else begin
        linebuf_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_13_we0 = 1'b1;
    end else begin
        linebuf_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_1_ce0 = 1'b1;
    end else begin
        linebuf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_1_ce1 = 1'b1;
    end else begin
        linebuf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_1_we0 = 1'b1;
    end else begin
        linebuf_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_2_ce0 = 1'b1;
    end else begin
        linebuf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_2_ce1 = 1'b1;
    end else begin
        linebuf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_2_we0 = 1'b1;
    end else begin
        linebuf_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_3_ce0 = 1'b1;
    end else begin
        linebuf_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_3_ce1 = 1'b1;
    end else begin
        linebuf_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_3_we0 = 1'b1;
    end else begin
        linebuf_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_4_ce0 = 1'b1;
    end else begin
        linebuf_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_4_ce1 = 1'b1;
    end else begin
        linebuf_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_4_we0 = 1'b1;
    end else begin
        linebuf_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_5_ce0 = 1'b1;
    end else begin
        linebuf_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_5_ce1 = 1'b1;
    end else begin
        linebuf_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_5_we0 = 1'b1;
    end else begin
        linebuf_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_6_ce0 = 1'b1;
    end else begin
        linebuf_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_6_ce1 = 1'b1;
    end else begin
        linebuf_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_6_we0 = 1'b1;
    end else begin
        linebuf_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_7_ce0 = 1'b1;
    end else begin
        linebuf_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_7_ce1 = 1'b1;
    end else begin
        linebuf_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_7_we0 = 1'b1;
    end else begin
        linebuf_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_8_ce0 = 1'b1;
    end else begin
        linebuf_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_8_ce1 = 1'b1;
    end else begin
        linebuf_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_8_we0 = 1'b1;
    end else begin
        linebuf_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_9_ce0 = 1'b1;
    end else begin
        linebuf_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_9_ce1 = 1'b1;
    end else begin
        linebuf_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2197 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_V_9_we0 = 1'b1;
    end else begin
        linebuf_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln64_1_reg_2446_pp0_iter20_reg == 1'd1) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        vconv_blk_n = vconv_full_n;
    end else begin
        vconv_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((select_ln64_1_reg_2446_pp0_iter20_reg == 1'd1) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        vconv_write = 1'b1;
    end else begin
        vconv_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        vconv_xlim_loc_blk_n = vconv_xlim_loc_empty_n;
    end else begin
        vconv_xlim_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        vconv_xlim_loc_out_blk_n = vconv_xlim_loc_out_full_n;
    end else begin
        vconv_xlim_loc_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (h_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (h_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        vconv_xlim_loc_out_write = 1'b1;
    end else begin
        vconv_xlim_loc_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (h_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (h_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        vconv_xlim_loc_read = 1'b1;
    end else begin
        vconv_xlim_loc_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (h_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (h_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln64_1_fu_1431_p2 = (col_reg_451 + 11'd1);

assign add_ln64_fu_498_p2 = (indvar_flatten_reg_429 + 64'd1);

assign add_ln65_fu_540_p2 = (select_ln64_fu_514_p3 + 32'd1);

assign add_ln691_10_fu_880_p2 = (zext_ln1497_8_fu_840_p1 + zext_ln691_12_fu_876_p1);

assign add_ln691_11_fu_890_p2 = (zext_ln691_13_fu_886_p1 + zext_ln1497_6_fu_804_p1);

assign add_ln691_12_fu_1269_p2 = (zext_ln691_14_fu_1266_p1 + add_ln691_9_fu_1260_p2);

assign add_ln691_13_fu_1279_p2 = (zext_ln1497_2_fu_1245_p1 + zext_ln691_10_fu_1254_p1);

assign add_ln691_14_fu_910_p2 = (zext_ln1497_9_fu_854_p1 + zext_ln691_15_fu_906_p1);

assign add_ln691_15_fu_920_p2 = (zext_ln691_16_fu_916_p1 + zext_ln1497_7_fu_818_p1);

assign add_ln691_16_fu_1288_p2 = (zext_ln691_17_fu_1285_p1 + add_ln691_13_fu_1279_p2);

assign add_ln691_17_fu_1298_p2 = (zext_ln1348_2_fu_1248_p1 + zext_ln691_11_fu_1257_p1);

assign add_ln691_18_fu_940_p2 = (zext_ln78_5_fu_868_p1 + zext_ln691_18_fu_936_p1);

assign add_ln691_19_fu_950_p2 = (zext_ln691_19_fu_946_p1 + zext_ln78_4_fu_832_p1);

assign add_ln691_1_fu_622_p2 = (zext_ln691_1_fu_618_p1 + zext_ln1497_fu_572_p1);

assign add_ln691_20_fu_1307_p2 = (zext_ln691_20_fu_1304_p1 + add_ln691_17_fu_1298_p2);

assign add_ln691_21_fu_1326_p2 = (zext_ln78_2_fu_1275_p1 + zext_ln691_21_fu_1317_p1);

assign add_ln691_22_fu_1132_p2 = (zext_ln1497_10_fu_984_p1 + zext_ln1497_12_fu_1020_p1);

assign add_ln691_23_fu_1383_p2 = (zext_ln691_25_fu_1380_p1 + add_ln691_21_reg_2401);

assign add_ln691_24_fu_1138_p2 = (zext_ln1497_14_fu_1056_p1 + zext_ln1497_16_fu_1092_p1);

assign add_ln691_25_fu_1144_p2 = (zext_ln691_24_fu_1128_p1 + zext_ln155_fu_550_p1);

assign add_ln691_26_fu_1338_p2 = (zext_ln691_27_fu_1335_p1 + zext_ln691_26_fu_1332_p1);

assign add_ln691_27_fu_1391_p2 = (zext_ln691_28_fu_1388_p1 + add_ln691_23_fu_1383_p2);

assign add_ln691_28_fu_1344_p2 = (zext_ln1497_3_fu_1294_p1 + zext_ln691_22_fu_1320_p1);

assign add_ln691_29_fu_1192_p2 = (zext_ln1497_11_fu_998_p1 + zext_ln1497_13_fu_1034_p1);

assign add_ln691_2_fu_646_p2 = (zext_ln691_2_fu_642_p1 + zext_ln1348_fu_586_p1);

assign add_ln691_30_fu_1400_p2 = (zext_ln691_30_fu_1397_p1 + add_ln691_28_reg_2411);

assign add_ln691_31_fu_1198_p2 = (zext_ln1497_15_fu_1070_p1 + zext_ln1497_17_fu_1106_p1);

assign add_ln691_32_fu_1204_p2 = (zext_ln1497_18_fu_1160_p1 + zext_ln691_29_fu_1188_p1);

assign add_ln691_33_fu_1356_p2 = (zext_ln691_32_fu_1353_p1 + zext_ln691_31_fu_1350_p1);

assign add_ln691_34_fu_1408_p2 = (zext_ln691_33_fu_1405_p1 + add_ln691_30_fu_1400_p2);

assign add_ln691_35_fu_1362_p2 = (zext_ln1348_3_fu_1313_p1 + zext_ln691_23_fu_1323_p1);

assign add_ln691_36_fu_1224_p2 = (zext_ln78_6_fu_1012_p1 + zext_ln78_7_fu_1048_p1);

assign add_ln691_37_fu_1417_p2 = (zext_ln691_35_fu_1414_p1 + add_ln691_35_reg_2421);

assign add_ln691_38_fu_1230_p2 = (zext_ln78_8_fu_1084_p1 + zext_ln78_9_fu_1120_p1);

assign add_ln691_39_fu_1236_p2 = (zext_ln78_10_fu_1174_p1 + zext_ln691_34_fu_1220_p1);

assign add_ln691_3_fu_700_p2 = (zext_ln1497_4_fu_660_p1 + zext_ln691_3_fu_696_p1);

assign add_ln691_40_fu_1374_p2 = (zext_ln691_37_fu_1371_p1 + zext_ln691_36_fu_1368_p1);

assign add_ln691_41_fu_1425_p2 = (zext_ln691_38_fu_1422_p1 + add_ln691_37_fu_1417_p2);

assign add_ln691_4_fu_710_p2 = (zext_ln691_4_fu_706_p1 + zext_ln78_fu_604_p1);

assign add_ln691_5_fu_730_p2 = (zext_ln1497_5_fu_674_p1 + zext_ln691_5_fu_726_p1);

assign add_ln691_6_fu_740_p2 = (zext_ln691_6_fu_736_p1 + zext_ln1497_1_fu_628_p1);

assign add_ln691_7_fu_760_p2 = (zext_ln78_3_fu_688_p1 + zext_ln691_7_fu_756_p1);

assign add_ln691_8_fu_770_p2 = (zext_ln691_8_fu_766_p1 + zext_ln1348_1_fu_652_p1);

assign add_ln691_9_fu_1260_p2 = (zext_ln78_1_fu_1242_p1 + zext_ln691_9_fu_1251_p1);

assign add_ln691_fu_598_p2 = (zext_ln691_fu_594_p1 + zext_ln72_fu_558_p1);

assign and_ln327_1_fu_2031_p2 = (xor_ln323_1_fu_2026_p2 & icmp_ln327_1_reg_2572_pp0_iter18_reg);

assign and_ln327_2_fu_2069_p2 = (xor_ln323_2_fu_2064_p2 & icmp_ln327_2_reg_2614_pp0_iter18_reg);

assign and_ln327_fu_1993_p2 = (xor_ln323_fu_1988_p2 & icmp_ln327_reg_2530_pp0_iter18_reg);

assign and_ln329_1_fu_1803_p2 = (xor_ln327_1_fu_1797_p2 & icmp_ln329_1_reg_2578);

assign and_ln329_2_fu_1914_p2 = (xor_ln327_2_fu_1908_p2 & icmp_ln329_2_reg_2620);

assign and_ln329_fu_1692_p2 = (xor_ln327_fu_1686_p2 & icmp_ln329_reg_2536);

assign and_ln330_1_fu_1734_p2 = (xor_ln330_fu_1728_p2 & and_ln329_fu_1692_p2);

assign and_ln330_2_fu_1808_p2 = (icmp_ln330_1_fu_1760_p2 & and_ln329_1_fu_1803_p2);

assign and_ln330_3_fu_1845_p2 = (xor_ln330_1_fu_1839_p2 & and_ln329_1_fu_1803_p2);

assign and_ln330_4_fu_1919_p2 = (icmp_ln330_2_fu_1871_p2 & and_ln329_2_fu_1914_p2);

assign and_ln330_5_fu_1956_p2 = (xor_ln330_2_fu_1950_p2 & and_ln329_2_fu_1914_p2);

assign and_ln330_fu_1697_p2 = (icmp_ln330_fu_1649_p2 & and_ln329_fu_1692_p2);

assign and_ln337_1_fu_1833_p2 = (xor_ln329_1_fu_1827_p2 & icmp_ln337_1_fu_1770_p2);

assign and_ln337_2_fu_1944_p2 = (xor_ln329_2_fu_1938_p2 & icmp_ln337_2_fu_1881_p2);

assign and_ln337_fu_1722_p2 = (xor_ln329_fu_1716_p2 & icmp_ln337_fu_1659_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((vconv_full_n == 1'b0) & (select_ln64_1_reg_2446_pp0_iter20_reg == 1'd1) & (ap_enable_reg_pp0_iter21 == 1'b1)) | ((hconv_empty_n == 1'b0) & (icmp_ln64_reg_2197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((vconv_full_n == 1'b0) & (select_ln64_1_reg_2446_pp0_iter20_reg == 1'd1) & (ap_enable_reg_pp0_iter21 == 1'b1)) | ((hconv_empty_n == 1'b0) & (icmp_ln64_reg_2197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((vconv_full_n == 1'b0) & (select_ln64_1_reg_2446_pp0_iter20_reg == 1'd1) & (ap_enable_reg_pp0_iter21 == 1'b1)) | ((hconv_empty_n == 1'b0) & (icmp_ln64_reg_2197 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((vconv_xlim_loc_out_full_n == 1'b0) | (h_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (h_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_pp0_stage0_iter21 = ((vconv_full_n == 1'b0) & (select_ln64_1_reg_2446_pp0_iter20_reg == 1'd1));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((hconv_empty_n == 1'b0) & (icmp_ln64_reg_2197 == 1'd0));
end

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_105 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_106 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_113 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_114 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_130 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_131 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_135 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_136 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_143 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_144 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_151 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_152 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_168 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_169 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_173 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_174 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_181 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_182 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_189 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_190 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_197 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_198 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_205 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_206 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_216 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_227 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_53 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_55 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_57 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_59 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_61 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_63 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_65 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_67 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_69 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_71 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_73 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_75 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_77 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_79 = (icmp_ln64_fu_504_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_85 = (icmp_ln64_reg_2197 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_92 = (icmp_ln64_reg_2197 == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign b_V_fu_2117_p3 = ((p_Result_4_fu_2105_p3[0:0] == 1'b1) ? sub_ln455_2_fu_2112_p2 : select_ln327_2_reg_2698);

assign cmp76_i_i_i84_fu_1443_p2 = ((col_reg_451 > 11'd13) ? 1'b1 : 1'b0);

assign cmp76_i_i_i_mid1_fu_1437_p2 = ((add_ln64_1_fu_1431_p2 > 11'd13) ? 1'b1 : 1'b0);

assign empty_48_fu_590_p1 = linebuf_V_1_q1[7:0];

assign empty_49_fu_656_p1 = linebuf_V_2_q1[7:0];

assign empty_50_fu_692_p1 = linebuf_V_3_q1[7:0];

assign empty_51_fu_776_p1 = linebuf_V_4_q1[7:0];

assign empty_52_fu_800_p1 = linebuf_V_5_q1[7:0];

assign empty_53_fu_836_p1 = linebuf_V_6_q1[7:0];

assign empty_54_fu_872_p1 = linebuf_V_7_q1[7:0];

assign empty_55_fu_956_p1 = linebuf_V_8_q1[7:0];

assign empty_56_fu_980_p1 = linebuf_V_9_q1[7:0];

assign empty_57_fu_1016_p1 = linebuf_V_10_q1[7:0];

assign empty_58_fu_1052_p1 = linebuf_V_11_q1[7:0];

assign empty_59_fu_1088_p1 = linebuf_V_12_q1[7:0];

assign empty_60_fu_1124_p1 = linebuf_V_13_q1[7:0];

assign empty_fu_554_p1 = linebuf_V_0_q1[7:0];

assign exp_1_fu_1535_p4 = {{reg_1_fu_1528_p1[62:52]}};

assign exp_2_fu_1588_p4 = {{reg_2_fu_1581_p1[62:52]}};

assign exp_fu_1482_p4 = {{reg_fu_1475_p1[62:52]}};

assign grp_fu_477_p0 = add_ln691_34_reg_2436;

assign grp_fu_480_p0 = add_ln691_41_reg_2441;

assign grp_fu_483_p0 = add_ln691_27_reg_2431;

assign grp_fu_492_p0 = grp_fu_492_p00;

assign grp_fu_492_p00 = h_read_reg_2166;

assign grp_fu_492_p1 = grp_fu_492_p10;

assign grp_fu_492_p10 = vconv_xlim_loc_read_reg_2171;

assign h_out_din = h_dout;

assign icmp_ln323_1_fu_1553_p2 = ((trunc_ln306_1_fu_1531_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln323_2_fu_1606_p2 = ((trunc_ln306_2_fu_1584_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln323_fu_1500_p2 = ((trunc_ln306_fu_1478_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_1_fu_1569_p2 = ((exp_1_fu_1535_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln327_2_fu_1622_p2 = ((exp_2_fu_1588_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln327_fu_1516_p2 = ((exp_fu_1482_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln329_1_fu_1575_p2 = (($signed(sh_amt_2_fu_1559_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln329_2_fu_1628_p2 = (($signed(sh_amt_4_fu_1612_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_1522_p2 = (($signed(sh_amt_fu_1506_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln330_1_fu_1760_p2 = (($signed(sh_amt_2_reg_2561) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln330_2_fu_1871_p2 = (($signed(sh_amt_4_reg_2603) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_1649_p2 = (($signed(sh_amt_reg_2519) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln337_1_fu_1770_p2 = ((sh_amt_3_fu_1765_p2 < 10'd24) ? 1'b1 : 1'b0);

assign icmp_ln337_2_fu_1881_p2 = ((sh_amt_5_fu_1876_p2 < 10'd24) ? 1'b1 : 1'b0);

assign icmp_ln337_fu_1659_p2 = ((sh_amt_1_fu_1654_p2 < 10'd24) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_504_p2 = ((indvar_flatten_reg_429 == bound_reg_2187) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_509_p2 = ((row_reg_440 == vconv_xlim_loc_read_reg_2171) ? 1'b1 : 1'b0);

assign linebuf_V_0_address0 = linebuf_V_0_addr_reg_2207;

assign linebuf_V_0_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_10_address0 = linebuf_V_10_addr_reg_2267;

assign linebuf_V_10_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_11_address0 = linebuf_V_11_addr_reg_2273;

assign linebuf_V_11_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_12_address0 = linebuf_V_12_addr_reg_2279;

assign linebuf_V_12_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_13_address0 = linebuf_V_13_addr_reg_2285;

assign linebuf_V_13_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_1_address0 = linebuf_V_1_addr_reg_2213;

assign linebuf_V_1_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_2_address0 = linebuf_V_2_addr_reg_2219;

assign linebuf_V_2_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_3_address0 = linebuf_V_3_addr_reg_2225;

assign linebuf_V_3_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_4_address0 = linebuf_V_4_addr_reg_2231;

assign linebuf_V_4_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_5_address0 = linebuf_V_5_addr_reg_2237;

assign linebuf_V_5_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_6_address0 = linebuf_V_6_addr_reg_2243;

assign linebuf_V_6_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_7_address0 = linebuf_V_7_addr_reg_2249;

assign linebuf_V_7_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_8_address0 = linebuf_V_8_addr_reg_2255;

assign linebuf_V_8_address1 = zext_ln65_fu_522_p1;

assign linebuf_V_9_address0 = linebuf_V_9_addr_reg_2261;

assign linebuf_V_9_address1 = zext_ln65_fu_522_p1;

assign lshr_ln331_1_fu_1783_p2 = zext_ln320_1_fu_1756_p1 >> zext_ln331_1_fu_1779_p1;

assign lshr_ln331_2_fu_1894_p2 = zext_ln320_2_fu_1867_p1 >> zext_ln331_2_fu_1890_p1;

assign lshr_ln331_fu_1672_p2 = zext_ln320_fu_1645_p1 >> zext_ln331_fu_1668_p1;

assign or_ln1349_fu_2154_p2 = (shl_ln_fu_2131_p3 | b_V_fu_2117_p3);

assign or_ln327_1_fu_1793_p2 = (icmp_ln327_1_reg_2572 | icmp_ln323_1_reg_2554);

assign or_ln327_2_fu_1904_p2 = (icmp_ln327_2_reg_2614 | icmp_ln323_2_reg_2596);

assign or_ln327_fu_1682_p2 = (icmp_ln327_reg_2530 | icmp_ln323_reg_2512);

assign or_ln329_1_fu_1822_p2 = (or_ln327_1_fu_1793_p2 | icmp_ln329_1_reg_2578);

assign or_ln329_2_fu_1933_p2 = (or_ln327_2_fu_1904_p2 | icmp_ln329_2_reg_2620);

assign or_ln329_fu_1711_p2 = (or_ln327_fu_1682_p2 | icmp_ln329_reg_2536);

assign or_ln330_1_fu_1851_p2 = (icmp_ln323_1_reg_2554 | and_ln330_3_fu_1845_p2);

assign or_ln330_2_fu_1962_p2 = (icmp_ln323_2_reg_2596 | and_ln330_5_fu_1956_p2);

assign or_ln330_fu_1740_p2 = (icmp_ln323_reg_2512 | and_ln330_1_fu_1734_p2);

assign p_Result_1_fu_1637_p3 = {{1'd1}, {trunc_ln315_fu_1634_p1}};

assign p_Result_2_fu_2093_p3 = reg_1_reg_2542_pp0_iter19_reg[32'd63];

assign p_Result_3_fu_1748_p3 = {{1'd1}, {trunc_ln315_1_fu_1745_p1}};

assign p_Result_4_fu_2105_p3 = reg_2_reg_2584_pp0_iter19_reg[32'd63];

assign p_Result_5_fu_1859_p3 = {{1'd1}, {trunc_ln315_2_fu_1856_p1}};

assign p_Result_s_fu_2081_p3 = reg_reg_2500_pp0_iter19_reg[32'd63];

assign reg_1_fu_1528_p1 = val_1_reg_2490;

assign reg_2_fu_1581_p1 = val_2_reg_2495;

assign reg_fu_1475_p1 = val_reg_2485;

assign ret_V_fu_2160_p2 = (shl_ln1349_1_fu_2146_p3 | or_ln1349_fu_2154_p2);

assign select_ln327_1_fu_2036_p3 = ((and_ln327_1_fu_2031_p2[0:0] == 1'b1) ? trunc_ln328_1_reg_2548_pp0_iter18_reg : select_ln330_3_fu_2019_p3);

assign select_ln327_2_fu_2074_p3 = ((and_ln327_2_fu_2069_p2[0:0] == 1'b1) ? trunc_ln328_2_reg_2590_pp0_iter18_reg : select_ln330_5_fu_2057_p3);

assign select_ln327_fu_1998_p3 = ((and_ln327_fu_1993_p2[0:0] == 1'b1) ? trunc_ln328_reg_2506_pp0_iter18_reg : select_ln330_1_fu_1981_p3);

assign select_ln330_1_fu_1981_p3 = ((or_ln330_reg_2641[0:0] == 1'b1) ? 8'd0 : select_ln337_fu_1975_p3);

assign select_ln330_2_fu_1814_p3 = ((and_ln330_2_fu_1808_p2[0:0] == 1'b1) ? trunc_ln331_3_fu_1789_p1 : 16'd0);

assign select_ln330_3_fu_2019_p3 = ((or_ln330_1_reg_2661[0:0] == 1'b1) ? 16'd0 : select_ln337_1_fu_2013_p3);

assign select_ln330_4_fu_1925_p3 = ((and_ln330_4_fu_1919_p2[0:0] == 1'b1) ? trunc_ln331_5_fu_1900_p1 : 24'd0);

assign select_ln330_5_fu_2057_p3 = ((or_ln330_2_reg_2681[0:0] == 1'b1) ? 24'd0 : select_ln337_2_fu_2051_p3);

assign select_ln330_fu_1703_p3 = ((and_ln330_fu_1697_p2[0:0] == 1'b1) ? trunc_ln331_1_fu_1678_p1 : 8'd0);

assign select_ln337_1_fu_2013_p3 = ((and_ln337_1_reg_2656[0:0] == 1'b1) ? shl_ln339_1_fu_2008_p2 : select_ln330_2_reg_2651);

assign select_ln337_2_fu_2051_p3 = ((and_ln337_2_reg_2676[0:0] == 1'b1) ? shl_ln339_2_fu_2046_p2 : select_ln330_4_reg_2671);

assign select_ln337_fu_1975_p3 = ((and_ln337_reg_2636[0:0] == 1'b1) ? shl_ln339_fu_1970_p2 : select_ln330_reg_2631);

assign select_ln345_1_fu_2139_p3 = ((p_Result_2_fu_2093_p3[0:0] == 1'b1) ? sub_ln455_1_fu_2100_p2 : select_ln327_1_reg_2692);

assign select_ln345_fu_2124_p3 = ((p_Result_s_fu_2081_p3[0:0] == 1'b1) ? sub_ln455_fu_2088_p2 : select_ln327_reg_2686);

assign select_ln64_1_fu_1449_p3 = ((icmp_ln65_reg_2201_pp0_iter3_reg[0:0] == 1'b1) ? cmp76_i_i_i_mid1_fu_1437_p2 : cmp76_i_i_i84_fu_1443_p2);

assign select_ln64_2_fu_1456_p3 = ((icmp_ln65_reg_2201_pp0_iter3_reg[0:0] == 1'b1) ? add_ln64_1_fu_1431_p2 : col_reg_451);

assign select_ln64_fu_514_p3 = ((icmp_ln65_fu_509_p2[0:0] == 1'b1) ? 32'd0 : row_reg_440);

assign sh_amt_1_fu_1654_p2 = (10'd0 - trunc_ln326_reg_2525);

assign sh_amt_1cast_fu_1967_p1 = sh_amt_1_reg_2626[7:0];

assign sh_amt_2_fu_1559_p2 = (12'd1075 - zext_ln311_1_fu_1545_p1);

assign sh_amt_3_fu_1765_p2 = (10'd0 - trunc_ln326_1_reg_2567);

assign sh_amt_3cast_fu_2005_p1 = sh_amt_3_reg_2646;

assign sh_amt_4_fu_1612_p2 = (12'd1075 - zext_ln311_2_fu_1598_p1);

assign sh_amt_5_fu_1876_p2 = (10'd0 - trunc_ln326_2_reg_2609);

assign sh_amt_5cast_fu_2043_p1 = sh_amt_5_reg_2666;

assign sh_amt_fu_1506_p2 = (12'd1075 - zext_ln311_fu_1492_p1);

assign shl_ln1349_1_fu_2146_p3 = {{select_ln345_1_fu_2139_p3}, {8'd0}};

assign shl_ln339_1_fu_2008_p2 = trunc_ln328_1_reg_2548_pp0_iter18_reg << sh_amt_3cast_fu_2005_p1;

assign shl_ln339_2_fu_2046_p2 = trunc_ln328_2_reg_2590_pp0_iter18_reg << sh_amt_5cast_fu_2043_p1;

assign shl_ln339_fu_1970_p2 = trunc_ln328_reg_2506_pp0_iter18_reg << sh_amt_1cast_fu_1967_p1;

assign shl_ln_fu_2131_p3 = {{select_ln345_fu_2124_p3}, {16'd0}};

assign sub_ln455_1_fu_2100_p2 = (16'd0 - select_ln327_1_reg_2692);

assign sub_ln455_2_fu_2112_p2 = (24'd0 - select_ln327_2_reg_2698);

assign sub_ln455_fu_2088_p2 = (8'd0 - select_ln327_reg_2686);

assign trunc_ln1497_1_fu_664_p4 = {{linebuf_V_2_q1[23:16]}};

assign trunc_ln1497_2_fu_808_p4 = {{linebuf_V_5_q1[23:16]}};

assign trunc_ln1497_3_fu_844_p4 = {{linebuf_V_6_q1[23:16]}};

assign trunc_ln1497_4_fu_988_p4 = {{linebuf_V_9_q1[23:16]}};

assign trunc_ln1497_5_fu_1024_p4 = {{linebuf_V_10_q1[23:16]}};

assign trunc_ln1497_6_fu_1060_p4 = {{linebuf_V_11_q1[23:16]}};

assign trunc_ln1497_7_fu_1096_p4 = {{linebuf_V_12_q1[23:16]}};

assign trunc_ln1497_8_fu_1150_p4 = {{linebuf_V_13_q1[23:16]}};

assign trunc_ln155_fu_546_p1 = hconv_dout[7:0];

assign trunc_ln2_fu_562_p4 = {{linebuf_V_0_q1[23:16]}};

assign trunc_ln306_1_fu_1531_p1 = reg_1_fu_1528_p1[62:0];

assign trunc_ln306_2_fu_1584_p1 = reg_2_fu_1581_p1[62:0];

assign trunc_ln306_fu_1478_p1 = reg_fu_1475_p1[62:0];

assign trunc_ln315_1_fu_1745_p1 = reg_1_reg_2542[51:0];

assign trunc_ln315_2_fu_1856_p1 = reg_2_reg_2584[51:0];

assign trunc_ln315_fu_1634_p1 = reg_reg_2500[51:0];

assign trunc_ln326_1_fu_1565_p1 = sh_amt_2_fu_1559_p2[9:0];

assign trunc_ln326_2_fu_1618_p1 = sh_amt_4_fu_1612_p2[9:0];

assign trunc_ln326_fu_1512_p1 = sh_amt_fu_1506_p2[9:0];

assign trunc_ln328_1_fu_1549_p1 = reg_1_fu_1528_p1[15:0];

assign trunc_ln328_2_fu_1602_p1 = reg_2_fu_1581_p1[23:0];

assign trunc_ln328_fu_1496_p1 = reg_fu_1475_p1[7:0];

assign trunc_ln331_1_fu_1678_p1 = lshr_ln331_fu_1672_p2[7:0];

assign trunc_ln331_2_fu_1776_p1 = sh_amt_2_reg_2561[5:0];

assign trunc_ln331_3_fu_1789_p1 = lshr_ln331_1_fu_1783_p2[15:0];

assign trunc_ln331_4_fu_1887_p1 = sh_amt_4_reg_2603[5:0];

assign trunc_ln331_5_fu_1900_p1 = lshr_ln331_2_fu_1894_p2[23:0];

assign trunc_ln331_fu_1665_p1 = sh_amt_reg_2519[5:0];

assign trunc_ln3_fu_576_p4 = {{linebuf_V_0_q1[15:8]}};

assign trunc_ln4_fu_608_p4 = {{linebuf_V_1_q1[23:16]}};

assign trunc_ln5_fu_678_p4 = {{linebuf_V_2_q1[15:8]}};

assign trunc_ln691_10_fu_1210_p4 = {{hconv_dout[15:8]}};

assign trunc_ln691_1_fu_632_p4 = {{linebuf_V_1_q1[15:8]}};

assign trunc_ln691_2_fu_716_p4 = {{linebuf_V_3_q1[23:16]}};

assign trunc_ln691_3_fu_746_p4 = {{linebuf_V_3_q1[15:8]}};

assign trunc_ln691_6_fu_896_p4 = {{linebuf_V_7_q1[23:16]}};

assign trunc_ln691_7_fu_926_p4 = {{linebuf_V_7_q1[15:8]}};

assign trunc_ln691_s_fu_1178_p4 = {{hconv_dout[23:16]}};

assign trunc_ln78_1_fu_822_p4 = {{linebuf_V_5_q1[15:8]}};

assign trunc_ln78_2_fu_858_p4 = {{linebuf_V_6_q1[15:8]}};

assign trunc_ln78_3_fu_1002_p4 = {{linebuf_V_9_q1[15:8]}};

assign trunc_ln78_4_fu_1038_p4 = {{linebuf_V_10_q1[15:8]}};

assign trunc_ln78_5_fu_1074_p4 = {{linebuf_V_11_q1[15:8]}};

assign trunc_ln78_6_fu_1110_p4 = {{linebuf_V_12_q1[15:8]}};

assign trunc_ln78_7_fu_1164_p4 = {{linebuf_V_13_q1[15:8]}};

assign vconv_din = ret_V_reg_2704;

assign vconv_xlim_loc_out_din = vconv_xlim_loc_dout;

assign xor_ln323_1_fu_2026_p2 = (icmp_ln323_1_reg_2554_pp0_iter18_reg ^ 1'd1);

assign xor_ln323_2_fu_2064_p2 = (icmp_ln323_2_reg_2596_pp0_iter18_reg ^ 1'd1);

assign xor_ln323_fu_1988_p2 = (icmp_ln323_reg_2512_pp0_iter18_reg ^ 1'd1);

assign xor_ln327_1_fu_1797_p2 = (or_ln327_1_fu_1793_p2 ^ 1'd1);

assign xor_ln327_2_fu_1908_p2 = (or_ln327_2_fu_1904_p2 ^ 1'd1);

assign xor_ln327_fu_1686_p2 = (or_ln327_fu_1682_p2 ^ 1'd1);

assign xor_ln329_1_fu_1827_p2 = (or_ln329_1_fu_1822_p2 ^ 1'd1);

assign xor_ln329_2_fu_1938_p2 = (or_ln329_2_fu_1933_p2 ^ 1'd1);

assign xor_ln329_fu_1716_p2 = (or_ln329_fu_1711_p2 ^ 1'd1);

assign xor_ln330_1_fu_1839_p2 = (icmp_ln330_1_fu_1760_p2 ^ 1'd1);

assign xor_ln330_2_fu_1950_p2 = (icmp_ln330_2_fu_1871_p2 ^ 1'd1);

assign xor_ln330_fu_1728_p2 = (icmp_ln330_fu_1649_p2 ^ 1'd1);

assign zext_ln1348_1_fu_652_p1 = add_ln691_2_fu_646_p2;

assign zext_ln1348_2_fu_1248_p1 = add_ln691_8_reg_2306;

assign zext_ln1348_3_fu_1313_p1 = add_ln691_20_fu_1307_p2;

assign zext_ln1348_fu_586_p1 = trunc_ln3_fu_576_p4;

assign zext_ln1497_10_fu_984_p1 = empty_56_fu_980_p1;

assign zext_ln1497_11_fu_998_p1 = trunc_ln1497_4_fu_988_p4;

assign zext_ln1497_12_fu_1020_p1 = empty_57_fu_1016_p1;

assign zext_ln1497_13_fu_1034_p1 = trunc_ln1497_5_fu_1024_p4;

assign zext_ln1497_14_fu_1056_p1 = empty_58_fu_1052_p1;

assign zext_ln1497_15_fu_1070_p1 = trunc_ln1497_6_fu_1060_p4;

assign zext_ln1497_16_fu_1092_p1 = empty_59_fu_1088_p1;

assign zext_ln1497_17_fu_1106_p1 = trunc_ln1497_7_fu_1096_p4;

assign zext_ln1497_18_fu_1160_p1 = trunc_ln1497_8_fu_1150_p4;

assign zext_ln1497_1_fu_628_p1 = add_ln691_1_fu_622_p2;

assign zext_ln1497_2_fu_1245_p1 = add_ln691_6_reg_2301;

assign zext_ln1497_3_fu_1294_p1 = add_ln691_16_fu_1288_p2;

assign zext_ln1497_4_fu_660_p1 = empty_49_fu_656_p1;

assign zext_ln1497_5_fu_674_p1 = trunc_ln1497_1_fu_664_p4;

assign zext_ln1497_6_fu_804_p1 = empty_52_fu_800_p1;

assign zext_ln1497_7_fu_818_p1 = trunc_ln1497_2_fu_808_p4;

assign zext_ln1497_8_fu_840_p1 = empty_53_fu_836_p1;

assign zext_ln1497_9_fu_854_p1 = trunc_ln1497_3_fu_844_p4;

assign zext_ln1497_fu_572_p1 = trunc_ln2_fu_562_p4;

assign zext_ln155_fu_550_p1 = trunc_ln155_fu_546_p1;

assign zext_ln311_1_fu_1545_p1 = exp_1_fu_1535_p4;

assign zext_ln311_2_fu_1598_p1 = exp_2_fu_1588_p4;

assign zext_ln311_fu_1492_p1 = exp_fu_1482_p4;

assign zext_ln320_1_fu_1756_p1 = p_Result_3_fu_1748_p3;

assign zext_ln320_2_fu_1867_p1 = p_Result_5_fu_1859_p3;

assign zext_ln320_fu_1645_p1 = p_Result_1_fu_1637_p3;

assign zext_ln331_1_fu_1779_p1 = trunc_ln331_2_fu_1776_p1;

assign zext_ln331_2_fu_1890_p1 = trunc_ln331_4_fu_1887_p1;

assign zext_ln331_fu_1668_p1 = trunc_ln331_fu_1665_p1;

assign zext_ln65_fu_522_p1 = select_ln64_fu_514_p3;

assign zext_ln691_10_fu_1254_p1 = trunc_ln691_4_reg_2316;

assign zext_ln691_11_fu_1257_p1 = trunc_ln691_5_reg_2321;

assign zext_ln691_12_fu_876_p1 = empty_54_fu_872_p1;

assign zext_ln691_13_fu_886_p1 = add_ln691_10_fu_880_p2;

assign zext_ln691_14_fu_1266_p1 = add_ln691_11_reg_2326;

assign zext_ln691_15_fu_906_p1 = trunc_ln691_6_fu_896_p4;

assign zext_ln691_16_fu_916_p1 = add_ln691_14_fu_910_p2;

assign zext_ln691_17_fu_1285_p1 = add_ln691_15_reg_2331;

assign zext_ln691_18_fu_936_p1 = trunc_ln691_7_fu_926_p4;

assign zext_ln691_19_fu_946_p1 = add_ln691_18_fu_940_p2;

assign zext_ln691_1_fu_618_p1 = trunc_ln4_fu_608_p4;

assign zext_ln691_20_fu_1304_p1 = add_ln691_19_reg_2336;

assign zext_ln691_21_fu_1317_p1 = empty_55_reg_2341;

assign zext_ln691_22_fu_1320_p1 = trunc_ln691_8_reg_2346;

assign zext_ln691_23_fu_1323_p1 = trunc_ln691_9_reg_2351;

assign zext_ln691_24_fu_1128_p1 = empty_60_fu_1124_p1;

assign zext_ln691_25_fu_1380_p1 = add_ln691_22_reg_2356_pp0_iter2_reg;

assign zext_ln691_26_fu_1332_p1 = add_ln691_24_reg_2361;

assign zext_ln691_27_fu_1335_p1 = add_ln691_25_reg_2366;

assign zext_ln691_28_fu_1388_p1 = add_ln691_26_reg_2406;

assign zext_ln691_29_fu_1188_p1 = trunc_ln691_s_fu_1178_p4;

assign zext_ln691_2_fu_642_p1 = trunc_ln691_1_fu_632_p4;

assign zext_ln691_30_fu_1397_p1 = add_ln691_29_reg_2371_pp0_iter2_reg;

assign zext_ln691_31_fu_1350_p1 = add_ln691_31_reg_2376;

assign zext_ln691_32_fu_1353_p1 = add_ln691_32_reg_2381;

assign zext_ln691_33_fu_1405_p1 = add_ln691_33_reg_2416;

assign zext_ln691_34_fu_1220_p1 = trunc_ln691_10_fu_1210_p4;

assign zext_ln691_35_fu_1414_p1 = add_ln691_36_reg_2386_pp0_iter2_reg;

assign zext_ln691_36_fu_1368_p1 = add_ln691_38_reg_2391;

assign zext_ln691_37_fu_1371_p1 = add_ln691_39_reg_2396;

assign zext_ln691_38_fu_1422_p1 = add_ln691_40_reg_2426;

assign zext_ln691_3_fu_696_p1 = empty_50_fu_692_p1;

assign zext_ln691_4_fu_706_p1 = add_ln691_3_fu_700_p2;

assign zext_ln691_5_fu_726_p1 = trunc_ln691_2_fu_716_p4;

assign zext_ln691_6_fu_736_p1 = add_ln691_5_fu_730_p2;

assign zext_ln691_7_fu_756_p1 = trunc_ln691_3_fu_746_p4;

assign zext_ln691_8_fu_766_p1 = add_ln691_7_fu_760_p2;

assign zext_ln691_9_fu_1251_p1 = empty_51_reg_2311;

assign zext_ln691_fu_594_p1 = empty_48_fu_590_p1;

assign zext_ln72_fu_558_p1 = empty_fu_554_p1;

assign zext_ln78_10_fu_1174_p1 = trunc_ln78_7_fu_1164_p4;

assign zext_ln78_1_fu_1242_p1 = add_ln691_4_reg_2296;

assign zext_ln78_2_fu_1275_p1 = add_ln691_12_fu_1269_p2;

assign zext_ln78_3_fu_688_p1 = trunc_ln5_fu_678_p4;

assign zext_ln78_4_fu_832_p1 = trunc_ln78_1_fu_822_p4;

assign zext_ln78_5_fu_868_p1 = trunc_ln78_2_fu_858_p4;

assign zext_ln78_6_fu_1012_p1 = trunc_ln78_3_fu_1002_p4;

assign zext_ln78_7_fu_1048_p1 = trunc_ln78_4_fu_1038_p4;

assign zext_ln78_8_fu_1084_p1 = trunc_ln78_5_fu_1074_p4;

assign zext_ln78_9_fu_1120_p1 = trunc_ln78_6_fu_1110_p4;

assign zext_ln78_fu_604_p1 = add_ln691_fu_598_p2;

endmodule //Blur_Loop_VConvH_proc
