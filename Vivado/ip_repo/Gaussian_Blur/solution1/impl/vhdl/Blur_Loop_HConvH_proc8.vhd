-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Blur_Loop_HConvH_proc8 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    h_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    h_empty_n : IN STD_LOGIC;
    h_read : OUT STD_LOGIC;
    w_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    w_empty_n : IN STD_LOGIC;
    w_read : OUT STD_LOGIC;
    in_data_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    in_data_TVALID : IN STD_LOGIC;
    in_data_TREADY : OUT STD_LOGIC;
    in_data_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    in_data_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    in_data_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_data_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    in_data_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    hconv_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    hconv_full_n : IN STD_LOGIC;
    hconv_write : OUT STD_LOGIC );
end;


architecture behav of Blur_Loop_HConvH_proc8 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv64_3FB1111111111111 : STD_LOGIC_VECTOR (63 downto 0) := "0011111110110001000100010001000100010001000100010001000100010001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv11_D : STD_LOGIC_VECTOR (10 downto 0) := "00000001101";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv11_433 : STD_LOGIC_VECTOR (10 downto 0) := "10000110011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_18 : STD_LOGIC_VECTOR (9 downto 0) := "0000011000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal h_blk_n : STD_LOGIC;
    signal w_blk_n : STD_LOGIC;
    signal in_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln43_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal hconv_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal icmp_ln57_reg_2250 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_215 : STD_LOGIC_VECTOR (63 downto 0);
    signal row_reg_226 : STD_LOGIC_VECTOR (10 downto 0);
    signal h_read_reg_2111 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_read_reg_2116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_267_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_reg_2132 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln43_fu_273_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal hwin_4_V_load_reg_2142 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_8_V_load_reg_2149 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln43_reg_2156 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_2156_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_2156_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_45_fu_604_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_45_reg_2160 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_47_fu_634_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_47_reg_2165 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_49_fu_654_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_49_reg_2170 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_52_fu_748_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_52_reg_2175 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_56_fu_778_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_56_reg_2180 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_60_fu_798_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_60_reg_2185 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_63_fu_964_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_63_reg_2190 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_63_reg_2190_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_67_fu_990_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_67_reg_2195 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_67_reg_2195_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_70_fu_1010_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_70_reg_2200 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_70_reg_2200_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_74_fu_1036_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_74_reg_2205 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_74_reg_2205_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_77_fu_1056_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_77_reg_2210 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_77_reg_2210_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_81_fu_1082_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_81_reg_2215 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_81_reg_2215_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln691_62_fu_1225_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_62_reg_2220 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_69_fu_1231_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_69_reg_2225 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_76_fu_1237_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_76_reg_2230 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_68_fu_1254_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_68_reg_2235 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_75_fu_1271_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_75_reg_2240 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_82_fu_1288_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_82_reg_2245 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln57_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_reg_2250_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal row_1_fu_1329_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal grp_fu_252_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i151_i_i_reg_2274 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_255_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i146_i_i_reg_2279 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_258_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i141_i_i_reg_2284 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_237_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal val_reg_2289 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_242_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal val_3_reg_2294 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_247_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal val_4_reg_2299 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_fu_1335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_reg_2304 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_reg_2304_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_reg_2304_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln328_fu_1356_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln328_reg_2310 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln328_reg_2310_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln323_fu_1360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_2316 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_2316_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1366_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_2323 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln326_fu_1372_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln326_reg_2329 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln327_fu_1376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_reg_2334 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_reg_2334_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_fu_1382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_2340 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_3_fu_1388_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_3_reg_2346 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_3_reg_2346_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_3_reg_2346_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln328_3_fu_1409_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln328_3_reg_2352 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln328_3_reg_2352_pp0_iter17_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln323_3_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_3_reg_2358 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_3_reg_2358_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_7_fu_1419_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_7_reg_2365 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln326_3_fu_1425_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln326_3_reg_2371 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln327_3_fu_1429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_3_reg_2376 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_3_reg_2376_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_3_fu_1435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_3_reg_2382 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_4_fu_1441_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_4_reg_2388 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_4_reg_2388_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_4_reg_2388_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln328_4_fu_1462_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln328_4_reg_2394 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln328_4_reg_2394_pp0_iter17_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln323_4_fu_1466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_4_reg_2400 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_4_reg_2400_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_9_fu_1472_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_9_reg_2407 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln326_4_fu_1478_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln326_4_reg_2413 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln327_4_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_4_reg_2418 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_4_reg_2418_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_4_fu_1488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_4_reg_2424 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_6_fu_1514_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sh_amt_6_reg_2430 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln330_fu_1563_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln330_reg_2435 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln337_fu_1582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln337_reg_2440 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln330_fu_1600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln330_reg_2445 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_8_fu_1625_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sh_amt_8_reg_2450 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln330_7_fu_1674_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln330_7_reg_2455 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln337_3_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln337_3_reg_2460 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln330_3_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln330_3_reg_2465 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_10_fu_1736_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sh_amt_10_reg_2470 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln330_9_fu_1785_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln330_9_reg_2475 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln337_4_fu_1804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln337_4_reg_2480 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln330_4_fu_1822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln330_4_reg_2485 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln327_fu_1858_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln327_reg_2490 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln327_3_fu_1896_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln327_3_reg_2496 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln327_4_fu_1934_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln327_4_reg_2502 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_fu_2020_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_reg_2508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter3_state7 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal hwin_V_1_1_i_fu_122 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_1_V_fu_126 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_2_V_fu_130 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_3_V_fu_134 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_4_V_fu_138 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_5_V_fu_142 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_6_V_fu_146 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_7_V_fu_150 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_8_V_fu_154 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_9_V_fu_158 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_10_V_fu_162 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_11_V_fu_166 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_12_V_fu_170 : STD_LOGIC_VECTOR (23 downto 0);
    signal hwin_13_V_fu_174 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_252_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_255_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_258_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_267_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_267_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln47_fu_446_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln_fu_454_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1_fu_468_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2_fu_482_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln691_fu_492_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1497_fu_464_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_fu_496_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln691_s_fu_506_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln691_39_fu_516_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1348_fu_478_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_42_fu_520_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln44_fu_394_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_1_fu_398_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln691_40_fu_534_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln51_fu_530_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_43_fu_538_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln1497_9_fu_548_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_11_fu_562_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_2_fu_402_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_12_fu_580_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1497_19_fu_558_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_42_fu_590_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_44_fu_594_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_43_fu_600_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1497_4_fu_502_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln691_13_fu_610_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln691_41_fu_572_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_44_fu_620_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_46_fu_624_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_45_fu_630_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1348_4_fu_526_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln44_3_fu_406_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_4_fu_576_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_46_fu_640_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_48_fu_644_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_47_fu_650_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln51_1_fu_544_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1497_s_fu_660_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_16_fu_674_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_5_fu_410_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1497_1_fu_692_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_17_fu_706_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_6_fu_414_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_18_fu_724_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1497_21_fu_702_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_53_fu_734_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_51_fu_738_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_54_fu_744_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1497_20_fu_670_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln691_19_fu_754_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln691_52_fu_716_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_56_fu_764_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_55_fu_768_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_57_fu_774_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln691_51_fu_684_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln44_7_fu_418_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_6_fu_720_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_59_fu_784_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_59_fu_788_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_60_fu_794_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln51_5_fu_688_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1497_2_fu_804_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_22_fu_818_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_9_fu_422_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1497_3_fu_836_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_23_fu_850_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_10_fu_426_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1497_4_fu_868_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_24_fu_882_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_11_fu_430_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1497_5_fu_900_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_25_fu_914_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_12_fu_434_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1497_6_fu_932_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_26_fu_946_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_13_fu_438_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_7_fu_832_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln51_8_fu_864_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln51_9_fu_896_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln51_10_fu_928_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_65_fu_970_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_70_fu_960_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln47_fu_450_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_66_fu_980_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_73_fu_986_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln691_72_fu_976_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln691_27_fu_996_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1497_22_fu_814_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1497_23_fu_846_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1497_24_fu_878_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1497_25_fu_910_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_72_fu_1016_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1497_26_fu_942_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_75_fu_1006_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_73_fu_1026_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_78_fu_1032_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln691_77_fu_1022_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln691_28_fu_1042_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln691_65_fu_828_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_66_fu_860_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_67_fu_892_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_68_fu_924_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_79_fu_1062_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_69_fu_956_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_80_fu_1052_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln691_80_fu_1072_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_83_fu_1078_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln691_82_fu_1068_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln691_14_fu_1108_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_15_fu_1121_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_4_fu_1093_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1497_5_fu_1099_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln691_48_fu_1117_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln691_55_fu_1144_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln691_50_fu_1138_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln691_53_fu_1147_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1348_5_fu_1102_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln691_49_fu_1130_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln691_58_fu_1163_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln691_54_fu_1157_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln691_57_fu_1166_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln51_2_fu_1105_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln691_50_fu_1134_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln691_61_fu_1182_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln691_58_fu_1176_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln691_61_fu_1185_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln691_20_fu_1195_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln691_21_fu_1208_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln44_8_fu_1096_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_3_fu_1191_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln691_64_fu_1221_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1497_6_fu_1153_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln691_62_fu_1204_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1348_6_fu_1172_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln691_63_fu_1217_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln691_71_fu_1243_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln691_74_fu_1251_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_64_fu_1246_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln691_76_fu_1260_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln691_79_fu_1268_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_71_fu_1263_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln691_81_fu_1277_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln691_84_fu_1285_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_78_fu_1280_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln44_fu_1294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln44_fu_1298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln43_fu_1303_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal exp_fu_1342_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln306_fu_1338_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln311_fu_1352_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_3_fu_1395_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln306_3_fu_1391_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln311_3_fu_1405_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_4_fu_1448_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln306_4_fu_1444_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln311_4_fu_1458_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln315_fu_1494_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_6_fu_1497_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal trunc_ln331_fu_1525_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln320_fu_1505_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln331_fu_1528_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln331_fu_1532_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln327_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln327_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln329_fu_1552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_fu_1509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_fu_1557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln331_6_fu_1538_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln329_fu_1571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln337_fu_1519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln329_fu_1576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln330_fu_1588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_6_fu_1594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_3_fu_1605_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_8_fu_1608_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal trunc_ln331_7_fu_1636_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln320_3_fu_1616_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln331_3_fu_1639_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln331_3_fu_1643_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln327_3_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln327_3_fu_1657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln329_3_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_3_fu_1620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_7_fu_1668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln331_8_fu_1649_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln329_3_fu_1682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln337_3_fu_1630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln329_3_fu_1687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln330_3_fu_1699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_8_fu_1705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln315_4_fu_1716_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_10_fu_1719_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal trunc_ln331_9_fu_1747_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln320_4_fu_1727_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln331_4_fu_1750_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln331_4_fu_1754_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_ln327_4_fu_1764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln327_4_fu_1768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln329_4_fu_1774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_4_fu_1731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_9_fu_1779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln331_10_fu_1760_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln329_4_fu_1793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln337_4_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln329_4_fu_1798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln330_4_fu_1810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_10_fu_1816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_6cast_fu_1827_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln339_fu_1830_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln337_fu_1835_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln323_fu_1848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln327_fu_1853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln330_6_fu_1841_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sh_amt_8cast_fu_1865_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln339_3_fu_1868_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln337_3_fu_1873_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln323_3_fu_1886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln327_3_fu_1891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln330_8_fu_1879_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sh_amt_10cast_fu_1903_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln339_4_fu_1906_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln337_4_fu_1911_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal xor_ln323_4_fu_1924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln327_4_fu_1929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln330_10_fu_1917_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_9_fu_1965_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln455_4_fu_1972_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_s_fu_1941_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln455_fu_1948_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_fu_1984_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_1953_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln455_3_fu_1960_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln345_2_fu_1999_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_1991_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal b_V_fu_1977_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln1349_fu_2014_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1349_2_fu_2006_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_237_ce : STD_LOGIC;
    signal grp_fu_242_ce : STD_LOGIC;
    signal grp_fu_247_ce : STD_LOGIC;
    signal grp_fu_252_ce : STD_LOGIC;
    signal grp_fu_255_ce : STD_LOGIC;
    signal grp_fu_258_ce : STD_LOGIC;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_in_data_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_data_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal in_data_TVALID_int_regslice : STD_LOGIC;
    signal in_data_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_data_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_data_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_data_TKEEP_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_in_data_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_data_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_data_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_data_TSTRB_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_in_data_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_data_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_data_V_user_V_U_apdone_blk : STD_LOGIC;
    signal in_data_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_data_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_data_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_data_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_data_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_data_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_data_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_data_V_id_V_U_apdone_blk : STD_LOGIC;
    signal in_data_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_data_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_data_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_data_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal in_data_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_data_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_data_V_dest_V_U_ack_in : STD_LOGIC;
    signal grp_fu_267_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_267_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component Blur_dmul_64ns_64ns_64_7_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Blur_uitodp_32ns_64_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Blur_mul_32ns_32ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Blur_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    dmul_64ns_64ns_64_7_max_dsp_1_U10 : component Blur_dmul_64ns_64ns_64_7_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i151_i_i_reg_2274,
        din1 => ap_const_lv64_3FB1111111111111,
        ce => grp_fu_237_ce,
        dout => grp_fu_237_p2);

    dmul_64ns_64ns_64_7_max_dsp_1_U11 : component Blur_dmul_64ns_64ns_64_7_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i146_i_i_reg_2279,
        din1 => ap_const_lv64_3FB1111111111111,
        ce => grp_fu_242_ce,
        dout => grp_fu_242_p2);

    dmul_64ns_64ns_64_7_max_dsp_1_U12 : component Blur_dmul_64ns_64ns_64_7_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i141_i_i_reg_2284,
        din1 => ap_const_lv64_3FB1111111111111,
        ce => grp_fu_247_ce,
        dout => grp_fu_247_p2);

    uitodp_32ns_64_6_no_dsp_1_U13 : component Blur_uitodp_32ns_64_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_252_p0,
        ce => grp_fu_252_ce,
        dout => grp_fu_252_p1);

    uitodp_32ns_64_6_no_dsp_1_U14 : component Blur_uitodp_32ns_64_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_255_p0,
        ce => grp_fu_255_ce,
        dout => grp_fu_255_p1);

    uitodp_32ns_64_6_no_dsp_1_U15 : component Blur_uitodp_32ns_64_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_258_p0,
        ce => grp_fu_258_ce,
        dout => grp_fu_258_p1);

    mul_32ns_32ns_64_2_1_U16 : component Blur_mul_32ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_267_p0,
        din1 => grp_fu_267_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_267_p2);

    regslice_both_in_data_V_data_V_U : component Blur_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_data_TDATA,
        vld_in => in_data_TVALID,
        ack_in => regslice_both_in_data_V_data_V_U_ack_in,
        data_out => in_data_TDATA_int_regslice,
        vld_out => in_data_TVALID_int_regslice,
        ack_out => in_data_TREADY_int_regslice,
        apdone_blk => regslice_both_in_data_V_data_V_U_apdone_blk);

    regslice_both_in_data_V_keep_V_U : component Blur_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_data_TKEEP,
        vld_in => in_data_TVALID,
        ack_in => regslice_both_in_data_V_keep_V_U_ack_in,
        data_out => in_data_TKEEP_int_regslice,
        vld_out => regslice_both_in_data_V_keep_V_U_vld_out,
        ack_out => in_data_TREADY_int_regslice,
        apdone_blk => regslice_both_in_data_V_keep_V_U_apdone_blk);

    regslice_both_in_data_V_strb_V_U : component Blur_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_data_TSTRB,
        vld_in => in_data_TVALID,
        ack_in => regslice_both_in_data_V_strb_V_U_ack_in,
        data_out => in_data_TSTRB_int_regslice,
        vld_out => regslice_both_in_data_V_strb_V_U_vld_out,
        ack_out => in_data_TREADY_int_regslice,
        apdone_blk => regslice_both_in_data_V_strb_V_U_apdone_blk);

    regslice_both_in_data_V_user_V_U : component Blur_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_data_TUSER,
        vld_in => in_data_TVALID,
        ack_in => regslice_both_in_data_V_user_V_U_ack_in,
        data_out => in_data_TUSER_int_regslice,
        vld_out => regslice_both_in_data_V_user_V_U_vld_out,
        ack_out => in_data_TREADY_int_regslice,
        apdone_blk => regslice_both_in_data_V_user_V_U_apdone_blk);

    regslice_both_in_data_V_last_V_U : component Blur_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_data_TLAST,
        vld_in => in_data_TVALID,
        ack_in => regslice_both_in_data_V_last_V_U_ack_in,
        data_out => in_data_TLAST_int_regslice,
        vld_out => regslice_both_in_data_V_last_V_U_vld_out,
        ack_out => in_data_TREADY_int_regslice,
        apdone_blk => regslice_both_in_data_V_last_V_U_apdone_blk);

    regslice_both_in_data_V_id_V_U : component Blur_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_data_TID,
        vld_in => in_data_TVALID,
        ack_in => regslice_both_in_data_V_id_V_U_ack_in,
        data_out => in_data_TID_int_regslice,
        vld_out => regslice_both_in_data_V_id_V_U_vld_out,
        ack_out => in_data_TREADY_int_regslice,
        apdone_blk => regslice_both_in_data_V_id_V_U_apdone_blk);

    regslice_both_in_data_V_dest_V_U : component Blur_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in_data_TDEST,
        vld_in => in_data_TVALID,
        ack_in => regslice_both_in_data_V_dest_V_U_ack_in,
        data_out => in_data_TDEST_int_regslice,
        vld_out => regslice_both_in_data_V_dest_V_U_vld_out,
        ack_out => in_data_TREADY_int_regslice,
        apdone_blk => regslice_both_in_data_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter3_state7)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_215 <= add_ln43_fu_273_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvar_flatten_reg_215 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    row_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln43_reg_2156_pp0_iter2_reg = ap_const_lv1_0))) then 
                row_reg_226 <= row_1_fu_1329_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                row_reg_226 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln691_45_reg_2160 <= add_ln691_45_fu_604_p2;
                add_ln691_47_reg_2165 <= add_ln691_47_fu_634_p2;
                add_ln691_49_reg_2170 <= add_ln691_49_fu_654_p2;
                add_ln691_52_reg_2175 <= add_ln691_52_fu_748_p2;
                add_ln691_56_reg_2180 <= add_ln691_56_fu_778_p2;
                add_ln691_60_reg_2185 <= add_ln691_60_fu_798_p2;
                add_ln691_63_reg_2190 <= add_ln691_63_fu_964_p2;
                add_ln691_67_reg_2195 <= add_ln691_67_fu_990_p2;
                add_ln691_70_reg_2200 <= add_ln691_70_fu_1010_p2;
                add_ln691_74_reg_2205 <= add_ln691_74_fu_1036_p2;
                add_ln691_77_reg_2210 <= add_ln691_77_fu_1056_p2;
                add_ln691_81_reg_2215 <= add_ln691_81_fu_1082_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln43_reg_2156 = ap_const_lv1_0))) then
                add_ln691_62_reg_2220 <= add_ln691_62_fu_1225_p2;
                add_ln691_69_reg_2225 <= add_ln691_69_fu_1231_p2;
                add_ln691_76_reg_2230 <= add_ln691_76_fu_1237_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln691_63_reg_2190_pp0_iter1_reg <= add_ln691_63_reg_2190;
                add_ln691_67_reg_2195_pp0_iter1_reg <= add_ln691_67_reg_2195;
                add_ln691_70_reg_2200_pp0_iter1_reg <= add_ln691_70_reg_2200;
                add_ln691_74_reg_2205_pp0_iter1_reg <= add_ln691_74_reg_2205;
                add_ln691_77_reg_2210_pp0_iter1_reg <= add_ln691_77_reg_2210;
                add_ln691_81_reg_2215_pp0_iter1_reg <= add_ln691_81_reg_2215;
                hwin_4_V_load_reg_2142 <= hwin_4_V_fu_138;
                hwin_8_V_load_reg_2149 <= hwin_8_V_fu_154;
                icmp_ln43_reg_2156 <= icmp_ln43_fu_321_p2;
                icmp_ln43_reg_2156_pp0_iter1_reg <= icmp_ln43_reg_2156;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln43_reg_2156_pp0_iter1_reg = ap_const_lv1_0))) then
                add_ln691_68_reg_2235 <= add_ln691_68_fu_1254_p2;
                add_ln691_75_reg_2240 <= add_ln691_75_fu_1271_p2;
                add_ln691_82_reg_2245 <= add_ln691_82_fu_1288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln57_reg_2250_pp0_iter16_reg = ap_const_lv1_1))) then
                and_ln337_3_reg_2460 <= and_ln337_3_fu_1693_p2;
                and_ln337_4_reg_2480 <= and_ln337_4_fu_1804_p2;
                and_ln337_reg_2440 <= and_ln337_fu_1582_p2;
                or_ln330_3_reg_2465 <= or_ln330_3_fu_1711_p2;
                or_ln330_4_reg_2485 <= or_ln330_4_fu_1822_p2;
                or_ln330_reg_2445 <= or_ln330_fu_1600_p2;
                select_ln330_7_reg_2455 <= select_ln330_7_fu_1674_p3;
                select_ln330_9_reg_2475 <= select_ln330_9_fu_1785_p3;
                select_ln330_reg_2435 <= select_ln330_fu_1563_p3;
                sh_amt_10_reg_2470 <= sh_amt_10_fu_1736_p2;
                sh_amt_6_reg_2430 <= sh_amt_6_fu_1514_p2;
                sh_amt_8_reg_2450 <= sh_amt_8_fu_1625_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                bound_reg_2132 <= grp_fu_267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln57_reg_2250_pp0_iter7_reg = ap_const_lv1_1))) then
                conv_i141_i_i_reg_2284 <= grp_fu_258_p1;
                conv_i146_i_i_reg_2279 <= grp_fu_255_p1;
                conv_i151_i_i_reg_2274 <= grp_fu_252_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                h_read_reg_2111 <= h_dout;
                w_read_reg_2116 <= w_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                hwin_10_V_fu_162 <= hwin_11_V_fu_166;
                hwin_11_V_fu_166 <= hwin_12_V_fu_170;
                hwin_12_V_fu_170 <= hwin_13_V_fu_174;
                hwin_1_V_fu_126 <= hwin_2_V_fu_130;
                hwin_2_V_fu_130 <= hwin_3_V_fu_134;
                hwin_3_V_fu_134 <= hwin_4_V_fu_138;
                hwin_4_V_fu_138 <= hwin_5_V_fu_142;
                hwin_5_V_fu_142 <= hwin_6_V_fu_146;
                hwin_6_V_fu_146 <= hwin_7_V_fu_150;
                hwin_7_V_fu_150 <= hwin_8_V_fu_154;
                hwin_8_V_fu_154 <= hwin_9_V_fu_158;
                hwin_9_V_fu_158 <= hwin_10_V_fu_162;
                hwin_V_1_1_i_fu_122 <= hwin_1_V_fu_126;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                hwin_13_V_fu_174 <= in_data_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln57_reg_2250_pp0_iter15_reg = ap_const_lv1_1))) then
                icmp_ln323_3_reg_2358 <= icmp_ln323_3_fu_1413_p2;
                icmp_ln323_4_reg_2400 <= icmp_ln323_4_fu_1466_p2;
                icmp_ln323_reg_2316 <= icmp_ln323_fu_1360_p2;
                icmp_ln327_3_reg_2376 <= icmp_ln327_3_fu_1429_p2;
                icmp_ln327_4_reg_2418 <= icmp_ln327_4_fu_1482_p2;
                icmp_ln327_reg_2334 <= icmp_ln327_fu_1376_p2;
                icmp_ln329_3_reg_2382 <= icmp_ln329_3_fu_1435_p2;
                icmp_ln329_4_reg_2424 <= icmp_ln329_4_fu_1488_p2;
                icmp_ln329_reg_2340 <= icmp_ln329_fu_1382_p2;
                reg_3_reg_2346 <= reg_3_fu_1388_p1;
                reg_4_reg_2388 <= reg_4_fu_1441_p1;
                reg_reg_2304 <= reg_fu_1335_p1;
                sh_amt_7_reg_2365 <= sh_amt_7_fu_1419_p2;
                sh_amt_9_reg_2407 <= sh_amt_9_fu_1472_p2;
                sh_amt_reg_2323 <= sh_amt_fu_1366_p2;
                trunc_ln326_3_reg_2371 <= trunc_ln326_3_fu_1425_p1;
                trunc_ln326_4_reg_2413 <= trunc_ln326_4_fu_1478_p1;
                trunc_ln326_reg_2329 <= trunc_ln326_fu_1372_p1;
                trunc_ln328_3_reg_2352 <= trunc_ln328_3_fu_1409_p1;
                trunc_ln328_4_reg_2394 <= trunc_ln328_4_fu_1462_p1;
                trunc_ln328_reg_2310 <= trunc_ln328_fu_1356_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln323_3_reg_2358_pp0_iter17_reg <= icmp_ln323_3_reg_2358;
                icmp_ln323_4_reg_2400_pp0_iter17_reg <= icmp_ln323_4_reg_2400;
                icmp_ln323_reg_2316_pp0_iter17_reg <= icmp_ln323_reg_2316;
                icmp_ln327_3_reg_2376_pp0_iter17_reg <= icmp_ln327_3_reg_2376;
                icmp_ln327_4_reg_2418_pp0_iter17_reg <= icmp_ln327_4_reg_2418;
                icmp_ln327_reg_2334_pp0_iter17_reg <= icmp_ln327_reg_2334;
                icmp_ln43_reg_2156_pp0_iter2_reg <= icmp_ln43_reg_2156_pp0_iter1_reg;
                icmp_ln57_reg_2250_pp0_iter10_reg <= icmp_ln57_reg_2250_pp0_iter9_reg;
                icmp_ln57_reg_2250_pp0_iter11_reg <= icmp_ln57_reg_2250_pp0_iter10_reg;
                icmp_ln57_reg_2250_pp0_iter12_reg <= icmp_ln57_reg_2250_pp0_iter11_reg;
                icmp_ln57_reg_2250_pp0_iter13_reg <= icmp_ln57_reg_2250_pp0_iter12_reg;
                icmp_ln57_reg_2250_pp0_iter14_reg <= icmp_ln57_reg_2250_pp0_iter13_reg;
                icmp_ln57_reg_2250_pp0_iter15_reg <= icmp_ln57_reg_2250_pp0_iter14_reg;
                icmp_ln57_reg_2250_pp0_iter16_reg <= icmp_ln57_reg_2250_pp0_iter15_reg;
                icmp_ln57_reg_2250_pp0_iter17_reg <= icmp_ln57_reg_2250_pp0_iter16_reg;
                icmp_ln57_reg_2250_pp0_iter18_reg <= icmp_ln57_reg_2250_pp0_iter17_reg;
                icmp_ln57_reg_2250_pp0_iter19_reg <= icmp_ln57_reg_2250_pp0_iter18_reg;
                icmp_ln57_reg_2250_pp0_iter4_reg <= icmp_ln57_reg_2250;
                icmp_ln57_reg_2250_pp0_iter5_reg <= icmp_ln57_reg_2250_pp0_iter4_reg;
                icmp_ln57_reg_2250_pp0_iter6_reg <= icmp_ln57_reg_2250_pp0_iter5_reg;
                icmp_ln57_reg_2250_pp0_iter7_reg <= icmp_ln57_reg_2250_pp0_iter6_reg;
                icmp_ln57_reg_2250_pp0_iter8_reg <= icmp_ln57_reg_2250_pp0_iter7_reg;
                icmp_ln57_reg_2250_pp0_iter9_reg <= icmp_ln57_reg_2250_pp0_iter8_reg;
                reg_3_reg_2346_pp0_iter17_reg <= reg_3_reg_2346;
                reg_3_reg_2346_pp0_iter18_reg <= reg_3_reg_2346_pp0_iter17_reg;
                reg_4_reg_2388_pp0_iter17_reg <= reg_4_reg_2388;
                reg_4_reg_2388_pp0_iter18_reg <= reg_4_reg_2388_pp0_iter17_reg;
                reg_reg_2304_pp0_iter17_reg <= reg_reg_2304;
                reg_reg_2304_pp0_iter18_reg <= reg_reg_2304_pp0_iter17_reg;
                trunc_ln328_3_reg_2352_pp0_iter17_reg <= trunc_ln328_3_reg_2352;
                trunc_ln328_4_reg_2394_pp0_iter17_reg <= trunc_ln328_4_reg_2394;
                trunc_ln328_reg_2310_pp0_iter17_reg <= trunc_ln328_reg_2310;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln43_reg_2156_pp0_iter2_reg = ap_const_lv1_0))) then
                icmp_ln57_reg_2250 <= icmp_ln57_fu_1311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln57_reg_2250_pp0_iter18_reg = ap_const_lv1_1))) then
                ret_V_reg_2508 <= ret_V_fu_2020_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln57_reg_2250_pp0_iter17_reg = ap_const_lv1_1))) then
                select_ln327_3_reg_2496 <= select_ln327_3_fu_1896_p3;
                select_ln327_4_reg_2502 <= select_ln327_4_fu_1934_p3;
                select_ln327_reg_2490 <= select_ln327_fu_1858_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln57_reg_2250_pp0_iter14_reg = ap_const_lv1_1))) then
                val_3_reg_2294 <= grp_fu_242_p2;
                val_4_reg_2299 <= grp_fu_247_p2;
                val_reg_2289 <= grp_fu_237_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, h_empty_n, w_empty_n, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter19)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((w_empty_n = ap_const_logic_0) or (h_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln43_fu_273_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_215) + unsigned(ap_const_lv64_1));
    add_ln691_42_fu_520_p2 <= std_logic_vector(unsigned(zext_ln691_39_fu_516_p1) + unsigned(zext_ln1348_fu_478_p1));
    add_ln691_43_fu_538_p2 <= std_logic_vector(unsigned(zext_ln691_40_fu_534_p1) + unsigned(zext_ln51_fu_530_p1));
    add_ln691_44_fu_594_p2 <= std_logic_vector(unsigned(zext_ln1497_19_fu_558_p1) + unsigned(zext_ln691_42_fu_590_p1));
    add_ln691_45_fu_604_p2 <= std_logic_vector(unsigned(zext_ln691_43_fu_600_p1) + unsigned(zext_ln1497_4_fu_502_p1));
    add_ln691_46_fu_624_p2 <= std_logic_vector(unsigned(zext_ln691_41_fu_572_p1) + unsigned(zext_ln691_44_fu_620_p1));
    add_ln691_47_fu_634_p2 <= std_logic_vector(unsigned(zext_ln691_45_fu_630_p1) + unsigned(zext_ln1348_4_fu_526_p1));
    add_ln691_48_fu_644_p2 <= std_logic_vector(unsigned(zext_ln51_4_fu_576_p1) + unsigned(zext_ln691_46_fu_640_p1));
    add_ln691_49_fu_654_p2 <= std_logic_vector(unsigned(zext_ln691_47_fu_650_p1) + unsigned(zext_ln51_1_fu_544_p1));
    add_ln691_50_fu_1138_p2 <= std_logic_vector(unsigned(zext_ln1497_5_fu_1099_p1) + unsigned(zext_ln691_48_fu_1117_p1));
    add_ln691_51_fu_738_p2 <= std_logic_vector(unsigned(zext_ln1497_21_fu_702_p1) + unsigned(zext_ln691_53_fu_734_p1));
    add_ln691_52_fu_748_p2 <= std_logic_vector(unsigned(zext_ln691_54_fu_744_p1) + unsigned(zext_ln1497_20_fu_670_p1));
    add_ln691_53_fu_1147_p2 <= std_logic_vector(unsigned(zext_ln691_55_fu_1144_p1) + unsigned(add_ln691_50_fu_1138_p2));
    add_ln691_54_fu_1157_p2 <= std_logic_vector(unsigned(zext_ln1348_5_fu_1102_p1) + unsigned(zext_ln691_49_fu_1130_p1));
    add_ln691_55_fu_768_p2 <= std_logic_vector(unsigned(zext_ln691_52_fu_716_p1) + unsigned(zext_ln691_56_fu_764_p1));
    add_ln691_56_fu_778_p2 <= std_logic_vector(unsigned(zext_ln691_57_fu_774_p1) + unsigned(zext_ln691_51_fu_684_p1));
    add_ln691_57_fu_1166_p2 <= std_logic_vector(unsigned(zext_ln691_58_fu_1163_p1) + unsigned(add_ln691_54_fu_1157_p2));
    add_ln691_58_fu_1176_p2 <= std_logic_vector(unsigned(zext_ln51_2_fu_1105_p1) + unsigned(zext_ln691_50_fu_1134_p1));
    add_ln691_59_fu_788_p2 <= std_logic_vector(unsigned(zext_ln51_6_fu_720_p1) + unsigned(zext_ln691_59_fu_784_p1));
    add_ln691_60_fu_798_p2 <= std_logic_vector(unsigned(zext_ln691_60_fu_794_p1) + unsigned(zext_ln51_5_fu_688_p1));
    add_ln691_61_fu_1185_p2 <= std_logic_vector(unsigned(zext_ln691_61_fu_1182_p1) + unsigned(add_ln691_58_fu_1176_p2));
    add_ln691_62_fu_1225_p2 <= std_logic_vector(unsigned(zext_ln51_3_fu_1191_p1) + unsigned(zext_ln691_64_fu_1221_p1));
    add_ln691_63_fu_964_p2 <= std_logic_vector(unsigned(zext_ln51_7_fu_832_p1) + unsigned(zext_ln51_8_fu_864_p1));
    add_ln691_64_fu_1246_p2 <= std_logic_vector(unsigned(zext_ln691_71_fu_1243_p1) + unsigned(add_ln691_62_reg_2220));
    add_ln691_65_fu_970_p2 <= std_logic_vector(unsigned(zext_ln51_9_fu_896_p1) + unsigned(zext_ln51_10_fu_928_p1));
    add_ln691_66_fu_980_p2 <= std_logic_vector(unsigned(zext_ln691_70_fu_960_p1) + unsigned(zext_ln47_fu_450_p1));
    add_ln691_67_fu_990_p2 <= std_logic_vector(unsigned(zext_ln691_73_fu_986_p1) + unsigned(zext_ln691_72_fu_976_p1));
    add_ln691_68_fu_1254_p2 <= std_logic_vector(unsigned(zext_ln691_74_fu_1251_p1) + unsigned(add_ln691_64_fu_1246_p2));
    add_ln691_69_fu_1231_p2 <= std_logic_vector(unsigned(zext_ln1497_6_fu_1153_p1) + unsigned(zext_ln691_62_fu_1204_p1));
    add_ln691_70_fu_1010_p2 <= std_logic_vector(unsigned(zext_ln1497_22_fu_814_p1) + unsigned(zext_ln1497_23_fu_846_p1));
    add_ln691_71_fu_1263_p2 <= std_logic_vector(unsigned(zext_ln691_76_fu_1260_p1) + unsigned(add_ln691_69_reg_2225));
    add_ln691_72_fu_1016_p2 <= std_logic_vector(unsigned(zext_ln1497_24_fu_878_p1) + unsigned(zext_ln1497_25_fu_910_p1));
    add_ln691_73_fu_1026_p2 <= std_logic_vector(unsigned(zext_ln1497_26_fu_942_p1) + unsigned(zext_ln691_75_fu_1006_p1));
    add_ln691_74_fu_1036_p2 <= std_logic_vector(unsigned(zext_ln691_78_fu_1032_p1) + unsigned(zext_ln691_77_fu_1022_p1));
    add_ln691_75_fu_1271_p2 <= std_logic_vector(unsigned(zext_ln691_79_fu_1268_p1) + unsigned(add_ln691_71_fu_1263_p2));
    add_ln691_76_fu_1237_p2 <= std_logic_vector(unsigned(zext_ln1348_6_fu_1172_p1) + unsigned(zext_ln691_63_fu_1217_p1));
    add_ln691_77_fu_1056_p2 <= std_logic_vector(unsigned(zext_ln691_65_fu_828_p1) + unsigned(zext_ln691_66_fu_860_p1));
    add_ln691_78_fu_1280_p2 <= std_logic_vector(unsigned(zext_ln691_81_fu_1277_p1) + unsigned(add_ln691_76_reg_2230));
    add_ln691_79_fu_1062_p2 <= std_logic_vector(unsigned(zext_ln691_67_fu_892_p1) + unsigned(zext_ln691_68_fu_924_p1));
    add_ln691_80_fu_1072_p2 <= std_logic_vector(unsigned(zext_ln691_69_fu_956_p1) + unsigned(zext_ln691_80_fu_1052_p1));
    add_ln691_81_fu_1082_p2 <= std_logic_vector(unsigned(zext_ln691_83_fu_1078_p1) + unsigned(zext_ln691_82_fu_1068_p1));
    add_ln691_82_fu_1288_p2 <= std_logic_vector(unsigned(zext_ln691_84_fu_1285_p1) + unsigned(add_ln691_78_fu_1280_p2));
    add_ln691_fu_496_p2 <= std_logic_vector(unsigned(zext_ln691_fu_492_p1) + unsigned(zext_ln1497_fu_464_p1));
    and_ln327_3_fu_1891_p2 <= (xor_ln323_3_fu_1886_p2 and icmp_ln327_3_reg_2376_pp0_iter17_reg);
    and_ln327_4_fu_1929_p2 <= (xor_ln323_4_fu_1924_p2 and icmp_ln327_4_reg_2418_pp0_iter17_reg);
    and_ln327_fu_1853_p2 <= (xor_ln323_fu_1848_p2 and icmp_ln327_reg_2334_pp0_iter17_reg);
    and_ln329_3_fu_1663_p2 <= (xor_ln327_3_fu_1657_p2 and icmp_ln329_3_reg_2382);
    and_ln329_4_fu_1774_p2 <= (xor_ln327_4_fu_1768_p2 and icmp_ln329_4_reg_2424);
    and_ln329_fu_1552_p2 <= (xor_ln327_fu_1546_p2 and icmp_ln329_reg_2340);
    and_ln330_10_fu_1816_p2 <= (xor_ln330_4_fu_1810_p2 and and_ln329_4_fu_1774_p2);
    and_ln330_6_fu_1594_p2 <= (xor_ln330_fu_1588_p2 and and_ln329_fu_1552_p2);
    and_ln330_7_fu_1668_p2 <= (icmp_ln330_3_fu_1620_p2 and and_ln329_3_fu_1663_p2);
    and_ln330_8_fu_1705_p2 <= (xor_ln330_3_fu_1699_p2 and and_ln329_3_fu_1663_p2);
    and_ln330_9_fu_1779_p2 <= (icmp_ln330_4_fu_1731_p2 and and_ln329_4_fu_1774_p2);
    and_ln330_fu_1557_p2 <= (icmp_ln330_fu_1509_p2 and and_ln329_fu_1552_p2);
    and_ln337_3_fu_1693_p2 <= (xor_ln329_3_fu_1687_p2 and icmp_ln337_3_fu_1630_p2);
    and_ln337_4_fu_1804_p2 <= (xor_ln329_4_fu_1798_p2 and icmp_ln337_4_fu_1741_p2);
    and_ln337_fu_1582_p2 <= (xor_ln329_fu_1576_p2 and icmp_ln337_fu_1519_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state25 <= ap_CS_fsm(4);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(hconv_full_n, ap_enable_reg_pp0_iter0, icmp_ln43_fu_321_p2, ap_enable_reg_pp0_iter20, icmp_ln57_reg_2250_pp0_iter19_reg, in_data_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln57_reg_2250_pp0_iter19_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (hconv_full_n = ap_const_logic_0)) or ((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in_data_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(hconv_full_n, ap_enable_reg_pp0_iter0, icmp_ln43_fu_321_p2, ap_enable_reg_pp0_iter20, icmp_ln57_reg_2250_pp0_iter19_reg, in_data_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln57_reg_2250_pp0_iter19_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (hconv_full_n = ap_const_logic_0)) or ((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in_data_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(hconv_full_n, ap_enable_reg_pp0_iter0, icmp_ln43_fu_321_p2, ap_enable_reg_pp0_iter20, icmp_ln57_reg_2250_pp0_iter19_reg, in_data_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln57_reg_2250_pp0_iter19_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (hconv_full_n = ap_const_logic_0)) or ((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in_data_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, h_empty_n, w_empty_n)
    begin
                ap_block_state1 <= ((w_empty_n = ap_const_logic_0) or (h_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state24_pp0_stage0_iter20_assign_proc : process(hconv_full_n, icmp_ln57_reg_2250_pp0_iter19_reg)
    begin
                ap_block_state24_pp0_stage0_iter20 <= ((icmp_ln57_reg_2250_pp0_iter19_reg = ap_const_lv1_1) and (hconv_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter0_assign_proc : process(icmp_ln43_fu_321_p2, in_data_TVALID_int_regslice)
    begin
                ap_block_state4_pp0_stage0_iter0 <= ((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (in_data_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter3_state7_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter3_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter3_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln43_fu_321_p2, ap_block_pp0_stage0_subdone)
    begin
        if (((icmp_ln43_fu_321_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_V_fu_1977_p3 <= 
        sub_ln455_4_fu_1972_p2 when (p_Result_9_fu_1965_p3(0) = '1') else 
        select_ln327_4_reg_2502;
    exp_3_fu_1395_p4 <= reg_3_fu_1388_p1(62 downto 52);
    exp_4_fu_1448_p4 <= reg_4_fu_1441_p1(62 downto 52);
    exp_fu_1342_p4 <= reg_fu_1335_p1(62 downto 52);

    grp_fu_237_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_237_ce <= ap_const_logic_1;
        else 
            grp_fu_237_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_242_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_242_ce <= ap_const_logic_1;
        else 
            grp_fu_242_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_247_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_247_ce <= ap_const_logic_1;
        else 
            grp_fu_247_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_252_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_252_ce <= ap_const_logic_1;
        else 
            grp_fu_252_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_252_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_75_reg_2240),32));

    grp_fu_255_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_255_ce <= ap_const_logic_1;
        else 
            grp_fu_255_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_255_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_82_reg_2245),32));

    grp_fu_258_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_258_ce <= ap_const_logic_1;
        else 
            grp_fu_258_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_258_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_68_reg_2235),32));
    grp_fu_267_p0 <= grp_fu_267_p00(32 - 1 downto 0);
    grp_fu_267_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_read_reg_2111),64));
    grp_fu_267_p1 <= grp_fu_267_p10(32 - 1 downto 0);
    grp_fu_267_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_read_reg_2116),64));

    h_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, h_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            h_blk_n <= h_empty_n;
        else 
            h_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    h_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, h_empty_n, w_empty_n)
    begin
        if ((not(((w_empty_n = ap_const_logic_0) or (h_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            h_read <= ap_const_logic_1;
        else 
            h_read <= ap_const_logic_0;
        end if; 
    end process;


    hconv_blk_n_assign_proc : process(hconv_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter20, icmp_ln57_reg_2250_pp0_iter19_reg)
    begin
        if (((icmp_ln57_reg_2250_pp0_iter19_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            hconv_blk_n <= hconv_full_n;
        else 
            hconv_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    hconv_din <= ret_V_reg_2508;

    hconv_write_assign_proc : process(ap_enable_reg_pp0_iter20, icmp_ln57_reg_2250_pp0_iter19_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln57_reg_2250_pp0_iter19_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            hconv_write <= ap_const_logic_1;
        else 
            hconv_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln323_3_fu_1413_p2 <= "1" when (trunc_ln306_3_fu_1391_p1 = ap_const_lv63_0) else "0";
    icmp_ln323_4_fu_1466_p2 <= "1" when (trunc_ln306_4_fu_1444_p1 = ap_const_lv63_0) else "0";
    icmp_ln323_fu_1360_p2 <= "1" when (trunc_ln306_fu_1338_p1 = ap_const_lv63_0) else "0";
    icmp_ln327_3_fu_1429_p2 <= "1" when (exp_3_fu_1395_p4 = ap_const_lv11_433) else "0";
    icmp_ln327_4_fu_1482_p2 <= "1" when (exp_4_fu_1448_p4 = ap_const_lv11_433) else "0";
    icmp_ln327_fu_1376_p2 <= "1" when (exp_fu_1342_p4 = ap_const_lv11_433) else "0";
    icmp_ln329_3_fu_1435_p2 <= "1" when (signed(sh_amt_7_fu_1419_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln329_4_fu_1488_p2 <= "1" when (signed(sh_amt_9_fu_1472_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln329_fu_1382_p2 <= "1" when (signed(sh_amt_fu_1366_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln330_3_fu_1620_p2 <= "1" when (signed(sh_amt_7_reg_2365) < signed(ap_const_lv12_36)) else "0";
    icmp_ln330_4_fu_1731_p2 <= "1" when (signed(sh_amt_9_reg_2407) < signed(ap_const_lv12_36)) else "0";
    icmp_ln330_fu_1509_p2 <= "1" when (signed(sh_amt_reg_2323) < signed(ap_const_lv12_36)) else "0";
    icmp_ln337_3_fu_1630_p2 <= "1" when (unsigned(sh_amt_8_fu_1625_p2) < unsigned(ap_const_lv10_18)) else "0";
    icmp_ln337_4_fu_1741_p2 <= "1" when (unsigned(sh_amt_10_fu_1736_p2) < unsigned(ap_const_lv10_18)) else "0";
    icmp_ln337_fu_1519_p2 <= "1" when (unsigned(sh_amt_6_fu_1514_p2) < unsigned(ap_const_lv10_18)) else "0";
    icmp_ln43_fu_321_p2 <= "1" when (indvar_flatten_reg_215 = bound_reg_2132) else "0";
    icmp_ln44_fu_1298_p2 <= "1" when (signed(zext_ln44_fu_1294_p1) < signed(w_read_reg_2116)) else "0";
    icmp_ln57_fu_1311_p2 <= "1" when (unsigned(select_ln43_fu_1303_p3) > unsigned(ap_const_lv11_D)) else "0";

    in_data_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln43_fu_321_p2, in_data_TVALID_int_regslice)
    begin
        if (((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_data_TDATA_blk_n <= in_data_TVALID_int_regslice;
        else 
            in_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_data_TREADY <= regslice_both_in_data_V_data_V_U_ack_in;

    in_data_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln43_fu_321_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln43_fu_321_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_data_TREADY_int_regslice <= ap_const_logic_1;
        else 
            in_data_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln331_3_fu_1643_p2 <= std_logic_vector(shift_right(unsigned(zext_ln320_3_fu_1616_p1),to_integer(unsigned('0' & zext_ln331_3_fu_1639_p1(31-1 downto 0)))));
    lshr_ln331_4_fu_1754_p2 <= std_logic_vector(shift_right(unsigned(zext_ln320_4_fu_1727_p1),to_integer(unsigned('0' & zext_ln331_4_fu_1750_p1(31-1 downto 0)))));
    lshr_ln331_fu_1532_p2 <= std_logic_vector(shift_right(unsigned(zext_ln320_fu_1505_p1),to_integer(unsigned('0' & zext_ln331_fu_1528_p1(31-1 downto 0)))));
    or_ln1349_fu_2014_p2 <= (shl_ln_fu_1991_p3 or b_V_fu_1977_p3);
    or_ln327_3_fu_1653_p2 <= (icmp_ln327_3_reg_2376 or icmp_ln323_3_reg_2358);
    or_ln327_4_fu_1764_p2 <= (icmp_ln327_4_reg_2418 or icmp_ln323_4_reg_2400);
    or_ln327_fu_1542_p2 <= (icmp_ln327_reg_2334 or icmp_ln323_reg_2316);
    or_ln329_3_fu_1682_p2 <= (or_ln327_3_fu_1653_p2 or icmp_ln329_3_reg_2382);
    or_ln329_4_fu_1793_p2 <= (or_ln327_4_fu_1764_p2 or icmp_ln329_4_reg_2424);
    or_ln329_fu_1571_p2 <= (or_ln327_fu_1542_p2 or icmp_ln329_reg_2340);
    or_ln330_3_fu_1711_p2 <= (icmp_ln323_3_reg_2358 or and_ln330_8_fu_1705_p2);
    or_ln330_4_fu_1822_p2 <= (icmp_ln323_4_reg_2400 or and_ln330_10_fu_1816_p2);
    or_ln330_fu_1600_p2 <= (icmp_ln323_reg_2316 or and_ln330_6_fu_1594_p2);
    p_Result_10_fu_1719_p3 <= (ap_const_lv1_1 & trunc_ln315_4_fu_1716_p1);
    p_Result_6_fu_1497_p3 <= (ap_const_lv1_1 & trunc_ln315_fu_1494_p1);
    p_Result_7_fu_1953_p3 <= reg_3_reg_2346_pp0_iter18_reg(63 downto 63);
    p_Result_8_fu_1608_p3 <= (ap_const_lv1_1 & trunc_ln315_3_fu_1605_p1);
    p_Result_9_fu_1965_p3 <= reg_4_reg_2388_pp0_iter18_reg(63 downto 63);
    p_Result_s_fu_1941_p3 <= reg_reg_2304_pp0_iter18_reg(63 downto 63);
    reg_3_fu_1388_p1 <= val_3_reg_2294;
    reg_4_fu_1441_p1 <= val_4_reg_2299;
    reg_fu_1335_p1 <= val_reg_2289;
    ret_V_fu_2020_p2 <= (shl_ln1349_2_fu_2006_p3 or or_ln1349_fu_2014_p2);
    row_1_fu_1329_p2 <= std_logic_vector(unsigned(select_ln43_fu_1303_p3) + unsigned(ap_const_lv11_1));
    select_ln327_3_fu_1896_p3 <= 
        trunc_ln328_3_reg_2352_pp0_iter17_reg when (and_ln327_3_fu_1891_p2(0) = '1') else 
        select_ln330_8_fu_1879_p3;
    select_ln327_4_fu_1934_p3 <= 
        trunc_ln328_4_reg_2394_pp0_iter17_reg when (and_ln327_4_fu_1929_p2(0) = '1') else 
        select_ln330_10_fu_1917_p3;
    select_ln327_fu_1858_p3 <= 
        trunc_ln328_reg_2310_pp0_iter17_reg when (and_ln327_fu_1853_p2(0) = '1') else 
        select_ln330_6_fu_1841_p3;
    select_ln330_10_fu_1917_p3 <= 
        ap_const_lv24_0 when (or_ln330_4_reg_2485(0) = '1') else 
        select_ln337_4_fu_1911_p3;
    select_ln330_6_fu_1841_p3 <= 
        ap_const_lv8_0 when (or_ln330_reg_2445(0) = '1') else 
        select_ln337_fu_1835_p3;
    select_ln330_7_fu_1674_p3 <= 
        trunc_ln331_8_fu_1649_p1 when (and_ln330_7_fu_1668_p2(0) = '1') else 
        ap_const_lv16_0;
    select_ln330_8_fu_1879_p3 <= 
        ap_const_lv16_0 when (or_ln330_3_reg_2465(0) = '1') else 
        select_ln337_3_fu_1873_p3;
    select_ln330_9_fu_1785_p3 <= 
        trunc_ln331_10_fu_1760_p1 when (and_ln330_9_fu_1779_p2(0) = '1') else 
        ap_const_lv24_0;
    select_ln330_fu_1563_p3 <= 
        trunc_ln331_6_fu_1538_p1 when (and_ln330_fu_1557_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln337_3_fu_1873_p3 <= 
        shl_ln339_3_fu_1868_p2 when (and_ln337_3_reg_2460(0) = '1') else 
        select_ln330_7_reg_2455;
    select_ln337_4_fu_1911_p3 <= 
        shl_ln339_4_fu_1906_p2 when (and_ln337_4_reg_2480(0) = '1') else 
        select_ln330_9_reg_2475;
    select_ln337_fu_1835_p3 <= 
        shl_ln339_fu_1830_p2 when (and_ln337_reg_2440(0) = '1') else 
        select_ln330_reg_2435;
    select_ln345_2_fu_1999_p3 <= 
        sub_ln455_3_fu_1960_p2 when (p_Result_7_fu_1953_p3(0) = '1') else 
        select_ln327_3_reg_2496;
    select_ln345_fu_1984_p3 <= 
        sub_ln455_fu_1948_p2 when (p_Result_s_fu_1941_p3(0) = '1') else 
        select_ln327_reg_2490;
    select_ln43_fu_1303_p3 <= 
        row_reg_226 when (icmp_ln44_fu_1298_p2(0) = '1') else 
        ap_const_lv11_0;
    sh_amt_10_fu_1736_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(trunc_ln326_4_reg_2413));
    sh_amt_10cast_fu_1903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_10_reg_2470),24));
    sh_amt_6_fu_1514_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(trunc_ln326_reg_2329));
    sh_amt_6cast_fu_1827_p1 <= sh_amt_6_reg_2430(8 - 1 downto 0);
    sh_amt_7_fu_1419_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln311_3_fu_1405_p1));
    sh_amt_8_fu_1625_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(trunc_ln326_3_reg_2371));
    sh_amt_8cast_fu_1865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_8_reg_2450),16));
    sh_amt_9_fu_1472_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln311_4_fu_1458_p1));
    sh_amt_fu_1366_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln311_fu_1352_p1));
    shl_ln1349_2_fu_2006_p3 <= (select_ln345_2_fu_1999_p3 & ap_const_lv8_0);
    shl_ln339_3_fu_1868_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln328_3_reg_2352_pp0_iter17_reg),to_integer(unsigned('0' & sh_amt_8cast_fu_1865_p1(16-1 downto 0)))));
    shl_ln339_4_fu_1906_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln328_4_reg_2394_pp0_iter17_reg),to_integer(unsigned('0' & sh_amt_10cast_fu_1903_p1(24-1 downto 0)))));
    shl_ln339_fu_1830_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln328_reg_2310_pp0_iter17_reg),to_integer(unsigned('0' & sh_amt_6cast_fu_1827_p1(8-1 downto 0)))));
    shl_ln_fu_1991_p3 <= (select_ln345_fu_1984_p3 & ap_const_lv16_0);
    sub_ln455_3_fu_1960_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(select_ln327_3_reg_2496));
    sub_ln455_4_fu_1972_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(select_ln327_4_reg_2502));
    sub_ln455_fu_1948_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(select_ln327_reg_2490));
    trunc_ln1497_1_fu_692_p4 <= hwin_6_V_fu_146(23 downto 16);
    trunc_ln1497_2_fu_804_p4 <= hwin_9_V_fu_158(23 downto 16);
    trunc_ln1497_3_fu_836_p4 <= hwin_10_V_fu_162(23 downto 16);
    trunc_ln1497_4_fu_868_p4 <= hwin_11_V_fu_166(23 downto 16);
    trunc_ln1497_5_fu_900_p4 <= hwin_12_V_fu_170(23 downto 16);
    trunc_ln1497_6_fu_932_p4 <= hwin_13_V_fu_174(23 downto 16);
    trunc_ln1497_9_fu_548_p4 <= hwin_2_V_fu_130(23 downto 16);
    trunc_ln1497_s_fu_660_p4 <= hwin_5_V_fu_142(23 downto 16);
    trunc_ln1_fu_468_p4 <= hwin_V_1_1_i_fu_122(15 downto 8);
    trunc_ln2_fu_482_p4 <= hwin_1_V_fu_126(23 downto 16);
    trunc_ln306_3_fu_1391_p1 <= reg_3_fu_1388_p1(63 - 1 downto 0);
    trunc_ln306_4_fu_1444_p1 <= reg_4_fu_1441_p1(63 - 1 downto 0);
    trunc_ln306_fu_1338_p1 <= reg_fu_1335_p1(63 - 1 downto 0);
    trunc_ln315_3_fu_1605_p1 <= reg_3_reg_2346(52 - 1 downto 0);
    trunc_ln315_4_fu_1716_p1 <= reg_4_reg_2388(52 - 1 downto 0);
    trunc_ln315_fu_1494_p1 <= reg_reg_2304(52 - 1 downto 0);
    trunc_ln326_3_fu_1425_p1 <= sh_amt_7_fu_1419_p2(10 - 1 downto 0);
    trunc_ln326_4_fu_1478_p1 <= sh_amt_9_fu_1472_p2(10 - 1 downto 0);
    trunc_ln326_fu_1372_p1 <= sh_amt_fu_1366_p2(10 - 1 downto 0);
    trunc_ln328_3_fu_1409_p1 <= reg_3_fu_1388_p1(16 - 1 downto 0);
    trunc_ln328_4_fu_1462_p1 <= reg_4_fu_1441_p1(24 - 1 downto 0);
    trunc_ln328_fu_1356_p1 <= reg_fu_1335_p1(8 - 1 downto 0);
    trunc_ln331_10_fu_1760_p1 <= lshr_ln331_4_fu_1754_p2(24 - 1 downto 0);
    trunc_ln331_6_fu_1538_p1 <= lshr_ln331_fu_1532_p2(8 - 1 downto 0);
    trunc_ln331_7_fu_1636_p1 <= sh_amt_7_reg_2365(6 - 1 downto 0);
    trunc_ln331_8_fu_1649_p1 <= lshr_ln331_3_fu_1643_p2(16 - 1 downto 0);
    trunc_ln331_9_fu_1747_p1 <= sh_amt_9_reg_2407(6 - 1 downto 0);
    trunc_ln331_fu_1525_p1 <= sh_amt_reg_2323(6 - 1 downto 0);
    trunc_ln44_10_fu_426_p1 <= hwin_10_V_fu_162(8 - 1 downto 0);
    trunc_ln44_11_fu_430_p1 <= hwin_11_V_fu_166(8 - 1 downto 0);
    trunc_ln44_12_fu_434_p1 <= hwin_12_V_fu_170(8 - 1 downto 0);
    trunc_ln44_13_fu_438_p1 <= hwin_13_V_fu_174(8 - 1 downto 0);
    trunc_ln44_1_fu_398_p1 <= hwin_1_V_fu_126(8 - 1 downto 0);
    trunc_ln44_2_fu_402_p1 <= hwin_2_V_fu_130(8 - 1 downto 0);
    trunc_ln44_3_fu_406_p1 <= hwin_3_V_fu_134(8 - 1 downto 0);
    trunc_ln44_4_fu_1093_p1 <= hwin_4_V_load_reg_2142(8 - 1 downto 0);
    trunc_ln44_5_fu_410_p1 <= hwin_5_V_fu_142(8 - 1 downto 0);
    trunc_ln44_6_fu_414_p1 <= hwin_6_V_fu_146(8 - 1 downto 0);
    trunc_ln44_7_fu_418_p1 <= hwin_7_V_fu_150(8 - 1 downto 0);
    trunc_ln44_8_fu_1096_p1 <= hwin_8_V_load_reg_2149(8 - 1 downto 0);
    trunc_ln44_9_fu_422_p1 <= hwin_9_V_fu_158(8 - 1 downto 0);
    trunc_ln44_fu_394_p1 <= hwin_V_1_1_i_fu_122(8 - 1 downto 0);
    trunc_ln47_fu_446_p1 <= in_data_TDATA_int_regslice(8 - 1 downto 0);
    trunc_ln691_11_fu_562_p4 <= hwin_2_V_fu_130(15 downto 8);
    trunc_ln691_12_fu_580_p4 <= hwin_3_V_fu_134(23 downto 16);
    trunc_ln691_13_fu_610_p4 <= hwin_3_V_fu_134(15 downto 8);
    trunc_ln691_14_fu_1108_p4 <= hwin_4_V_load_reg_2142(23 downto 16);
    trunc_ln691_15_fu_1121_p4 <= hwin_4_V_load_reg_2142(15 downto 8);
    trunc_ln691_16_fu_674_p4 <= hwin_5_V_fu_142(15 downto 8);
    trunc_ln691_17_fu_706_p4 <= hwin_6_V_fu_146(15 downto 8);
    trunc_ln691_18_fu_724_p4 <= hwin_7_V_fu_150(23 downto 16);
    trunc_ln691_19_fu_754_p4 <= hwin_7_V_fu_150(15 downto 8);
    trunc_ln691_20_fu_1195_p4 <= hwin_8_V_load_reg_2149(23 downto 16);
    trunc_ln691_21_fu_1208_p4 <= hwin_8_V_load_reg_2149(15 downto 8);
    trunc_ln691_22_fu_818_p4 <= hwin_9_V_fu_158(15 downto 8);
    trunc_ln691_23_fu_850_p4 <= hwin_10_V_fu_162(15 downto 8);
    trunc_ln691_24_fu_882_p4 <= hwin_11_V_fu_166(15 downto 8);
    trunc_ln691_25_fu_914_p4 <= hwin_12_V_fu_170(15 downto 8);
    trunc_ln691_26_fu_946_p4 <= hwin_13_V_fu_174(15 downto 8);
    trunc_ln691_27_fu_996_p4 <= in_data_TDATA_int_regslice(23 downto 16);
    trunc_ln691_28_fu_1042_p4 <= in_data_TDATA_int_regslice(15 downto 8);
    trunc_ln691_s_fu_506_p4 <= hwin_1_V_fu_126(15 downto 8);
    trunc_ln_fu_454_p4 <= hwin_V_1_1_i_fu_122(23 downto 16);

    w_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, w_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            w_blk_n <= w_empty_n;
        else 
            w_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    w_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, h_empty_n, w_empty_n)
    begin
        if ((not(((w_empty_n = ap_const_logic_0) or (h_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            w_read <= ap_const_logic_1;
        else 
            w_read <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln323_3_fu_1886_p2 <= (icmp_ln323_3_reg_2358_pp0_iter17_reg xor ap_const_lv1_1);
    xor_ln323_4_fu_1924_p2 <= (icmp_ln323_4_reg_2400_pp0_iter17_reg xor ap_const_lv1_1);
    xor_ln323_fu_1848_p2 <= (icmp_ln323_reg_2316_pp0_iter17_reg xor ap_const_lv1_1);
    xor_ln327_3_fu_1657_p2 <= (or_ln327_3_fu_1653_p2 xor ap_const_lv1_1);
    xor_ln327_4_fu_1768_p2 <= (or_ln327_4_fu_1764_p2 xor ap_const_lv1_1);
    xor_ln327_fu_1546_p2 <= (or_ln327_fu_1542_p2 xor ap_const_lv1_1);
    xor_ln329_3_fu_1687_p2 <= (or_ln329_3_fu_1682_p2 xor ap_const_lv1_1);
    xor_ln329_4_fu_1798_p2 <= (or_ln329_4_fu_1793_p2 xor ap_const_lv1_1);
    xor_ln329_fu_1576_p2 <= (or_ln329_fu_1571_p2 xor ap_const_lv1_1);
    xor_ln330_3_fu_1699_p2 <= (icmp_ln330_3_fu_1620_p2 xor ap_const_lv1_1);
    xor_ln330_4_fu_1810_p2 <= (icmp_ln330_4_fu_1731_p2 xor ap_const_lv1_1);
    xor_ln330_fu_1588_p2 <= (icmp_ln330_fu_1509_p2 xor ap_const_lv1_1);
    zext_ln1348_4_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_42_fu_520_p2),10));
    zext_ln1348_5_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_47_reg_2165),11));
    zext_ln1348_6_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_57_fu_1166_p2),12));
    zext_ln1348_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1_fu_468_p4),9));
    zext_ln1497_19_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1497_9_fu_548_p4),9));
    zext_ln1497_20_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1497_s_fu_660_p4),10));
    zext_ln1497_21_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1497_1_fu_692_p4),9));
    zext_ln1497_22_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1497_2_fu_804_p4),9));
    zext_ln1497_23_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1497_3_fu_836_p4),9));
    zext_ln1497_24_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1497_4_fu_868_p4),9));
    zext_ln1497_25_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1497_5_fu_900_p4),9));
    zext_ln1497_26_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1497_6_fu_932_p4),9));
    zext_ln1497_4_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_fu_496_p2),10));
    zext_ln1497_5_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_45_reg_2160),11));
    zext_ln1497_6_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_53_fu_1147_p2),12));
    zext_ln1497_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_454_p4),9));
    zext_ln311_3_fu_1405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_3_fu_1395_p4),12));
    zext_ln311_4_fu_1458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_4_fu_1448_p4),12));
    zext_ln311_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_fu_1342_p4),12));
    zext_ln320_3_fu_1616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_8_fu_1608_p3),54));
    zext_ln320_4_fu_1727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_10_fu_1719_p3),54));
    zext_ln320_fu_1505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_6_fu_1497_p3),54));
    zext_ln331_3_fu_1639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln331_7_fu_1636_p1),54));
    zext_ln331_4_fu_1750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln331_9_fu_1747_p1),54));
    zext_ln331_fu_1528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln331_fu_1525_p1),54));
    zext_ln44_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_reg_226),32));
    zext_ln47_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln47_fu_446_p1),9));
    zext_ln51_10_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_12_fu_434_p1),9));
    zext_ln51_1_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_43_fu_538_p2),10));
    zext_ln51_2_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_49_reg_2170),11));
    zext_ln51_3_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_61_fu_1185_p2),12));
    zext_ln51_4_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_2_fu_402_p1),9));
    zext_ln51_5_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_5_fu_410_p1),10));
    zext_ln51_6_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_6_fu_414_p1),9));
    zext_ln51_7_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_9_fu_422_p1),9));
    zext_ln51_8_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_10_fu_426_p1),9));
    zext_ln51_9_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_11_fu_430_p1),9));
    zext_ln51_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_fu_394_p1),9));
    zext_ln691_39_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_s_fu_506_p4),9));
    zext_ln691_40_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_1_fu_398_p1),9));
    zext_ln691_41_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_11_fu_562_p4),9));
    zext_ln691_42_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_12_fu_580_p4),9));
    zext_ln691_43_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_44_fu_594_p2),10));
    zext_ln691_44_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_13_fu_610_p4),9));
    zext_ln691_45_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_46_fu_624_p2),10));
    zext_ln691_46_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_3_fu_406_p1),9));
    zext_ln691_47_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_48_fu_644_p2),10));
    zext_ln691_48_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_14_fu_1108_p4),11));
    zext_ln691_49_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_15_fu_1121_p4),11));
    zext_ln691_50_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_4_fu_1093_p1),11));
    zext_ln691_51_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_16_fu_674_p4),10));
    zext_ln691_52_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_17_fu_706_p4),9));
    zext_ln691_53_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_18_fu_724_p4),9));
    zext_ln691_54_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_51_fu_738_p2),10));
    zext_ln691_55_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_52_reg_2175),11));
    zext_ln691_56_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_19_fu_754_p4),9));
    zext_ln691_57_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_55_fu_768_p2),10));
    zext_ln691_58_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_56_reg_2180),11));
    zext_ln691_59_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_7_fu_418_p1),9));
    zext_ln691_60_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_59_fu_788_p2),10));
    zext_ln691_61_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_60_reg_2185),11));
    zext_ln691_62_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_20_fu_1195_p4),12));
    zext_ln691_63_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_21_fu_1208_p4),12));
    zext_ln691_64_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_8_fu_1096_p1),12));
    zext_ln691_65_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_22_fu_818_p4),9));
    zext_ln691_66_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_23_fu_850_p4),9));
    zext_ln691_67_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_24_fu_882_p4),9));
    zext_ln691_68_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_25_fu_914_p4),9));
    zext_ln691_69_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_26_fu_946_p4),9));
    zext_ln691_70_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln44_13_fu_438_p1),9));
    zext_ln691_71_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_63_reg_2190_pp0_iter1_reg),12));
    zext_ln691_72_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_65_fu_970_p2),10));
    zext_ln691_73_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_66_fu_980_p2),10));
    zext_ln691_74_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_67_reg_2195_pp0_iter1_reg),12));
    zext_ln691_75_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_27_fu_996_p4),9));
    zext_ln691_76_fu_1260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_70_reg_2200_pp0_iter1_reg),12));
    zext_ln691_77_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_72_fu_1016_p2),10));
    zext_ln691_78_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_73_fu_1026_p2),10));
    zext_ln691_79_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_74_reg_2205_pp0_iter1_reg),12));
    zext_ln691_80_fu_1052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln691_28_fu_1042_p4),9));
    zext_ln691_81_fu_1277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_77_reg_2210_pp0_iter1_reg),12));
    zext_ln691_82_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_79_fu_1062_p2),10));
    zext_ln691_83_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_80_fu_1072_p2),10));
    zext_ln691_84_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_81_reg_2215_pp0_iter1_reg),12));
    zext_ln691_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2_fu_482_p4),9));
end behav;
